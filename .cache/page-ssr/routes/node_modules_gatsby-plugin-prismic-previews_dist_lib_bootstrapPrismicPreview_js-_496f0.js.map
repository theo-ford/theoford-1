{"version":3,"file":"node_modules_gatsby-plugin-prismic-previews_dist_lib_bootstrapPrismicPreview_js-_496f0.js","mappings":"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AA4C,kCAAkC;AAC9E;AACA;;;;;;;;;;AC9Ba;;AAEb,8CAA6C,EAAE,aAAa,EAAC;;AAE7D,gCAAgC;;AAEhC,6BAA6B,mBAAO,CAAC,sBAAQ;AAC7C,2BAA2B,mBAAO,CAAC,kBAAM;AACzC,0BAA0B,mBAAO,CAAC,gBAAK;AACvC,gCAAgC,mBAAO,CAAC,+DAAY;AACpD,4BAA4B,mBAAO,CAAC,oBAAO;AAC3C,2BAA2B,mBAAO,CAAC,kBAAM;;AAEzC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;;AAEA;AACA,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B,UAAU;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uIAA2B;AACtC,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kFAAkF;AAClF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,yBAAyB,kCAAkC;AAC9D;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,mCAAmC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iHAAiH,UAAU,IAAI,YAAY;AAC3I;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,+EAA+E,YAAY,UAAU,YAAY;AACjH;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,SAAS,kBAAkB;AAC3B,aAAa,kBAAkB;AAC/B,gBAAgB,kBAAkB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B,SAAS;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,SAAS;AAC9E;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oEAAoE,YAAY,QAAQ,eAAe;AACvG,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yEAAyE,WAAW,IAAI,YAAY;AACpG;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,YAAY,cAAc,YAAY;AACnF;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,4EAA4E,WAAW,IAAI,YAAY;AACvG;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,GAAG;AACf,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB,GAAG;AACH;AACA,4CAA4C;AAC5C,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,8BAA8B,WAAW,mBAAmB;AAC5D,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB;AACA,yBAAyB,MAAM;AAC/B;AACA;;AAEA;AACA,YAAY,MAAM;AAClB;AACA,yBAAyB,OAAO;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,QAAQ,kBAAkB;AAC1B,YAAY,kBAAkB;AAC9B,QAAQ,kBAAkB;AAC1B,WAAW,kBAAkB;AAC7B,QAAQ,kBAAkB;AAC1B,WAAW,kBAAkB;AAC7B,SAAS,kBAAkB;AAC3B,WAAW,kBAAkB;AAC7B,YAAY;AACZ,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,QAAQ,kBAAkB;AAC1B,WAAW,kBAAkB;AAC7B,OAAO,kBAAkB;AACzB,eAAe,kBAAkB;AACjC,eAAe,kBAAkB;AACjC,YAAY,kBAAkB;AAC9B,UAAU;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,MAAM;AAClC;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,WAAW,kBAAkB;AAC7B,QAAQ,kBAAkB;AAC1B,YAAY,kBAAkB;AAC9B,aAAa,kBAAkB;AAC/B,UAAU,kBAAkB;AAC5B,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA,uCAAuC,aAAa,kBAAkB,YAAY;;AAElF;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,oFAAoF,SAAS;AAC7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sGAAsG,YAAY;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,YAAY;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB,kBAAkB;AAClB,kBAAkB;;;;;;;;;;;;;;;;;;;AC1vDe;AACA;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,8BAA8B;AAC9B,WAAW,+CAAM,QAAQ,+CAAQ,GAAG,+CAA+C;AACnF;AACA;;;;;;;;;;ACjBa;;AAEb,eAAe,mBAAO,CAAC,0BAAU;AACjC,mBAAmB,mBAAO,CAAC,0EAAyB;;AAEpD;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B,gDAAgD,4BAA4B;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChMjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACO;AACP;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACO;AACP,oCAAoC;AACpC;AACA;AACO;AACP;AACA;AACA;AACO;AACP,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACO;AACP,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA;AACO;AACP;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACO;AACP,kDAAkD,QAAQ;AAC1D,yCAAyC,QAAQ;AACjD,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACO;AACP,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,iBAAiB,uFAAuF,cAAc;AACtH,uBAAuB,gCAAgC,qCAAqC,2CAA2C;AACvI,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACO;AACP;AACA,iBAAiB,6CAA6C,UAAU,sDAAsD,cAAc;AAC5I,0BAA0B,6BAA6B,oBAAoB,gDAAgD,kBAAkB;AAC7I;AACA;AACO;AACP;AACA;AACA,2GAA2G,uFAAuF,cAAc;AAChN,uBAAuB,8BAA8B,gDAAgD,wDAAwD;AAC7J,6CAA6C,sCAAsC,UAAU,mBAAmB,IAAI;AACpH;AACA;AACO;AACP,iCAAiC,uCAAuC,YAAY,KAAK,OAAO;AAChG;AACA;AACA;AACA;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6CAA6C;AAC7C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5Oa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,oBAAoB;AAChE;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,iBAAiB;AACnE,mDAAmD,gBAAgB;;AAEnE,oDAAoD,iBAAiB;AACrE,6DAA6D,gBAAgB;;AAE7E,mDAAmD,iBAAiB;AACpE,4DAA4D,gBAAgB;;AAE5E,wDAAwD,sCAAsC;AAC9F,iEAAiE,qCAAqC;;AAEtG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC5La;AACb,YAAY,mBAAO,CAAC,+EAAqB;;AAEzC,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,qBAAqB;AACpE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,+CAA+C;AAChF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,uCAAuC;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,2CAA2C;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,6BAA6B,uCAAuC;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,6CAA6C;AACxE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,6BAA6B;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,2CAA2C;AAC1E;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACvMa;;AAEb,oBAAoB,mBAAO,CAAC,0EAAoB;AAChD,cAAc,mBAAO,CAAC,0DAAY;AAClC,aAAa,mBAAO,CAAC,iEAAgB;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,cAAc,UAAU;AACxB,cAAc;AACd;AACA;;;;;;;;;;;;AClMa;;AAEb,mGAAwC;AACxC,wIAAkE;AAClE,oJAA8E;AAC9E,0IAAoE;AACpE,4IAAsE;AACtE,4IAAsE;AACtE,0IAAoE;AACpE,gJAA0E;AAC1E,gIAA0D;;;;;;;;;;;ACV7C;AACb,iBAAiB,mBAAO,CAAC,0BAAU;AACnC,aAAa,mBAAO,CAAC,0CAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClmCAAmC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,8CAA8C;AAC9C;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAsE;AACrH;;;;;;;;;;;AChxCa;;AAEb,oBAAoB;AACpB;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA,4BAA4B;AAC5B,yBAAyB;;AAEzB,6BAA6B;AAC7B;AACA;;AAEA,6BAA6B;AAC7B;AACA;;;;;;;;;;;;;;;;;;AClB+C;AACN;AACzC;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAsC;AAC9C;AACA,mDAAmD,UAAU,MAAM,sBAAsB,OAAO,UAAU,MAAM,GAAG;AACnH,0KAA0K,WAAW,0BAA0B,sDAAM,0CAA0C;AAC/P;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA,UAAU,iCAAiC;AAC3C,6CAA6C,SAAS;AACtD;AACA,QAAQ,KAAsC;AAC9C,+GAA+G,QAAQ,6FAA6F,sDAAM,6BAA6B;AACvP;AACA,yBAAyB,4DAAS;AAClC,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA,4BAA4B,4DAAS;AACrC,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAsC;AAClD,wMAAwM,sDAAM,0CAA0C;AACxP;AACA,kBAAkB,4DAAS;AAC3B,oBAAoB,EAAE;AACtB;AACA,MAAM;AACN;AACA,+BAA+B,4DAAS;AACxC;AACA;AACA;AACA,iCAAiC,4DAAS;AAC1C;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;AC1DA;AAGE;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA,8EAA8E,6DAA6D;AAC3I;AACA;AACA;AACA;AACuD;AACR;AACN;AACgB;AACF;AACJ;AACM;AACI;AACI;AACR;AACR;AACW;AACF;AACF;AACA;AACX;AACM;AACd;AAC8B;AACR;AACM;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,QAAQ,8EAAoB;AAC5B,UAAU,IAAsC;AAChD;AACA,oBAAoB,iEAAY;AAChC;AACA;AACA;AACA,iCAAiC,wEAAiB;AAClD,iCAAiC,gFAAqB;AACtD,0GAA0G,yBAAyB,gKAAgK,eAAe,qDAAqD,eAAe,6BAA6B,sDAAM,0BAA0B;AACnb;AACA;AACA;AACA,MAAM;AACN,sBAAsB,gFAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,gBAAgB,iEAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iEAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,YAAY,oCAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oEAAa,SAAS,8CAAM;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAa,SAAS,8CAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oEAAa,SAAS,8CAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oEAAa;AAC5C,MAAM,8DAAU;AAChB,MAAM,8CAAM,UAAU,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAa;AACvC,MAAM,8DAAU;AAChB,MAAM,8CAAM,UAAU,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oEAAa;AACrD,MAAM,8DAAU;AAChB,MAAM,8CAAM,UAAU,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oEAAa,SAAS,8DAAU;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAa,SAAS,8DAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oEAAa,SAAS,8DAAU;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAa,SAAS,sEAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oEAAa,SAAS,sEAAc;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAa,SAAS,sEAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oEAAa,SAAS,sEAAc;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAa,SAAS,sEAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oEAAa,SAAS,sEAAc;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iEAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uEAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qEAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iEAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uEAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kCAAkC,IAAI;AAC9D,gEAAgE,sBAAsB;AACtF,kGAAkG,sBAAsB;AACxH,WAAW,iEAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,2DAAM,aAAa,iCAAiC;AACtiDAAiD,iBAAiB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAY,oBAAoB,KAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,qBAAqB,2EAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAW;AACxB,MAAM;AACN,aAAa,uEAAc;AAC3B,MAAM;AACN,wBAAwB,6DAAS;AACjC;AACA;AACA;AACA;AACA,WAAW,qEAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,gBAAgB,iEAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kEAAY;AAC9B;AACA;AACA;AACA,kBAAkB,sEAAc;AAChC;AACA;AACA,kBAAkB,oEAAa,8CAA8C,cAAc;AAC3F;AACA;AACA,cAAc,iEAAY;AAC1B;AACA;AAME;AACF;;;;;;;;;;;;;;;;AC/pCiD;AACjD,6BAA6B,0DAAY;AACzC;AAGE;AACF;;;;;;;;;;;;;;;;ACNiD;AACjD,4BAA4B,0DAAY;AACxC;AAGE;AACF;;;;;;;;;;;;;;;;ACNiD;AACjD,2BAA2B,0DAAY;AACvC;AAGE;AACF;;;;;;;;;;;;;;;ACNA;AACA,8EAA8E,6DAA6D;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;AClBA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK,GAAG,KAAK,EAAE,OAAO,EAAE,cAAc;AACrtPwD;AACC;AACzD;AACA,MAAM,sEAAgB;AACtB,sBAAsB,eAAe;AACrC,IAAI;AACJ,cAAc,iEAAY,kDAAkD,eAAe;AAC3F;AACA;AAGE;AACF;;;;;;;;;;;;;;;;;ACZwD;AACC;AACzD;AACA,MAAM,sEAAgB;AACtB,sBAAsB,eAAe;AACrC,IAAI;AACJ,cAAc,iEAAY,kDAAkD,eAAe;AAC3F;AACA;AAGE;AACF;;;;;;;;;;;;;;;;ACZwD;AACxD;AACA;AACA;AACA,IAAI;AACJ,cAAc,iEAAY,0DAA0D,mBAAmB;AACvG;AACA;AAGE;AACF;;;;;;;;;;;;;;;;;;;;ACXgG;AAC6D;AAC7J;AACA;AACA;AACA,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,gFAAqB;AACpC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB,eAAe,yEAAc;AAC7B,WAAW,iEAAO;AAClB,eAAe,yEAAc;AAC7B,WAAW,iEAAO;AAClB,eAAe,6EAAkB;AACjC,WAAW,iEAAO;AAClB,eAAe,+EAAoB;AACnC,WAAW,iEAAO;AAClB;AACA,eAAe,wEAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,sEAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB,uEAAkB;AACrC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,WAAW,8DAAS;AACpB,IAAI;AACJ;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;;AC5FkD;AACa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,4EAAmB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,eAAe;AACf;AACA;AACA,SAAS,0DAAQ;AACjB,SAAS,0DAAQ;AACjB;AACA,SAAS,0DAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAAQ;AACjB;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;AC9CyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,iBAAiB;AACjB;AACA,WAAW,2DAAQ;AACnB,IAAI;AACJ;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;ACpBkD;AAClD;AACA;AACA;AACA,eAAe,0DAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,6BAA6B;AAC7G;AACA;AAGE;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBE;AACF;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACXA;AACA,mCAAmC,GAAG;AACtC;AAGE;AACF;;;;;;;;;;;;;;;;ACN2C;AAC3C,0CAA0C;AAC1C;AACA;AACA,kDAAkD,wDAAS;AAC3D;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;ACN6C;AAC7C;AACA,4CAA4C,qDAAO,CAAC,GAAG,KAAK;AAC5D;AAGE;AACF;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;;AC1CsC;AACK;AAC3C;AACA,SAAS,8CAAM,qBAAqB,wDAAS;AAC7C;AAGE;AACF;;;;;;;;;;;;;;;;ACRuC;AACvC;AACA,SAAS,oDAAO;AAChB;AAGE;AACF;;;;;;;;;;;;;;;;ACPyD;AACzD;AACA;AACA;AACA,cAAc,iEAAY;AAC1B;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;ACXuC;AACvC;AACA,SAAS,oDAAO;AAChB;AAGE;AACF;;;;;;;;;;;;;;;;ACPuC;AACvC;AACA,SAAS,oDAAO;AAChB;AAGE;AACF;;;;;;;;;;;;;;;;ACPuC;AACvC;AACA,iCAAiC;AACjC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,iBAAiB,+CAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACpBA;AACA,mCAAmC,EAAE;AACrC;AAGE;AACF;;;;;;;;;;;;;;;;;;;;;;;;;ACNkD;AACY;AAChB;AACD;AAC7C;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA,aAAa,IAAI,EAAE,eAAe,GAAG,kBAAkB,IAAI,IAAI;AAC/D;AACA;AACA,gBAAgB,eAAe,GAAG,0DAAU,YAAY;AACxD;AACA;AACA,8BAA8B,SAAS,SAAS,0DAAU,WAAW,GAAG,gCAAgC,0DAAU,iBAAiB,SAAS;AAC5I;AACA;AACA,YAAY,sEAAgB;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA,8BAA8B,sBAAsB,sBAAsB,iBAAiB,0BAA0B,0BAA0B,GAAG,eAAe,GAAG,iBAAiB;AACrL;AACA;AACA;AACA,SAAS,0DAAQ;AACjB,yBAAyB,0DAAU,gBAAgB,IAAI,8BAA8B,iBAAiB,SAAS,2BAA2B,eAAe,GAAG,kBAAkB;AAC9K;AACA,SAAS,0DAAQ;AACjB,yBAAyB,0DAAM,0BAA0B,GAAG,eAAe,GAAG,kBAAkB;AAChG;AACA,SAAS,0DAAQ;AACjB,yBAAyB,cAAc,GAAG,eAAe,GAAG,kBAAkB;AAC9E;AACA;AACA;AACA;AACA,mBAAmB,0DAAU;AAC7B;AASE;AACF;;;;;;;;;;;;;;;;;ACrDsC;AACK;AAC3C;AACA,SAAS,8CAAM,sBAAsB,wDAAS;AAC9C;AAGE;AACF;;;;;;;;;;;;;;;;ACRsC;AACtC;AACA,SAAS,8CAAM;AACf;AAGE;AACF;;;;;;;;;;;;;;;ACPA;AAGE;AACF;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACxBA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;ACZoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8DAAgB;AAC1B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,sBAAsB,8DAAgB,2BAA2B,8DAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAgB;AACxC;AACA,gBAAgB,8DAAgB;AAChC;AACA;AACA,QAAQ;AACR;AACA,gBAAgB,8DAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;AC1HA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;AChBqC;AACrC;AACA,4BAA4B,kDAAM;AAClC;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;;AClBoD;AACpD;AACA,GAAG,8DAAgB;AACnB,GAAG,8DAAgB;AACnB,GAAG,8DAAgB;AACnB,GAAG,8DAAgB;AACnB;AAGE;AACF;;;;;;;;;;;;;;;;ACVsD;AACtD;AACA;AACA,wCAAwC,+DAAwB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AAGE;AACF;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACF","sources":["webpack://studio-prismic-starter/./node_modules/camelcase/index.js","webpack://studio-prismic-starter/../src/image-utils.ts","webpack://studio-prismic-starter/../src/components/hooks.ts","webpack://studio-prismic-starter/../src/components/placeholder.tsx","webpack://studio-prismic-starter/../src/components/picture.tsx","webpack://studio-prismic-starter/../src/components/main-image.tsx","webpack://studio-prismic-starter/../src/components/layout-wrapper.tsx","webpack://studio-prismic-starter/../src/components/gatsby-image.server.tsx","webpack://studio-prismic-starter/../src/components/static-image.server.tsx","webpack://studio-prismic-starter/../../src/constants.ts","webpack://studio-prismic-starter/../../../src/lib/bootstrapPrismicPreview.ts","webpack://studio-prismic-starter/../../../src/lib/fetchLinkedDocuments.ts","webpack://studio-prismic-starter/../../../src/lib/fetchNewDocuments.ts","webpack://studio-prismic-starter/../../../src/lib/fetchPublishedDocumentIDs.ts","webpack://studio-prismic-starter/../../../src/lib/fmtLog.ts","webpack://studio-prismic-starter/../../../src/lib/getClient.ts","webpack://studio-prismic-starter/../../../src/lib/getPluginOptions.ts","webpack://studio-prismic-starter/../../../src/lib/getRepositoryConfig.ts","webpack://studio-prismic-starter/../../../src/lib/isReleasePreview.ts","webpack://studio-prismic-starter/../../../src/lib/normalizeDocument.ts","webpack://studio-prismic-starter/../../../src/lib/pascalCase.ts","webpack://studio-prismic-starter/../../../src/lib/uuid.ts","webpack://studio-prismic-starter/../src/buildURL.ts","webpack://studio-prismic-starter/../src/buildPixelDensitySrcSet.ts","webpack://studio-prismic-starter/../src/buildWidthSrcSet.ts","webpack://studio-prismic-starter/../src/Client.ts","webpack://studio-prismic-starter/./node_modules/lower-case/dist.es2015/index.js","webpack://studio-prismic-starter/./node_modules/no-case/dist.es2015/index.js","webpack://studio-prismic-starter/./node_modules/node-fetch/lib/index.js","webpack://studio-prismic-starter/./node_modules/pascal-case/dist.es2015/index.js","webpack://studio-prismic-starter/./node_modules/tr46/index.js","webpack://studio-prismic-starter/./node_modules/tslib/tslib.es6.js","webpack://studio-prismic-starter/./node_modules/webidl-conversions/lib/index.js","webpack://studio-prismic-starter/./node_modules/whatwg-url/lib/URL-impl.js","webpack://studio-prismic-starter/./node_modules/whatwg-url/lib/URL.js","webpack://studio-prismic-starter/./node_modules/whatwg-url/lib/public-api.js","webpack://studio-prismic-starter/./node_modules/whatwg-url/lib/url-state-machine.js","webpack://studio-prismic-starter/./node_modules/whatwg-url/lib/utils.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/buildQueryURL.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/cookie.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/createClient.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/errors/ForbiddenError.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/errors/NotFoundError.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/errors/ParsingError.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/errors/PrismicError.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/filter.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/getGraphQLEndpoint.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/getRepositoryEndpoint.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/getRepositoryName.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/asHTML.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/asLink.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/asText.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/documentToLinkField.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/helpers/isFilled.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/isRepositoryEndpoint.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/isRepositoryName.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/appendFilters.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/castArray.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/castThunk.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/devMsg.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/escapeHTML.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/everyTagFilter.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/findMasterRef.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/findRef.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/findRefByID.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/findRefByLabel.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/getPreviewCookie.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/minifyGraphQLQuery.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/serializerHelpers.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/someTagsFilter.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/lib/typeFilter.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/package.json.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/model/sliceZone.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/model/types.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/value/link.js","webpack://studio-prismic-starter/./node_modules/@prismicio/client/dist/types/value/richText.js","webpack://studio-prismic-starter/./node_modules/@prismicio/richtext/dist/asText.js","webpack://studio-prismic-starter/./node_modules/@prismicio/richtext/dist/asTree.js","webpack://studio-prismic-starter/./node_modules/@prismicio/richtext/dist/composeSerializers.js","webpack://studio-prismic-starter/./node_modules/@prismicio/richtext/dist/serialize.js","webpack://studio-prismic-starter/./node_modules/@prismicio/richtext/dist/types.js","webpack://studio-prismic-starter/./node_modules/@prismicio/richtext/dist/wrapMapSerializer.js","webpack://studio-prismic-starter/./node_modules/@prismicio/types/dist/value/richText.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import type { ImgixURLParams } from \"imgix-url-builder\";\n\nexport const PUBLIC_MODELS_FILE_NAME_SEED_CACHE_KEY =\n\t\"publicModelsFileNameSeed\";\n\n/**\n * Default Imgix parameters applied to all images.\n */\nexport const DEFAULT_IMGIX_PARAMS: ImgixURLParams = {\n\tfit: \"max\",\n};\n","import { CustomTypeModel, SharedSliceModel } from \"@prismicio/client\";\nimport { withAssetPrefix } from \"gatsby\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nimport { fetchLinkedDocuments } from \"./fetchLinkedDocuments\";\nimport { fetchNewDocuments } from \"./fetchNewDocuments\";\nimport { fetchPublishedDocumentIDs } from \"./fetchPublishedDocumentIDs\";\nimport { fmtLog } from \"./fmtLog\";\nimport { getClient } from \"./getClient\";\nimport { getPluginOptions } from \"./getPluginOptions\";\nimport { getRepositoryConfig } from \"./getRepositoryConfig\";\nimport { normalizeDocument } from \"./normalizeDocument\";\n\nconst bootstrapPrismicPreview = async (\n\trepositoryName: string,\n\tabortController: AbortController,\n): Promise<void> => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\t// Only bootstrap once per session\n\tif (state.isBootstrapped) {\n\t\treturn;\n\t}\n\n\tconst pluginOptions = getPluginOptions(repositoryName);\n\tif (!pluginOptions) {\n\t\tconsole.error(\n\t\t\tfmtLog(\n\t\t\t\trepositoryName,\n\t\t\t\t'Plugin options could not be found. Did you add \"gatsby-plugin-prismic-previews\" for this repository to your app\\'s \"gatsby-config.js\" file?',\n\t\t\t),\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst repositoryConfig = getRepositoryConfig(repositoryName);\n\tif (!repositoryConfig) {\n\t\tconsole.error(\n\t\t\tfmtLog(\n\t\t\t\trepositoryName,\n\t\t\t\t'Repository configuration could not be found. Did you add <PrismicPreviewProvider> to your \"gatsby-browser.js\" and \"gatsby-ssr.js\"? It must contain a repository configuration object for this repository.',\n\t\t\t),\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst client = getClient(pluginOptions);\n\n\tconst signal = abortController.signal;\n\n\t// @ts-expect-error - `getCachedRepository()` is a private internal\n\t// client method. We use it here to manually prime the cached\n\t// repository cache. This saves us from fetching the repository\n\t// multiple times when we run queries in parallel in the next block.\n\tawait client.getCachedRepository();\n\n\tconst [localPublishedDocumentIDs, newDocuments] = await Promise.all([\n\t\tfetchPublishedDocumentIDs({\n\t\t\tclient,\n\t\t\tabortController,\n\t\t\tpluginOptions,\n\t\t}),\n\t\tfetchNewDocuments({ client, abortController }),\n\t]);\n\n\tif (localPublishedDocumentIDs.length) {\n\t\tstate.setPublishedDocumentIDs(localPublishedDocumentIDs);\n\t}\n\n\tconst modelsRaw = await fetch(withAssetPrefix(__PUBLIC_MODELS_PATH__), {\n\t\tsignal,\n\t});\n\tconst models: Record<\n\t\tstring,\n\t\t{\n\t\t\tcustomTypeModels: CustomTypeModel[];\n\t\t\tsharedSliceModels: SharedSliceModel[];\n\t\t}\n\t> = await modelsRaw.json();\n\n\tconst modelsForRepository = models[pluginOptions.repositoryName];\n\n\tawait Promise.all([\n\t\tfetchLinkedDocuments(\n\t\t\tnewDocuments,\n\t\t\tclient,\n\t\t\tpluginOptions,\n\t\t\trepositoryConfig,\n\t\t\tmodelsForRepository.customTypeModels,\n\t\t\tmodelsForRepository.sharedSliceModels,\n\t\t\tabortController,\n\t\t),\n\t\tPromise.all(\n\t\t\tnewDocuments.map(async (doc) => {\n\t\t\t\tconst model = modelsForRepository.customTypeModels.find(\n\t\t\t\t\t(model) => model.id === doc.type,\n\t\t\t\t);\n\n\t\t\t\tif (model) {\n\t\t\t\t\tconst normalizedDocument = await normalizeDocument(\n\t\t\t\t\t\tdoc,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tmodelsForRepository.sharedSliceModels,\n\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t);\n\n\t\t\t\t\tstate.addDocument(normalizedDocument);\n\t\t\t\t}\n\t\t\t}),\n\t\t),\n\t]);\n\n\tstate.setIsBootstrapped(true);\n};\n\nexport default bootstrapPrismicPreview;\n","import {\n\tAnyRegularField,\n\tClient,\n\tCustomTypeModel,\n\tCustomTypeModelField,\n\tCustomTypeModelFieldType,\n\tCustomTypeModelGroupField,\n\tCustomTypeModelSlice,\n\tCustomTypeModelSliceType,\n\tCustomTypeModelSliceZoneField,\n\tGroupField,\n\tLinkField,\n\tPrismicDocument,\n\tSharedSlice,\n\tSharedSliceModel,\n\tSliceZone,\n} from \"@prismicio/client\";\n\nimport type { PluginOptions, RepositoryConfig } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nimport { normalizeDocument } from \"./normalizeDocument\";\n\nconst extractLinkedDocumentIDsFromField = async (\n\tlooseValue: AnyRegularField | GroupField | SliceZone,\n\tlooseModel: CustomTypeModelField,\n\tsharedSliceModels: SharedSliceModel[],\n): Promise<string[]> => {\n\tswitch (looseModel.type) {\n\t\tcase CustomTypeModelFieldType.Slices: {\n\t\t\tconst value = looseValue as SliceZone;\n\n\t\t\treturn (\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tvalue.map(async (slice) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelSliceZoneField;\n\t\t\t\t\t\tconst sliceModel = model.config?.choices?.[slice.slice_type] as\n\t\t\t\t\t\t\t| CustomTypeModelSlice\n\t\t\t\t\t\t\t| SharedSliceModel\n\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\tif (sliceModel) {\n\t\t\t\t\t\t\tif (sliceModel.type === CustomTypeModelSliceType.Slice) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\t\t\t\t\textractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\t\t\tsliceModel[\"non-repeat\"] || {},\n\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t...slice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn extractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\tsliceModel.repeat || {},\n\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t).flat();\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tsliceModel.type === CustomTypeModelSliceType.SharedSlice\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst typedSlice = slice as SharedSlice;\n\t\t\t\t\t\t\t\tconst variationModel = sharedSliceModels\n\t\t\t\t\t\t\t\t\t.find((m) => m.id === slice.slice_type)\n\t\t\t\t\t\t\t\t\t?.variations.find((m) => m.id === typedSlice.variation);\n\n\t\t\t\t\t\t\t\tif (variationModel) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\t\t\t\t\t\textractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\t\t\t\tvariationModel.primary || {},\n\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t...slice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn extractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariationModel.items || {},\n\t\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t).flat();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).flat();\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Group: {\n\t\t\tconst value = looseValue as GroupField;\n\n\t\t\treturn (\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tvalue.map(async (item) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelGroupField;\n\n\t\t\t\t\t\treturn await extractLinkedDocumentIDsFromFields(\n\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\tmodel.config?.fields || {},\n\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).flat();\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Link: {\n\t\t\tconst value = looseValue as LinkField;\n\n\t\t\tif (\"id\" in value && !value.isBroken) {\n\t\t\t\treturn [value.id];\n\t\t\t}\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn [];\n\t\t}\n\t}\n};\n\nconst extractLinkedDocumentIDsFromFields = async (\n\tfields: Record<string, AnyRegularField | GroupField | SliceZone>,\n\tmodels: Record<string, CustomTypeModelField>,\n\tsharedSliceModels: SharedSliceModel[],\n): Promise<string[]> => {\n\tconst fieldNames = Object.keys(models);\n\n\treturn (\n\t\tawait Promise.all(\n\t\t\tfieldNames.map(async (fieldName) => {\n\t\t\t\treturn extractLinkedDocumentIDsFromField(\n\t\t\t\t\tfields[fieldName],\n\t\t\t\t\tmodels[fieldName],\n\t\t\t\t\tsharedSliceModels,\n\t\t\t\t);\n\t\t\t}),\n\t\t)\n\t).flat();\n};\n\nconst extractLinkedDocumentIDs = async (\n\tdocument: PrismicDocument,\n\tcustomTypeModels: CustomTypeModel[],\n\tsharedSliceModels: SharedSliceModel[],\n): Promise<string[]> => {\n\tconst model = customTypeModels.find(\n\t\t(customTypeModel) => customTypeModel.id === document.type,\n\t);\n\n\tif (model) {\n\t\tconst fieldModels: CustomTypeModel[\"json\"][string] = Object.assign(\n\t\t\t{},\n\t\t\t...Object.values(model.json),\n\t\t);\n\n\t\tconst linkedIDs = await extractLinkedDocumentIDsFromFields(\n\t\t\tdocument.data,\n\t\t\tfieldModels,\n\t\t\tsharedSliceModels,\n\t\t);\n\n\t\tconst alternateLanguageIDs = document.alternate_languages.map(\n\t\t\t(alternateLanguage) => {\n\t\t\t\treturn alternateLanguage.id;\n\t\t\t},\n\t\t);\n\t\tlinkedIDs.push(...alternateLanguageIDs);\n\n\t\treturn linkedIDs;\n\t} else {\n\t\treturn [];\n\t}\n};\n\nexport const fetchLinkedDocuments = async (\n\tdocuments: PrismicDocument[],\n\tclient: Client,\n\tpluginOptions: PluginOptions,\n\trepositoryConfig: RepositoryConfig,\n\tcustomTypeModels: CustomTypeModel[],\n\tsharedSliceModels: SharedSliceModel[],\n\tabortController: AbortController,\n\titerationCount = 0,\n\tmaximumIterationCount = 3,\n\taggregateAlreadyFetchedIDs: string[] = [],\n): Promise<void> => {\n\tif (iterationCount >= maximumIterationCount) {\n\t\tconsole.warn(\n\t\t\t`The maximum depth to which gatsby-plugin-prismic-previews will fetch linked documents (${maximumIterationCount} levels deep) was reached. Any Link field's \\`document\\` property nested below ${maximumIterationCount} levels deep will return undefined.`,\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst alreadyFetchedIDs = [\n\t\t...aggregateAlreadyFetchedIDs,\n\t\t...documents.map((doc) => doc.id),\n\t];\n\n\tconst ids = (\n\t\tawait Promise.all(\n\t\t\tdocuments.map(async (doc) => {\n\t\t\t\treturn extractLinkedDocumentIDs(\n\t\t\t\t\tdoc,\n\t\t\t\t\tcustomTypeModels,\n\t\t\t\t\tsharedSliceModels,\n\t\t\t\t);\n\t\t\t}),\n\t\t)\n\t).flat();\n\n\tconst prunedIDs = ids.filter((id) => !alreadyFetchedIDs.includes(id));\n\n\tif (prunedIDs.length > 0) {\n\t\tconst fetchedLinkedDocuments = await client.getAllByIDs(\n\t\t\t[...new Set(prunedIDs)],\n\t\t\t{ signal: abortController.signal },\n\t\t);\n\n\t\tawait Promise.all([\n\t\t\tPromise.all(\n\t\t\t\tfetchedLinkedDocuments.map(async (doc) => {\n\t\t\t\t\tconst model = customTypeModels.find(\n\t\t\t\t\t\t(customTypeModel) => customTypeModel.id === doc.type,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (model) {\n\t\t\t\t\t\tconst normalizedDocument = await normalizeDocument(\n\t\t\t\t\t\t\tdoc,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst state = usePrismicPreviewStore.getState();\n\t\t\t\t\t\tstate.addDocument(normalizedDocument);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t\tfetchLinkedDocuments(\n\t\t\t\tfetchedLinkedDocuments,\n\t\t\t\tclient,\n\t\t\t\tpluginOptions,\n\t\t\t\trepositoryConfig,\n\t\t\t\tcustomTypeModels,\n\t\t\t\tsharedSliceModels,\n\t\t\t\tabortController,\n\t\t\t\titerationCount + 1,\n\t\t\t\tmaximumIterationCount,\n\t\t\t\t[...alreadyFetchedIDs, ...prunedIDs],\n\t\t\t),\n\t\t]);\n\t}\n};\n","import { Client, PrismicDocument, filter } from \"@prismicio/client\";\n\nimport { isReleasePreview } from \"./isReleasePreview\";\n\ntype FetchNewDocumentsArgs = {\n\tclient: Client;\n\tabortController: AbortController;\n};\n\nexport const fetchNewDocuments = async ({\n\tclient,\n\tabortController,\n}: FetchNewDocumentsArgs): Promise<PrismicDocument[]> => {\n\tconst signal = abortController.signal;\n\n\tconst first = await client.getFirst({ signal });\n\n\tif (isReleasePreview()) {\n\t\tconst rest = await client.dangerouslyGetAll({\n\t\t\tpredicates: [\n\t\t\t\tfilter.dateBetween(\n\t\t\t\t\t\"document.last_publication_date\",\n\t\t\t\t\tDate.parse(first.last_publication_date),\n\t\t\t\t\tDate.parse(first.last_publication_date) + 1000,\n\t\t\t\t),\n\t\t\t\tfilter.not(\"document.id\", first.id),\n\t\t\t],\n\t\t\tsignal,\n\t\t});\n\n\t\treturn [first, ...rest];\n\t} else {\n\t\treturn [first];\n\t}\n};\n","import { Client, getGraphQLEndpoint } from \"@prismicio/client\";\n\nimport { PluginOptions } from \"../types\";\n\nimport { isReleasePreview } from \"./isReleasePreview\";\n\ntype FetchPublishedDocumentIDsGraphQLResult = {\n\tdata: {\n\t\t_allDocuments: {\n\t\t\tpageInfo: {\n\t\t\t\tendCursor: string;\n\t\t\t\thasNextPage: boolean;\n\t\t\t};\n\t\t\tedges: {\n\t\t\t\tnode: {\n\t\t\t\t\t_meta: {\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}[];\n\t\t};\n\t};\n};\n\ntype FetchPublishedDocumentIDsArgs = {\n\tclient: Client;\n\tabortController: AbortController;\n\tpluginOptions: PluginOptions;\n};\n\nexport const fetchPublishedDocumentIDs = async ({\n\tclient,\n\tabortController,\n\tpluginOptions,\n}: FetchPublishedDocumentIDsArgs): Promise<string[]> => {\n\tif (isReleasePreview()) {\n\t\tconst endpoint =\n\t\t\tpluginOptions.graphQLEndpoint ||\n\t\t\tgetGraphQLEndpoint(pluginOptions.repositoryName);\n\n\t\tconst existingIDs: string[] = [];\n\n\t\tlet after: string | undefined;\n\t\tlet hasNextPage = false;\n\t\tdo {\n\t\t\tconst url = new URL(endpoint);\n\t\t\tconst afterStr = after ? `,after:\"${after}\"` : \"\";\n\t\t\turl.searchParams.set(\n\t\t\t\t\"query\",\n\t\t\t\t`query AllDocumentIDs{_allDocuments(first:100${afterStr}){pageInfo{endCursor,hasNextPage}edges{node{_meta{id}}}}}`,\n\t\t\t);\n\n\t\t\tconst res = await client.graphQLFetch(url.toString(), {\n\t\t\t\tsignal: abortController.signal,\n\t\t\t});\n\t\t\tconst json: FetchPublishedDocumentIDsGraphQLResult = await res.json();\n\n\t\t\tfor (let i = 0; i < json.data._allDocuments.edges.length; i++) {\n\t\t\t\texistingIDs.push(json.data._allDocuments.edges[i].node._meta.id);\n\t\t\t}\n\n\t\t\tafter = json.data._allDocuments.pageInfo.endCursor;\n\t\t\thasNextPage = json.data._allDocuments.pageInfo.hasNextPage;\n\t\t} while (hasNextPage);\n\n\t\treturn existingIDs;\n\t} else {\n\t\treturn [];\n\t}\n};\n","export const fmtLog = (repositoryName: string, text: string): string => {\n\treturn `gatsby-plugin-prismic-previews(${repositoryName}) - ${text}`;\n};\n","import type { Client } from \"@prismicio/client\";\nimport { createClient as baseCreateClient } from \"@prismicio/client\";\n\nimport type { PluginOptions } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getClient = (pluginOptions: PluginOptions): Client => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\tif (state.client) {\n\t\treturn state.client;\n\t} else {\n\t\tconst client = baseCreateClient(\n\t\t\tpluginOptions.apiEndpoint || pluginOptions.repositoryName,\n\t\t\t{\n\t\t\t\taccessToken: pluginOptions.accessToken,\n\t\t\t\troutes: pluginOptions.routes,\n\t\t\t\tdefaultParams: {\n\t\t\t\t\tlang: pluginOptions.lang || \"*\",\n\t\t\t\t\tfetchLinks: pluginOptions.fetchLinks,\n\t\t\t\t\tgraphQuery: pluginOptions.graphQuery,\n\t\t\t\t\tpredicates: pluginOptions.predicates,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tstate.setClient(client);\n\n\t\treturn client;\n\t}\n};\n","import type { PluginOptions } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getPluginOptions = (\n\trepositoryName: string,\n): PluginOptions | undefined => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\treturn state.pluginOptions[repositoryName];\n};\n","import type { RepositoryConfig } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getRepositoryConfig = (\n\trepositoryName: string,\n): RepositoryConfig | undefined => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\treturn state.repositoryConfigs.find(\n\t\t(config) => config.repositoryName === repositoryName,\n\t);\n};\n","import { getPreviewCookie } from \"./getPreviewCookie\";\n\nexport const isReleasePreview = (): boolean => {\n\treturn /\\/previews\\/.*~.*\\?websitePreviewId/.test(getPreviewCookie() || \"\");\n};\n","import {\n\tAnyRegularField,\n\tCustomTypeModel,\n\tCustomTypeModelField,\n\tCustomTypeModelFieldType,\n\tCustomTypeModelGroupField,\n\tCustomTypeModelImageField,\n\tCustomTypeModelSlice,\n\tCustomTypeModelSliceType,\n\tCustomTypeModelSliceZoneField,\n\tGroupField,\n\tImageField,\n\tImageFieldImage,\n\tLinkField,\n\tPrismicDocument,\n\tRichTextField,\n\tSharedSlice,\n\tSharedSliceModel,\n\tSliceZone,\n\tasHTML,\n\tasLink,\n\tasText,\n\tisFilled,\n} from \"@prismicio/client\";\nimport { IUrlBuilderArgs, getImageData } from \"gatsby-plugin-image\";\nimport { ImgixURLParams, buildURL } from \"imgix-url-builder\";\n\nimport type {\n\tNormalizedDocument,\n\tPluginOptions,\n\tRepositoryConfig,\n} from \"../types\";\n\nimport { DEFAULT_IMGIX_PARAMS } from \"../constants\";\n\nimport { getDocument } from \"./getDocument\";\nimport { hasOwnProperty } from \"./hasOwnProperty\";\nimport { pascalCase } from \"./pascalCase\";\nimport { uuid } from \"./uuid\";\n\n// TODO: Consider changing the lazy-loading property design (currently using\n// getters) to only call the getter once (i.e. cache the result, like\n// memoization)\n\nconst defaultTransformFieldName = (fieldName: string): string => {\n\treturn fieldName.replace(/-/g, \"_\");\n};\n\nconst withDocumentProxy = <\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tTTarget extends Record<any, any>,\n>(\n\ttarget: TTarget,\n\trepositoryConfig: RepositoryConfig,\n): TTarget => {\n\treturn new Proxy(target, {\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === \"document\") {\n\t\t\t\tif (hasOwnProperty(target, \"id\") && typeof target.id === \"string\") {\n\t\t\t\t\treturn getDocument(target.id) || null;\n\t\t\t\t}\n\t\t\t} else if (prop === \"url\") {\n\t\t\t\tif (hasOwnProperty(target, \"id\") && typeof target.id === \"string\") {\n\t\t\t\t\tconst document = getDocument(target.id);\n\n\t\t\t\t\tif (document) {\n\t\t\t\t\t\treturn asLink(document.raw, {\n\t\t\t\t\t\t\tlinkResolver: repositoryConfig.linkResolver,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\t});\n};\n\ntype ImgixGatsbyImageDataUrlBuilderArgs = IUrlBuilderArgs<{\n\timageImgixParams?: ImgixURLParams;\n}>;\n\nconst imgixGatsbyImageDataUrlBuilder = (\n\targs: ImgixGatsbyImageDataUrlBuilderArgs,\n) => {\n\treturn buildURL(args.baseUrl, {\n\t\t...DEFAULT_IMGIX_PARAMS,\n\t\t...args.options.imageImgixParams,\n\t\tfm: args.format && args.format !== \"auto\" ? args.format : undefined,\n\t\tw: args.width,\n\t\th: args.height,\n\t});\n};\n\nconst normalizeImageField = (\n\timage: ImageFieldImage,\n\tpluginOptions: PluginOptions,\n) => {\n\treturn {\n\t\t...image,\n\t\tget url() {\n\t\t\tif (isFilled.image(image)) {\n\t\t\t\treturn buildURL(image.url, {\n\t\t\t\t\t...DEFAULT_IMGIX_PARAMS,\n\t\t\t\t\t...pluginOptions.imageImgixParams,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tget gatsbyImageData() {\n\t\t\tif (isFilled.image(image)) {\n\t\t\t\treturn getImageData({\n\t\t\t\t\tbaseUrl: image.url,\n\t\t\t\t\tsourceWidth: image.dimensions.width,\n\t\t\t\t\tsourceHeight: image.dimensions.height,\n\t\t\t\t\turlBuilder: imgixGatsbyImageDataUrlBuilder,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\timageImgixParams: pluginOptions.imageImgixParams,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tget localFile() {\n\t\t\tif (isFilled.image(image)) {\n\t\t\t\treturn {\n\t\t\t\t\tpublicURL: image.url,\n\t\t\t\t\tchildImageSharp: {\n\t\t\t\t\t\tget gatsbyImageData() {\n\t\t\t\t\t\t\treturn getImageData({\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\tbaseUrl: image.url!,\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\tsourceWidth: image.dimensions!.width,\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\tsourceHeight: image.dimensions!.height,\n\t\t\t\t\t\t\t\turlBuilder: imgixGatsbyImageDataUrlBuilder,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\timageImgixParams: pluginOptions.imageImgixParams,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t};\n};\n\nconst normalizeField = async (\n\tlooseModel: CustomTypeModelField | undefined,\n\tlooseValue: AnyRegularField | GroupField | SliceZone,\n\tpath: string[],\n\tsharedSliceModels: SharedSliceModel[],\n\trepositoryConfig: RepositoryConfig,\n\tpluginOptions: PluginOptions,\n) => {\n\tswitch (looseModel?.type) {\n\t\tcase CustomTypeModelFieldType.Slices: {\n\t\t\tconst value = looseValue as SliceZone;\n\n\t\t\tif (isFilled.sliceZone(value)) {\n\t\t\t\treturn await Promise.all(\n\t\t\t\t\tvalue.map(async (slice) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelSliceZoneField;\n\t\t\t\t\t\tconst sliceModel = model.config?.choices?.[slice.slice_type] as\n\t\t\t\t\t\t\t| CustomTypeModelSlice\n\t\t\t\t\t\t\t| SharedSliceModel\n\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\tif (sliceModel) {\n\t\t\t\t\t\t\tconst result: Omit<typeof slice, \"primary\" | \"items\"> & {\n\t\t\t\t\t\t\t\t__typename: string;\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tprimary: Record<string, unknown>;\n\t\t\t\t\t\t\t\titems: Record<string, unknown>[];\n\t\t\t\t\t\t\t} = {\n\t\t\t\t\t\t\t\t...slice,\n\t\t\t\t\t\t\t\tid: uuid(),\n\t\t\t\t\t\t\t\t__typename: pascalCase(\n\t\t\t\t\t\t\t\t\t\"Prismic\",\n\t\t\t\t\t\t\t\t\tpluginOptions.typePrefix,\n\t\t\t\t\t\t\t\t\t...path,\n\t\t\t\t\t\t\t\t\tslice.slice_type,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (sliceModel.type === CustomTypeModelSliceType.Slice) {\n\t\t\t\t\t\t\t\tresult.primary = await normalizeFields(\n\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\tsliceModel[\"non-repeat\"] || {},\n\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"primary\"],\n\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tresult.items = await Promise.all(\n\t\t\t\t\t\t\t\t\tslice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\treturn await normalizeFields(\n\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\tsliceModel.repeat || {},\n\t\t\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"item\"],\n\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tsliceModel.type === CustomTypeModelSliceType.SharedSlice\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst typedSlice = slice as SharedSlice;\n\t\t\t\t\t\t\t\tconst sharedSliceModel = sharedSliceModels.find(\n\t\t\t\t\t\t\t\t\t(m) => m.id === slice.slice_type,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst variationModel = sharedSliceModel?.variations.find(\n\t\t\t\t\t\t\t\t\t(m) => m.id === typedSlice.variation,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (sharedSliceModel && variationModel) {\n\t\t\t\t\t\t\t\t\tresult.__typename = pascalCase(\n\t\t\t\t\t\t\t\t\t\t\"Prismic\",\n\t\t\t\t\t\t\t\t\t\tpluginOptions.typePrefix,\n\t\t\t\t\t\t\t\t\t\tsharedSliceModel.id,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tresult.primary = await normalizeFields(\n\t\t\t\t\t\t\t\t\t\tslice.primary,\n\t\t\t\t\t\t\t\t\t\tvariationModel.primary || {},\n\t\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"primary\"],\n\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tresult.items = await Promise.all(\n\t\t\t\t\t\t\t\t\t\tslice.items.map(async (item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn await normalizeFields(\n\t\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\t\tvariationModel.items || {},\n\t\t\t\t\t\t\t\t\t\t\t\t[...path, slice.slice_type, \"item\"],\n\t\t\t\t\t\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn slice;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Group: {\n\t\t\tconst value = looseValue as GroupField;\n\n\t\t\tif (isFilled.group(value)) {\n\t\t\t\treturn await Promise.all(\n\t\t\t\t\tvalue.map(async (item) => {\n\t\t\t\t\t\tconst model = looseModel as CustomTypeModelGroupField;\n\n\t\t\t\t\t\treturn await normalizeFields(\n\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\tmodel.config?.fields || {},\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\t\t\trepositoryConfig,\n\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Link: {\n\t\t\tconst value = looseValue as LinkField;\n\n\t\t\tconst result: Omit<typeof value, \"url\"> & {\n\t\t\t\tid?: string;\n\t\t\t\turl: string | null;\n\t\t\t\ttarget?: string | null;\n\t\t\t\traw: typeof value;\n\t\t\t\tdocument?: unknown;\n\t\t\t\tlocalFile: { publicURL: string } | null;\n\t\t\t} = {\n\t\t\t\t...value,\n\t\t\t\ttarget:\n\t\t\t\t\t\"target\" in value && value.target ? value.target || null : undefined,\n\t\t\t\turl:\n\t\t\t\t\tasLink(value, { linkResolver: repositoryConfig.linkResolver }) ??\n\t\t\t\t\tnull,\n\t\t\t\traw: value,\n\t\t\t\tlocalFile: null,\n\t\t\t};\n\n\t\t\tif (value.link_type === \"Media\" && \"url\" in value && value.url) {\n\t\t\t\tresult.localFile = {\n\t\t\t\t\tpublicURL: value.url,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn withDocumentProxy(result, repositoryConfig);\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.StructuredText: {\n\t\t\tconst value = looseValue as RichTextField;\n\n\t\t\treturn {\n\t\t\t\tget html() {\n\t\t\t\t\tif (isFilled.richText(value)) {\n\t\t\t\t\t\treturn asHTML(value, {\n\t\t\t\t\t\t\tlinkResolver: repositoryConfig.linkResolver,\n\t\t\t\t\t\t\tserializer: repositoryConfig.htmlSerializer,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget text() {\n\t\t\t\t\tif (isFilled.richText(value)) {\n\t\t\t\t\t\treturn asText(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trichText: value,\n\t\t\t\traw: value,\n\t\t\t};\n\t\t}\n\n\t\tcase CustomTypeModelFieldType.Image: {\n\t\t\tconst value = looseValue as ImageField<string>;\n\n\t\t\tconst result = {\n\t\t\t\t...normalizeImageField(value, pluginOptions),\n\t\t\t\tget thumbnails() {\n\t\t\t\t\tconst model = looseModel as CustomTypeModelImageField;\n\t\t\t\t\tconst transformFieldName =\n\t\t\t\t\t\trepositoryConfig.transformFieldName || defaultTransformFieldName;\n\n\t\t\t\t\tif (model.config?.thumbnails) {\n\t\t\t\t\t\tconst thumbnails: Record<\n\t\t\t\t\t\t\tstring,\n\t\t\t\t\t\t\tReturnType<typeof normalizeImageField>\n\t\t\t\t\t\t> = {};\n\n\t\t\t\t\t\tfor (const thumbnailModel of model.config.thumbnails) {\n\t\t\t\t\t\t\tconst transformedThumbnailName = transformFieldName(\n\t\t\t\t\t\t\t\tthumbnailModel.name,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthumbnails[transformedThumbnailName] = normalizeImageField(\n\t\t\t\t\t\t\t\tvalue[thumbnailModel.name],\n\t\t\t\t\t\t\t\tpluginOptions,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn thumbnails;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\n\t\t\treturn result;\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn looseValue;\n\t\t}\n\t}\n};\n\nconst normalizeFields = async (\n\tfields: Record<string, AnyRegularField | GroupField | SliceZone>,\n\tmodels: Record<string, CustomTypeModelField>,\n\tpath: string[],\n\tsharedSliceModels: SharedSliceModel[],\n\trepositoryConfig: RepositoryConfig,\n\tpluginOptions: PluginOptions,\n) => {\n\tconst result: Record<string, unknown> = {};\n\n\tconst fieldNames = Object.keys(models);\n\n\tawait Promise.all(\n\t\tfieldNames.map(async (fieldName) => {\n\t\t\tif (fieldName !== \"uid\") {\n\t\t\t\tconst transformFieldName =\n\t\t\t\t\trepositoryConfig.transformFieldName || defaultTransformFieldName;\n\t\t\t\tconst transformedFieldName = transformFieldName(fieldName);\n\n\t\t\t\tresult[transformedFieldName] = await normalizeField(\n\t\t\t\t\tmodels[fieldName],\n\t\t\t\t\tfields[fieldName],\n\t\t\t\t\t[...path, fieldName],\n\t\t\t\t\tsharedSliceModels,\n\t\t\t\t\trepositoryConfig,\n\t\t\t\t\tpluginOptions,\n\t\t\t\t);\n\t\t\t}\n\t\t}),\n\t);\n\n\treturn result;\n};\n\nexport const normalizeDocument = async (\n\tdocument: PrismicDocument,\n\tmodel: CustomTypeModel,\n\tsharedSliceModels: SharedSliceModel[],\n\trepositoryConfig: RepositoryConfig,\n\tpluginOptions: PluginOptions,\n): Promise<NormalizedDocument> => {\n\tconst normalizedDocument = {\n\t\t...document,\n\t\t__typename: pascalCase(\"Prismic\", pluginOptions.typePrefix, model.id),\n\t\t_previewable: document.id,\n\t\tprismicId: document.id,\n\t\tid: uuid(),\n\t\turl:\n\t\t\tasLink(document, { linkResolver: repositoryConfig.linkResolver }) ?? null,\n\t\tdataRaw: document.data,\n\t\traw: document,\n\t\talternate_languages: document.alternate_languages.map(\n\t\t\t(alternateLanguage) => {\n\t\t\t\treturn withDocumentProxy(alternateLanguage, repositoryConfig);\n\t\t\t},\n\t\t),\n\t};\n\n\tif (Object.keys(document.data).length > 0) {\n\t\tconst fieldModels: CustomTypeModel[\"json\"][string] = Object.assign(\n\t\t\t{},\n\t\t\t...Object.values(model.json),\n\t\t);\n\n\t\tnormalizedDocument.data = await normalizeFields(\n\t\t\tdocument.data,\n\t\t\tfieldModels,\n\t\t\t[model.id, \"data\"],\n\t\t\tsharedSliceModels,\n\t\t\trepositoryConfig,\n\t\t\tpluginOptions,\n\t\t);\n\t}\n\n\treturn normalizedDocument;\n};\n","import {\n\tpascalCase as basePascalCase,\n\tpascalCaseTransformMerge,\n} from \"pascal-case\";\n\n/**\n * Converts a string to a Pascal cased string.\n *\n * @param input - String to convert into a Pascal cased string.\n *\n * @returns Pascal cased string version of `input`.\n */\nexport const pascalCase = (...input: (string | undefined)[]): string => {\n\treturn basePascalCase(input.filter(Boolean).join(\" \"), {\n\t\ttransform: pascalCaseTransformMerge,\n\t});\n};\n","export const uuid = (): string => {\n\treturn (++uuid.i).toString();\n};\nuuid.i = 0;\n","import type { ImgixURLParams } from \"./types.generated\";\n\n/**\n * Converts a camel case string to a param case string.\n *\n * @example\n *\n * ```ts\n * camelCaseToParamCase(\"fooBar\");\n * // => 'foo-bar'\n * ```\n *\n * @param input - Camel case string to convert.\n *\n * @returns Param case version of `input`.\n */\nconst camelCaseToParamCase = (input: string): string => {\n\treturn input.replace(/[A-Z]/g, (match) => {\n\t\treturn `-${match.toLowerCase()}`;\n\t});\n};\n\n/**\n * Builds a URL to an Imgix image with Imgix URL API parameters.\n *\n * The given URL must be a full absolute URL containing the protocol and domain.\n *\n * URL parameters already applied to the image will be retained. To remove\n * existing parameters, set the parameter to `undefined` in the `params`\n * argument.\n *\n * @example\n *\n * ```ts\n * const url = buildURL(\"https://example.imgix.net/image.png\", {\n * \twidth: 400,\n * });\n * // => https://example.imgix.net/image.png?width=400\n * ```\n *\n * @example\n *\n * ```ts\n * const url = buildURL(\"https://example.imgix.net/image.png?width=400\", {\n * \theight: 300,\n * });\n * // => https://example.imgix.net/image.png?width=400&height=300\n * ```\n *\n * @param url - Full absolute URL to the Imgix image.\n * @param params - An object of Imgix URL API parameters.\n *\n * @returns `url` with the given Imgix URL API parameters applied.\n *\n * @see Imgix URL API reference: https://docs.imgix.com/apis/rendering\n */\nexport const buildURL = (url: string, params: ImgixURLParams): string => {\n\tconst instance = new URL(url);\n\n\tfor (const camelCasedParamKey in params) {\n\t\tconst paramKey = camelCaseToParamCase(camelCasedParamKey);\n\t\tconst paramValue = params[camelCasedParamKey as keyof typeof params];\n\n\t\tif (paramValue === undefined) {\n\t\t\tinstance.searchParams.delete(paramKey);\n\t\t} else if (Array.isArray(paramValue)) {\n\t\t\tinstance.searchParams.set(paramKey, paramValue.join(\",\"));\n\t\t} else {\n\t\t\tinstance.searchParams.set(paramKey, `${paramValue}`);\n\t\t}\n\t}\n\n\t// Ensure the `s` parameter is the last parameter, if it exists.\n\t// @see https://github.com/imgix/imgix-blueprint#securing-urls\n\tconst s = instance.searchParams.get(\"s\");\n\tif (s) {\n\t\tinstance.searchParams.delete(\"s\");\n\t\tinstance.searchParams.append(\"s\", s);\n\t}\n\n\treturn instance.toString();\n};\n","import type { ImgixURLParams } from \"./types.generated\";\nimport { buildURL } from \"./buildURL\";\n\n/**\n * Parameters for `buildPixelDensitySrcSet`.\n */\nexport type BuildPixelDensitySrcSetParams = Omit<ImgixURLParams, \"dpr\"> & {\n\t/**\n\t * The pixel densities to include in the resulting `srcset` value.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * [1, 2, 3];\n\t * ```\n\t */\n\tpixelDensities: number[];\n};\n\n/**\n * Builds an `<img>` `srcset` attribute value for a given set of pixel\n * densities. It can also optinally apply Imgix URL API parameters to the URLs.\n *\n * The `dpr` URL parameter will be applied for each `srcset` entry. If a `dpr`\n * parameter is provided to the `params` parameter, it will be ignored.\n *\n * @example\n *\n * ```ts\n * const srcset = buildPixelDensitySrcSet(\n * \t\"https://example.imgix.net/image.png\",\n * \t{ pixelDensities: [1, 2, 3] },\n * );\n * // => https://example.imgix.net/image.png?dpr=1 1x,\n * //    https://example.imgix.net/image.png?dpr=2 2x,\n * //    https://example.imgix.net/image.png?dpr=3 3x\n * ```\n *\n * @example\n *\n * ```ts\n * const srcset = buildPixelDensitySrcSet(\n * \t\"https://example.imgix.net/image.png\",\n * \t{\n * \t\tpixelDensities: [1, 2, 3],\n * \t\tsat: -100,\n * \t},\n * );\n * // => https://example.imgix.net/image.png?dpr=1&sat=-100 1x,\n * //    https://example.imgix.net/image.png?dpr=2&sat=-100 2x,\n * //    https://example.imgix.net/image.png?dpr=3&sat=-100 3x\n * ```\n *\n * @param url - Full absolute URL to the Imgix image.\n * @param params - An object of Imgix URL API parameters. The `pixelDensities`\n *   parameter defines the resulting `srcset` widths.\n *\n * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n *   parameters applied.\n */\nexport const buildPixelDensitySrcSet = (\n\turl: string,\n\t{ pixelDensities, ...params }: BuildPixelDensitySrcSetParams,\n): string => {\n\treturn pixelDensities\n\t\t.map((dpr) => {\n\t\t\treturn `${buildURL(url, { ...params, dpr })} ${dpr}x`;\n\t\t})\n\t\t.join(\", \");\n};\n","import type { ImgixURLParams } from \"./types.generated\";\nimport { buildURL } from \"./buildURL\";\n\n/**\n * Parameters for `buildWidthSrcSet`.\n */\nexport type BuildWidthSrcSetParams = Omit<ImgixURLParams, \"width\" | \"w\"> & {\n\t/**\n\t * The pixel widths to include in the resulting `srcset` value.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * [400, 800, 1600];\n\t * ```\n\t */\n\twidths: number[];\n};\n\n/**\n * Builds an `<img>` `srcset` attribute value for a given set of widths. It can\n * also optinally apply Imgix URL API parameters to the URLs.\n *\n * The `width` URL parameter will be applied for each `srcset` entry. If a\n * `width` or `w` parameter is provided to the `params` parameter, it will be\n * ignored.\n *\n * @example\n *\n * ```ts\n * const srcset = buildWidthSrcSet(\"https://example.imgix.net/image.png\", {\n * \twidths: [400, 800, 1600],\n * });\n * // => https://example.imgix.net/image.png?width=400 400w,\n * //    https://example.imgix.net/image.png?width=800 800w,\n * //    https://example.imgix.net/image.png?width=1600 1600w\n * ```\n *\n * @example\n *\n * ```ts\n * const srcset = buildWidthSrcSet(\"https://example.imgix.net/image.png\", {\n * \twidths: [400, 800, 1600],\n * \tsat: -100,\n * });\n * // => https://example.imgix.net/image.png?width=400&sat=-100 400w,\n * //    https://example.imgix.net/image.png?width=800&sat=-100 800w,\n * //    https://example.imgix.net/image.png?width=1600&sat=-100 1600w\n * ```\n *\n * @param url - Full absolute URL to the Imgix image.\n * @param params - An object of Imgix URL API parameters. The `widths` parameter\n *   defines the resulting `srcset` widths.\n *\n * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n *   parameters applied.\n */\nexport const buildWidthSrcSet = (\n\turl: string,\n\t{ widths, ...params }: BuildWidthSrcSetParams,\n): string => {\n\treturn widths\n\t\t.map((width) => {\n\t\t\treturn `${buildURL(url, { ...params, w: undefined, width })} ${width}w`;\n\t\t})\n\t\t.join(\", \");\n};\n","import type { BuildPixelDensitySrcSetParams } from \"./buildPixelDensitySrcSet\";\nimport type { BuildWidthSrcSetParams } from \"./buildWidthSrcSet\";\nimport type { ImgixURLParams } from \"./types.generated\";\nimport { buildPixelDensitySrcSet } from \"./buildPixelDensitySrcSet\";\nimport { buildURL } from \"./buildURL\";\nimport { buildWidthSrcSet } from \"./buildWidthSrcSet\";\n\n/**\n * Options to instantiate a new client.\n */\nexport type ClientOptions = {\n\t/**\n\t * The base URL used to construct image URLs from a path. The base URL must\n\t * include the protocol, domain, and optionally a path.\n\t *\n\t * @example `https://example.imgix.net`\n\t *\n\t * @example `https://example.imgix.net/folder`\n\t */\n\tbaseURL: string;\n};\n\n/**\n * An Imgix Rendering API client. A client is paired to a single Imgix domain.\n */\nexport class Client {\n\tbaseURL: string;\n\n\t/**\n\t * Creates a new `Client` instance for an Imgix domain.\n\t *\n\t * @param options - Options to instantiate a new client.\n\t *\n\t * @returns A `Client` instance for the given Imgix domain.\n\t */\n\tconstructor(options: ClientOptions) {\n\t\tthis.baseURL = options.baseURL;\n\t}\n\n\t/**\n\t * Builds a URL to an Imgix image with Imgix URL API parameters for the\n\t * client's base URL.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const url = client.buildURLForPath(\"/image.png\", { width: 400 });\n\t * // => https://example.imgix.net/image.png?width=400\n\t * ```\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({\n\t * \tbaseURL: \"https://example.imgix.net/folder\",\n\t * });\n\t * const url = client.buildURLForPath(\"./image.png\", { width: 400 });\n\t * // => https://example.imgix.net/folder/image.png?width=400\n\t * ```\n\t *\n\t * @param path - Path to the image relative to the client's base URL.\n\t * @param params - An object of Imgix URL API parameters.\n\t *\n\t * @returns The full absolute URL to the image with the given Imgix URL API\n\t *   parameters applied.\n\t */\n\tbuildURLForPath(path: string, params: ImgixURLParams = {}) {\n\t\treturn buildURL(`${new URL(path, this.baseURL)}`, params);\n\t}\n\n\t/**\n\t * Builds an `<img>` `srcset` attribute value for a given set of widths for\n\t * the client's base URL. It can also optinally apply Imgix URL API parameters\n\t * to the URLs.\n\t *\n\t * The `width` URL parameter will be applied for each `srcset` entry. If a\n\t * `width` or `w` parameter is provided to the `params` parameter, it will be\n\t * ignored.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const srcset = client.buildWidthSrcSetForPath(\"/image.png\", {\n\t * \twidths: [400, 800, 1600],\n\t * });\n\t * // => https://example.imgix.net/image.png?width=400 400w,\n\t * //    https://example.imgix.net/image.png?width=800 800w,\n\t * //    https://example.imgix.net/image.png?width=1600 1600w\n\t * ```\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({\n\t * \tbaseURL: \"https://example.imgix.net\",\n\t * });\n\t * const srcset = client.buildWidthSrcSetForPath(\"/image.png\", {\n\t * \twidths: [400, 800, 1600],\n\t * \tsat: -100,\n\t * });\n\t * // => https://example.imgix.net/image.png?width=400&sat=-100 400w,\n\t * //    https://example.imgix.net/image.png?width=800&sat=-100 800w,\n\t * //    https://example.imgix.net/image.png?width=1600&sat=-100 1600w\n\t * ```\n\t *\n\t * @param path - Path to the image relative to the client's base URL.\n\t * @param params - An object of Imgix URL API parameters. The `widths`\n\t *   parameter defines the resulting `srcset` widths.\n\t *\n\t * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n\t *   parameters applied.\n\t */\n\tbuildWidthSrcSetForPath(path: string, params: BuildWidthSrcSetParams) {\n\t\treturn buildWidthSrcSet(`${new URL(path, this.baseURL)}`, params);\n\t}\n\n\t/**\n\t * Builds an `<img>` `srcset` attribute value for a given set of pixel\n\t * densities for the client's base URL. It can also optinally apply Imgix URL\n\t * API parameters to the URLs.\n\t *\n\t * The `dpr` URL parameter will be applied for each `srcset` entry. If a `dpr`\n\t * parameter is provided to the `params` parameter, it will be ignored.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const srcset = client.buildPixelDensitySrcSetForPath(\"/image.png\", {\n\t * \tpixelDensities: [1, 2, 3],\n\t * });\n\t * // => https://example.imgix.net/image.png?dpr=1 1x,\n\t * //    https://example.imgix.net/image.png?dpr=2 2x,\n\t * //    https://example.imgix.net/image.png?dpr=3 3x\n\t * ```\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const srcset = client.buildPixelDensitySrcSetForPath(\"/image.png\", {\n\t * \tpixelDensities: [1, 2, 3],\n\t * \tsat: -100,\n\t * });\n\t * // => https://example.imgix.net/image.png?dpr=1&sat=-100 1x,\n\t * //    https://example.imgix.net/image.png?dpr=2&sat=-100 2x,\n\t * //    https://example.imgix.net/image.png?dpr=3&sat=-100 3x\n\t * ```\n\t *\n\t * @param path - Path to the image relative to the client's base URL.\n\t * @param params - An object of Imgix URL API parameters. The `pixelDensities`\n\t *   parameter defines the resulting `srcset` widths.\n\t *\n\t * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n\t *   parameters applied.\n\t */\n\tbuildPixelDensitySrcSetForPath(\n\t\tpath: string,\n\t\tparams: BuildPixelDensitySrcSetParams,\n\t) {\n\t\treturn buildPixelDensitySrcSet(`${new URL(path, this.baseURL)}`, params);\n\t}\n}\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\nexports.AbortError = AbortError;\n","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n    var firstChar = input.charAt(0);\n    var lowerChars = input.substr(1).toLowerCase();\n    if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n        return \"_\" + firstChar + lowerChars;\n    }\n    return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"\", transform: pascalCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","import { castArray } from \"./lib/castArray.js\";\nimport { devMsg } from \"./lib/devMsg.js\";\nconst RENAMED_PARAMS = {\n  accessToken: \"access_token\"\n};\nconst castOrderingToString = (ordering) => {\n  if (typeof ordering === \"string\") {\n    if (process.env.NODE_ENV === \"development\") {\n      const [field, direction] = ordering.split(\" \");\n      const objectForm = direction === \"desc\" ? `{ field: \"${field}\", direction: \"desc\" }` : `{ field: \"${field}\" }`;\n      console.warn(`[@prismicio/client] A string value was provided to the \\`orderings\\` query parameter. Strings are deprecated. Please convert it to the object form: ${objectForm}. For more details, see ${devMsg(\"orderings-must-be-an-array-of-objects\")}`);\n    }\n    return ordering;\n  }\n  return ordering.direction === \"desc\" ? `${ordering.field} desc` : ordering.field;\n};\nconst buildQueryURL = (endpoint, args) => {\n  const { filters, predicates, ...params } = args;\n  const url = new URL(`documents/search`, `${endpoint}/`);\n  if (filters) {\n    if (process.env.NODE_ENV === \"development\" && !Array.isArray(filters)) {\n      console.warn(`[@prismicio/client] A non-array value was provided to the \\`filters\\` query parameter (\\`${filters}\\`). Non-array values are deprecated. Please convert it to an array. For more details, see ${devMsg(\"filters-must-be-an-array\")}`);\n    }\n    for (const filter of castArray(filters)) {\n      url.searchParams.append(\"q\", `[${filter}]`);\n    }\n  }\n  if (predicates) {\n    for (const predicate of castArray(predicates)) {\n      url.searchParams.append(\"q\", `[${predicate}]`);\n    }\n  }\n  for (const k in params) {\n    const name = RENAMED_PARAMS[k] || k;\n    let value = params[k];\n    if (name === \"orderings\") {\n      const scopedValue = params[name];\n      if (scopedValue != null) {\n        if (process.env.NODE_ENV === \"development\" && typeof scopedValue === \"string\") {\n          console.warn(`[@prismicio/client] A string value was provided to the \\`orderings\\` query parameter. Strings are deprecated. Please convert it to an array of objects. For more details, see ${devMsg(\"orderings-must-be-an-array-of-objects\")}`);\n        }\n        const v = castArray(scopedValue).map((ordering) => castOrderingToString(ordering)).join(\",\");\n        value = `[${v}]`;\n      }\n    } else if (name === \"routes\") {\n      if (typeof params[name] === \"object\") {\n        value = JSON.stringify(castArray(params[name]));\n      }\n    }\n    if (value != null) {\n      url.searchParams.set(name, castArray(value).join(\",\"));\n    }\n  }\n  return url.toString();\n};\nexport {\n  buildQueryURL\n};\n//# sourceMappingURL=buildQueryURL.js.map\n","const preview = \"io.prismic.preview\";\nexport {\n  preview\n};\n//# sourceMappingURL=cookie.js.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { appendFilters } from \"./lib/appendFilters.js\";\nimport { castThunk } from \"./lib/castThunk.js\";\nimport { devMsg } from \"./lib/devMsg.js\";\nimport { everyTagFilter } from \"./lib/everyTagFilter.js\";\nimport { findMasterRef } from \"./lib/findMasterRef.js\";\nimport { findRefByID } from \"./lib/findRefByID.js\";\nimport { findRefByLabel } from \"./lib/findRefByLabel.js\";\nimport { getPreviewCookie } from \"./lib/getPreviewCookie.js\";\nimport { minifyGraphQLQuery } from \"./lib/minifyGraphQLQuery.js\";\nimport { someTagsFilter } from \"./lib/someTagsFilter.js\";\nimport { typeFilter } from \"./lib/typeFilter.js\";\nimport { ForbiddenError } from \"./errors/ForbiddenError.js\";\nimport { NotFoundError } from \"./errors/NotFoundError.js\";\nimport { ParsingError } from \"./errors/ParsingError.js\";\nimport { PrismicError } from \"./errors/PrismicError.js\";\nimport { asLink } from \"./helpers/asLink.js\";\nimport { buildQueryURL } from \"./buildQueryURL.js\";\nimport { filter } from \"./filter.js\";\nimport { getRepositoryEndpoint } from \"./getRepositoryEndpoint.js\";\nimport { getRepositoryName } from \"./getRepositoryName.js\";\nimport { isRepositoryEndpoint } from \"./isRepositoryEndpoint.js\";\nconst MAX_PAGE_SIZE = 100;\nconst REPOSITORY_CACHE_TTL = 5e3;\nconst GET_ALL_QUERY_DELAY = 500;\nvar RefStateMode;\n(function(RefStateMode2) {\n  RefStateMode2[\"Master\"] = \"Master\";\n  RefStateMode2[\"ReleaseID\"] = \"ReleaseID\";\n  RefStateMode2[\"ReleaseLabel\"] = \"ReleaseLabel\";\n  RefStateMode2[\"Manual\"] = \"Manual\";\n})(RefStateMode || (RefStateMode = {}));\nconst createClient = (repositoryNameOrEndpoint, options) => new Client(repositoryNameOrEndpoint, options);\nclass Client {\n  /**\n   * Creates a Prismic client that can be used to query a repository.\n   *\n   * If used in an environment where a global `fetch` function is unavailable,\n   * such as Node.js, the `fetch` option must be provided as part of the\n   * `options` parameter.\n   *\n   * @param repositoryNameOrEndpoint - The Prismic repository name or full Rest\n   *   API V2 endpoint for the repository.\n   * @param options - Configuration that determines how content will be queried\n   *   from the Prismic repository.\n   *\n   * @returns A client that can query content from the repository.\n   */\n  constructor(repositoryNameOrEndpoint, options = {}) {\n    /**\n     * The Prismic REST API V2 endpoint for the repository (use\n     * `prismic.getRepositoryEndpoint` for the default endpoint).\n     */\n    __publicField(this, \"endpoint\");\n    /**\n     * The secure token for accessing the API (only needed if your repository is\n     * set to private).\n     *\n     * {@link https://user-guides.prismic.io/en/articles/1036153-generating-an-access-token}\n     */\n    __publicField(this, \"accessToken\");\n    /**\n     * A list of route resolver objects that define how a document's `url` field\n     * is resolved.\n     *\n     * {@link https://prismic.io/docs/route-resolver}\n     */\n    __publicField(this, \"routes\");\n    /**\n     * The `brokenRoute` option allows you to define the route populated in the\n     * `url` property for broken link or content relationship fields. A broken\n     * link is a link or content relationship field whose linked document has been\n     * unpublished or deleted.\n     *\n     * {@link https://prismic.io/docs/route-resolver}\n     */\n    __publicField(this, \"brokenRoute\");\n    /**\n     * The function used to make network requests to the Prismic REST API. In\n     * environments where a global `fetch` function does not exist, such as\n     * Node.js, this function must be provided.\n     */\n    __publicField(this, \"fetchFn\");\n    __publicField(this, \"fetchOptions\");\n    /**\n     * Default parameters that will be sent with each query. These parameters can\n     * be overridden on each query if needed.\n     */\n    __publicField(this, \"defaultParams\");\n    /**\n     * The client's ref mode state. This determines which ref is used during\n     * queries.\n     */\n    __publicField(this, \"refState\", {\n      mode: RefStateMode.Master,\n      autoPreviewsEnabled: true\n    });\n    /**\n     * Cached repository value.\n     */\n    __publicField(this, \"cachedRepository\");\n    /**\n     * Timestamp at which the cached repository data is considered stale.\n     */\n    __publicField(this, \"cachedRepositoryExpiration\", 0);\n    /**\n     * Active `fetch()` jobs keyed by URL and AbortSignal (if it exists).\n     */\n    __publicField(this, \"fetchJobs\", {});\n    if (isRepositoryEndpoint(repositoryNameOrEndpoint)) {\n      if (process.env.NODE_ENV === \"development\") {\n        if (/\\.prismic\\.io\\/(?!api\\/v2\\/?)/i.test(repositoryNameOrEndpoint)) {\n          throw new PrismicError(\"@prismicio/client only supports Prismic Rest API V2. Please provide only the repository name to the first createClient() parameter or use the getRepositoryEndpoint() helper to generate a valid Rest API V2 endpoint URL.\", void 0, void 0);\n        }\n        const hostname = new URL(repositoryNameOrEndpoint).hostname.toLowerCase();\n        if (hostname.endsWith(\".prismic.io\") && !hostname.endsWith(\".cdn.prismic.io\")) {\n          const repositoryName = getRepositoryName(repositoryNameOrEndpoint);\n          const dotCDNEndpoint = getRepositoryEndpoint(repositoryName);\n          console.warn(`[@prismicio/client] A non-.cdn endpoint was provided to create a client with (\\`${repositoryNameOrEndpoint}\\`). Non-.cdn endpoints can have unexpected side-effects and cause performance issues when querying Prismic. Please convert it to the \\`.cdn\\` alternative (\\`${dotCDNEndpoint}\\`) or use the repository name directly instead (\\`${repositoryName}\\`). For more details, see ${devMsg(\"endpoint-must-use-cdn\")}`);\n        }\n      }\n      this.endpoint = repositoryNameOrEndpoint;\n    } else {\n      this.endpoint = getRepositoryEndpoint(repositoryNameOrEndpoint);\n    }\n    this.accessToken = options.accessToken;\n    this.routes = options.routes;\n    this.brokenRoute = options.brokenRoute;\n    this.fetchOptions = options.fetchOptions;\n    this.defaultParams = options.defaultParams;\n    if (options.ref) {\n      this.queryContentFromRef(options.ref);\n    }\n    if (typeof options.fetch === \"function\") {\n      this.fetchFn = options.fetch;\n    } else if (typeof globalThis.fetch === \"function\") {\n      this.fetchFn = globalThis.fetch;\n    } else {\n      throw new PrismicError(\"A valid fetch implementation was not provided. In environments where fetch is not available (including Node.js), a fetch implementation must be provided via a polyfill or the `fetch` option.\", void 0, void 0);\n    }\n    if (this.fetchFn === globalThis.fetch) {\n      this.fetchFn = this.fetchFn.bind(globalThis);\n    }\n    this.graphQLFetch = this.graphQLFetch.bind(this);\n  }\n  /**\n   * Enables the client to automatically query content from a preview session if\n   * one is active in browser environments. This is enabled by default in the\n   * browser.\n   *\n   * For server environments, use `enableAutoPreviewsFromReq`.\n   *\n   * @example\n   *\n   * ```ts\n   * client.enableAutoPreviews();\n   * ```\n   *\n   * @see enableAutoPreviewsFromReq\n   */\n  enableAutoPreviews() {\n    this.refState.autoPreviewsEnabled = true;\n  }\n  /**\n   * Enables the client to automatically query content from a preview session if\n   * one is active in server environments. This is disabled by default on the\n   * server.\n   *\n   * For browser environments, use `enableAutoPreviews`.\n   *\n   * @example\n   *\n   * ```ts\n   * // In an express app\n   * app.get(\"/\", function (req, res) {\n   * \tclient.enableAutoPreviewsFromReq(req);\n   * });\n   * ```\n   *\n   * @param req - An HTTP server request object containing the request's\n   *   cookies.\n   */\n  enableAutoPreviewsFromReq(req) {\n    this.refState.httpRequest = req;\n    this.refState.autoPreviewsEnabled = true;\n  }\n  /**\n   * Disables the client from automatically querying content from a preview\n   * session if one is active.\n   *\n   * Automatic preview content querying is enabled by default unless this method\n   * is called.\n   *\n   * @example\n   *\n   * ```ts\n   * client.disableAutoPreviews();\n   * ```\n   */\n  disableAutoPreviews() {\n    this.refState.autoPreviewsEnabled = false;\n  }\n  /**\n   * Queries content from the Prismic repository.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.get();\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param params - Parameters to filter, sort, and paginate results.\n   *\n   * @returns A paginated response containing the result of the query.\n   */\n  async get(params) {\n    const url = await this.buildQueryURL(params);\n    return await this.fetch(url, params);\n  }\n  /**\n   * Queries content from the Prismic repository and returns only the first\n   * result, if any.\n   *\n   * @example\n   *\n   * ```ts\n   * const document = await client.getFirst();\n   * ```\n   *\n   * @typeParam TDocument - Type of the Prismic document returned.\n   *\n   * @param params - Parameters to filter, sort, and paginate results. @returns\n   *   The first result of the query, if any.\n   */\n  async getFirst(params) {\n    var _a;\n    const actualParams = { ...params };\n    if (!(params && params.page) && !(params == null ? void 0 : params.pageSize)) {\n      actualParams.pageSize = ((_a = this.defaultParams) == null ? void 0 : _a.pageSize) ?? 1;\n    }\n    const url = await this.buildQueryURL(actualParams);\n    const result = await this.fetch(url, params);\n    const firstResult = result.results[0];\n    if (firstResult) {\n      return firstResult;\n    }\n    throw new PrismicError(\"No documents were returned\", url, void 0);\n  }\n  /**\n   * **IMPORTANT**: Avoid using `dangerouslyGetAll` as it may be slower and\n   * require more resources than other methods. Prefer using other methods that\n   * filter by filters such as `getAllByType`.\n   *\n   * Queries content from the Prismic repository and returns all matching\n   * content. If no filters are provided, all documents will be fetched.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.dangerouslyGetAll();\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param params - Parameters to filter, sort, and paginate results.\n   *\n   * @returns A list of documents matching the query.\n   */\n  async dangerouslyGetAll(params = {}) {\n    var _a;\n    const { limit = Infinity, ...actualParams } = params;\n    const resolvedParams = {\n      ...actualParams,\n      pageSize: Math.min(limit, actualParams.pageSize || ((_a = this.defaultParams) == null ? void 0 : _a.pageSize) || MAX_PAGE_SIZE)\n    };\n    const documents = [];\n    let latestResult;\n    while ((!latestResult || latestResult.next_page) && documents.length < limit) {\n      const page = latestResult ? latestResult.page + 1 : void 0;\n      latestResult = await this.get({ ...resolvedParams, page });\n      documents.push(...latestResult.results);\n      if (latestResult.next_page) {\n        await new Promise((res) => setTimeout(res, GET_ALL_QUERY_DELAY));\n      }\n    }\n    return documents.slice(0, limit);\n  }\n  /**\n   * Queries a document from the Prismic repository with a specific ID.\n   *\n   * @remarks\n   * A document's UID is different from its ID. An ID is automatically generated\n   * for all documents and is made available on its `id` property. A UID is\n   * provided in the Prismic editor and is unique among all documents of its\n   * custom type.\n   * @example\n   *\n   * ```ts\n   * const document = await client.getByID(\"WW4bKScAAMAqmluX\");\n   * ```\n   *\n   * @typeParam TDocument- Type of the Prismic document returned.\n   *\n   * @param id - ID of the document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns The document with an ID matching the `id` parameter, if a matching\n   *   document exists.\n   */\n  async getByID(id, params) {\n    return await this.getFirst(appendFilters(params, filter.at(\"document.id\", id)));\n  }\n  /**\n   * Queries documents from the Prismic repository with specific IDs.\n   *\n   * @remarks\n   * A document's UID is different from its ID. An ID is automatically generated\n   * for all documents and is made available on its `id` property. A UID is\n   * provided in the Prismic editor and is unique among all documents of its\n   * custom type.\n   * @example\n   *\n   * ```ts\n   * const response = await client.getByIDs([\n   * \t\"WW4bKScAAMAqmluX\",\n   * \t\"U1kTRgEAAC8A5ldS\",\n   * ]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param ids - A list of document IDs.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A paginated response containing documents with IDs matching the\n   *   `ids` parameter.\n   */\n  async getByIDs(ids, params) {\n    return await this.get(appendFilters(params, filter.in(\"document.id\", ids)));\n  }\n  /**\n   * Queries all documents from the Prismic repository with specific IDs.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @remarks\n   * A document's UID is different from its ID. An ID is automatically generated\n   * for all documents and is made available on its `id` property. A UID is\n   * provided in the Prismic editor and is unique among all documents of its\n   * custom type.\n   * @example\n   *\n   * ```ts\n   * const response = await client.getAllByIDs([\n   * \t\"WW4bKScAAMAqmluX\",\n   * \t\"U1kTRgEAAC8A5ldS\",\n   * ]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param ids - A list of document IDs.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A list of documents with IDs matching the `ids` parameter.\n   */\n  async getAllByIDs(ids, params) {\n    return await this.dangerouslyGetAll(appendFilters(params, filter.in(\"document.id\", ids)));\n  }\n  /**\n   * Queries a document from the Prismic repository with a specific UID and\n   * custom type.\n   *\n   * @remarks\n   * A document's UID is different from its ID. An ID is automatically generated\n   * for all documents and is made available on its `id` property. A UID is\n   * provided in the Prismic editor and is unique among all documents of its\n   * custom type.\n   * @example\n   *\n   * ```ts\n   * const document = await client.getByUID(\"blog_post\", \"my-first-post\");\n   * ```\n   *\n   * @typeParam TDocument - Type of the Prismic document returned.\n   *\n   * @param documentType - The API ID of the document's custom type.\n   * @param uid - UID of the document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns The document with a UID matching the `uid` parameter, if a\n   *   matching document exists.\n   */\n  async getByUID(documentType, uid, params) {\n    return await this.getFirst(appendFilters(params, [\n      typeFilter(documentType),\n      filter.at(`my.${documentType}.uid`, uid)\n    ]));\n  }\n  /**\n   * Queries document from the Prismic repository with specific UIDs and Custom\n   * Type.\n   *\n   * @remarks\n   * A document's UID is different from its ID. An ID is automatically generated\n   * for all documents and is made available on its `id` property. A UID is\n   * provided in the Prismic editor and is unique among all documents of its\n   * custom type.\n   * @example\n   *\n   * ```ts\n   * const document = await client.getByUIDs(\"blog_post\", [\n   * \t\"my-first-post\",\n   * \t\"my-second-post\",\n   * ]);\n   * ```\n   *\n   * @typeParam TDocument - Type of the Prismic document returned.\n   *\n   * @param documentType - The API ID of the document's custom type.\n   * @param uids - A list of document UIDs.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A paginated response containing documents with UIDs matching the\n   *   `uids` parameter.\n   */\n  async getByUIDs(documentType, uids, params) {\n    return await this.get(appendFilters(params, [\n      typeFilter(documentType),\n      filter.in(`my.${documentType}.uid`, uids)\n    ]));\n  }\n  /**\n   * Queries all documents from the Prismic repository with specific UIDs and\n   * custom type.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @remarks\n   * A document's UID is different from its ID. An ID is automatically generated\n   * for all documents and is made available on its `id` property. A UID is\n   * provided in the Prismic editor and is unique among all documents of its\n   * custom type.\n   * @example\n   *\n   * ```ts\n   * const response = await client.getAllByUIDs([\n   * \t\"my-first-post\",\n   * \t\"my-second-post\",\n   * ]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param documentType - The API ID of the document's custom type.\n   * @param uids - A list of document UIDs.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A list of documents with UIDs matching the `uids` parameter.\n   */\n  async getAllByUIDs(documentType, uids, params) {\n    return await this.dangerouslyGetAll(appendFilters(params, [\n      typeFilter(documentType),\n      filter.in(`my.${documentType}.uid`, uids)\n    ]));\n  }\n  /**\n   * Queries a singleton document from the Prismic repository for a specific\n   * custom type.\n   *\n   * @remarks\n   * A singleton document is one that is configured in Prismic to only allow one\n   * instance. For example, a repository may be configured to contain just one\n   * Settings document. This is in contrast to a repeatable custom type which\n   * allows multiple instances of itself.\n   * @example\n   *\n   * ```ts\n   * const document = await client.getSingle(\"settings\");\n   * ```\n   *\n   * @typeParam TDocument - Type of the Prismic document returned.\n   *\n   * @param documentType - The API ID of the singleton custom type.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns The singleton document for the custom type, if a matching document\n   *   exists.\n   */\n  async getSingle(documentType, params) {\n    return await this.getFirst(appendFilters(params, typeFilter(documentType)));\n  }\n  /**\n   * Queries documents from the Prismic repository for a specific custom type.\n   *\n   * Use `getAllByType` instead if you need to query all documents for a\n   * specific custom type.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getByType(\"blog_post\");\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param documentType - The API ID of the custom type.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A paginated response containing documents of the custom type.\n   */\n  async getByType(documentType, params) {\n    return await this.get(appendFilters(params, typeFilter(documentType)));\n  }\n  /**\n   * Queries all documents from the Prismic repository for a specific Custom\n   * Type.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getByType(\"blog_post\");\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param documentType - The API ID of the custom type.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A list of all documents of the custom type.\n   */\n  async getAllByType(documentType, params) {\n    return await this.dangerouslyGetAll(appendFilters(params, typeFilter(documentType)));\n  }\n  /**\n   * Queries documents from the Prismic repository with a specific tag.\n   *\n   * Use `getAllByTag` instead if you need to query all documents with a\n   * specific tag.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getByTag(\"food\");\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param tag - The tag that must be included on a document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A paginated response containing documents with the tag.\n   */\n  async getByTag(tag, params) {\n    return await this.get(appendFilters(params, someTagsFilter(tag)));\n  }\n  /**\n   * Queries all documents from the Prismic repository with a specific tag.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getAllByTag(\"food\");\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param tag - The tag that must be included on a document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A list of all documents with the tag.\n   */\n  async getAllByTag(tag, params) {\n    return await this.dangerouslyGetAll(appendFilters(params, someTagsFilter(tag)));\n  }\n  /**\n   * Queries documents from the Prismic repository with specific tags. A\n   * document must be tagged with all of the queried tags to be included.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getByEveryTag([\"food\", \"fruit\"]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param tags - A list of tags that must be included on a document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A paginated response containing documents with the tags.\n   */\n  async getByEveryTag(tags, params) {\n    return await this.get(appendFilters(params, everyTagFilter(tags)));\n  }\n  /**\n   * Queries documents from the Prismic repository with specific tags. A\n   * document must be tagged with all of the queried tags to be included.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getAllByEveryTag([\"food\", \"fruit\"]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param tags - A list of tags that must be included on a document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A list of all documents with the tags.\n   */\n  async getAllByEveryTag(tags, params) {\n    return await this.dangerouslyGetAll(appendFilters(params, everyTagFilter(tags)));\n  }\n  /**\n   * Queries documents from the Prismic repository with specific tags. A\n   * document must be tagged with at least one of the queried tags to be\n   * included.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getByEveryTag([\"food\", \"fruit\"]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param tags - A list of tags that must be included on a document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A paginated response containing documents with at least one of the\n   *   tags.\n   */\n  async getBySomeTags(tags, params) {\n    return await this.get(appendFilters(params, someTagsFilter(tags)));\n  }\n  /**\n   * Queries documents from the Prismic repository with specific tags. A\n   * document must be tagged with at least one of the queried tags to be\n   * included.\n   *\n   * This method may make multiple network requests to query all matching\n   * content.\n   *\n   * @example\n   *\n   * ```ts\n   * const response = await client.getAllBySomeTags([\"food\", \"fruit\"]);\n   * ```\n   *\n   * @typeParam TDocument - Type of Prismic documents returned.\n   *\n   * @param tags - A list of tags that must be included on a document.\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A list of all documents with at least one of the tags.\n   */\n  async getAllBySomeTags(tags, params) {\n    return await this.dangerouslyGetAll(appendFilters(params, someTagsFilter(tags)));\n  }\n  /**\n   * Returns metadata about the Prismic repository, such as its refs, releases,\n   * and custom types.\n   *\n   * @returns Repository metadata.\n   */\n  async getRepository(params) {\n    const url = new URL(this.endpoint);\n    if (this.accessToken) {\n      url.searchParams.set(\"access_token\", this.accessToken);\n    }\n    return await this.fetch(url.toString(), params);\n  }\n  /**\n   * Returns a list of all refs for the Prismic repository.\n   *\n   * Refs are used to identify which version of the repository's content should\n   * be queried. All repositories will have at least one ref pointing to the\n   * latest published content called the \"master ref\".\n   *\n   * @returns A list of all refs for the Prismic repository.\n   */\n  async getRefs(params) {\n    const repository = await this.getRepository(params);\n    return repository.refs;\n  }\n  /**\n   * Returns a ref for the Prismic repository with a matching ID.\n   *\n   * @param id - ID of the ref.\n   *\n   * @returns The ref with a matching ID, if it exists.\n   */\n  async getRefByID(id, params) {\n    const refs = await this.getRefs(params);\n    return findRefByID(refs, id);\n  }\n  /**\n   * Returns a ref for the Prismic repository with a matching label.\n   *\n   * @param label - Label of the ref.\n   *\n   * @returns The ref with a matching label, if it exists.\n   */\n  async getRefByLabel(label, params) {\n    const refs = await this.getRefs(params);\n    return findRefByLabel(refs, label);\n  }\n  /**\n   * Returns the master ref for the Prismic repository. The master ref points to\n   * the repository's latest published content.\n   *\n   * @returns The repository's master ref.\n   */\n  async getMasterRef(params) {\n    const refs = await this.getRefs(params);\n    return findMasterRef(refs);\n  }\n  /**\n   * Returns a list of all Releases for the Prismic repository. Releases are\n   * used to group content changes before publishing.\n   *\n   * @returns A list of all Releases for the Prismic repository.\n   */\n  async getReleases(params) {\n    const refs = await this.getRefs(params);\n    return refs.filter((ref) => !ref.isMasterRef);\n  }\n  /**\n   * Returns a Release for the Prismic repository with a matching ID.\n   *\n   * @param id - ID of the Release.\n   *\n   * @returns The Release with a matching ID, if it exists.\n   */\n  async getReleaseByID(id, params) {\n    const releases = await this.getReleases(params);\n    return findRefByID(releases, id);\n  }\n  /**\n   * Returns a Release for the Prismic repository with a matching label.\n   *\n   * @param label - Label of the ref.\n   *\n   * @returns The ref with a matching label, if it exists.\n   */\n  async getReleaseByLabel(label, params) {\n    const releases = await this.getReleases(params);\n    return findRefByLabel(releases, label);\n  }\n  /**\n   * Returns a list of all tags used in the Prismic repository.\n   *\n   * @returns A list of all tags used in the repository.\n   */\n  async getTags(params) {\n    try {\n      const tagsForm = await this.getCachedRepositoryForm(\"tags\", params);\n      const url = new URL(tagsForm.action);\n      if (this.accessToken) {\n        url.searchParams.set(\"access_token\", this.accessToken);\n      }\n      return await this.fetch(url.toString(), params);\n    } catch {\n      const repository = await this.getRepository(params);\n      return repository.tags;\n    }\n  }\n  /**\n   * Builds a URL used to query content from the Prismic repository.\n   *\n   * @param params - Parameters to filter, sort, and paginate the results.\n   *\n   * @returns A URL string that can be requested to query content.\n   */\n  async buildQueryURL({ signal, fetchOptions, ...params } = {}) {\n    const ref = params.ref || await this.getResolvedRefString({ signal, fetchOptions });\n    const integrationFieldsRef = params.integrationFieldsRef || (await this.getCachedRepository({ signal, fetchOptions })).integrationFieldsRef || void 0;\n    return buildQueryURL(this.endpoint, {\n      ...this.defaultParams,\n      ...params,\n      ref,\n      integrationFieldsRef,\n      routes: params.routes || this.routes,\n      brokenRoute: params.brokenRoute || this.brokenRoute,\n      accessToken: params.accessToken || this.accessToken\n    });\n  }\n  /**\n   * Determines the URL for a previewed document during an active preview\n   * session. The result of this method should be used to redirect the user to\n   * the document's URL.\n   *\n   * @example\n   *\n   * ```ts\n   * \tconst url = client.resolvePreviewURL({\n   * \tlinkResolver: (document) => `/${document.uid}`\n   * \tdefaultURL: '/'\n   * \t})\n   * ```\n   *\n   * @param args - Arguments to configure the URL resolving.\n   *\n   * @returns The URL for the previewed document during an active preview\n   *   session. The user should be redirected to this URL.\n   */\n  async resolvePreviewURL(args) {\n    var _a, _b;\n    let documentID = args.documentID;\n    let previewToken = args.previewToken;\n    if (typeof globalThis.location !== \"undefined\") {\n      const searchParams = new URLSearchParams(globalThis.location.search);\n      documentID = documentID || searchParams.get(\"documentId\");\n      previewToken = previewToken || searchParams.get(\"token\");\n    } else if (this.refState.httpRequest) {\n      if (\"query\" in this.refState.httpRequest) {\n        documentID = documentID || ((_a = this.refState.httpRequest.query) == null ? void 0 : _a.documentId);\n        previewToken = previewToken || ((_b = this.refState.httpRequest.query) == null ? void 0 : _b.token);\n      } else if (\"url\" in this.refState.httpRequest && this.refState.httpRequest.url) {\n        const searchParams = new URL(this.refState.httpRequest.url, \"missing-host://\").searchParams;\n        documentID = documentID || searchParams.get(\"documentId\");\n        previewToken = previewToken || searchParams.get(\"token\");\n      }\n    }\n    if (documentID != null && previewToken != null) {\n      const document = await this.getByID(documentID, {\n        ref: previewToken,\n        lang: \"*\",\n        signal: args.signal,\n        fetchOptions: args.fetchOptions\n      });\n      const url = asLink(document, { linkResolver: args.linkResolver });\n      if (typeof url === \"string\") {\n        return url;\n      }\n    }\n    return args.defaultURL;\n  }\n  /**\n   * Configures the client to query the latest published content for all future\n   * queries.\n   *\n   * If the `ref` parameter is provided during a query, it takes priority for\n   * that query.\n   *\n   * @example\n   *\n   * ```ts\n   * await client.queryLatestContent();\n   * const document = await client.getByID(\"WW4bKScAAMAqmluX\");\n   * ```\n   */\n  queryLatestContent() {\n    this.refState.mode = RefStateMode.Master;\n  }\n  /**\n   * Configures the client to query content from a specific Release identified\n   * by its ID for all future queries.\n   *\n   * If the `ref` parameter is provided during a query, it takes priority for\n   * that query.\n   *\n   * @example\n   *\n   * ```ts\n   * await client.queryContentFromReleaseByID(\"YLB7OBAAACMA7Cpa\");\n   * const document = await client.getByID(\"WW4bKScAAMAqmluX\");\n   * ```\n   *\n   * @param releaseID - The ID of the Release.\n   */\n  queryContentFromReleaseByID(releaseID) {\n    this.refState = {\n      ...this.refState,\n      mode: RefStateMode.ReleaseID,\n      releaseID\n    };\n  }\n  /**\n   * Configures the client to query content from a specific Release identified\n   * by its label for all future queries.\n   *\n   * If the `ref` parameter is provided during a query, it takes priority for\n   * that query.\n   *\n   * @example\n   *\n   * ```ts\n   * await client.queryContentFromReleaseByLabel(\"My Release\");\n   * const document = await client.getByID(\"WW4bKScAAMAqmluX\");\n   * ```\n   *\n   * @param releaseLabel - The label of the Release.\n   */\n  queryContentFromReleaseByLabel(releaseLabel) {\n    this.refState = {\n      ...this.refState,\n      mode: RefStateMode.ReleaseLabel,\n      releaseLabel\n    };\n  }\n  /**\n   * Configures the client to query content from a specific ref. The ref can be\n   * provided as a string or a function.\n   *\n   * If a function is provided, the ref is fetched lazily before each query. The\n   * function may also be asynchronous.\n   *\n   * @example\n   *\n   * ```ts\n   * await client.queryContentFromRef(\"my-ref\");\n   * const document = await client.getByID(\"WW4bKScAAMAqmluX\");\n   * ```\n   *\n   * @param ref - The ref or a function that returns the ref from which to query\n   *   content.\n   */\n  queryContentFromRef(ref) {\n    this.refState = {\n      ...this.refState,\n      mode: RefStateMode.Manual,\n      ref\n    };\n  }\n  /**\n   * A `fetch()` function to be used with GraphQL clients configured for\n   * Prismic's GraphQL API. It automatically applies the necessary `prismic-ref`\n   * and Authorization headers. Queries will automatically be minified by\n   * removing whitespace where possible.\n   *\n   * @example\n   *\n   * ```ts\n   * const graphQLClient = new ApolloClient({\n   * \tlink: new HttpLink({\n   * \t\turi: prismic.getGraphQLEndpoint(repositoryName),\n   * \t\t// Provide `client.graphQLFetch` as the fetch implementation.\n   * \t\tfetch: client.graphQLFetch,\n   * \t\t// Using GET is required.\n   * \t\tuseGETForQueries: true,\n   * \t}),\n   * \tcache: new InMemoryCache(),\n   * });\n   * ```\n   *\n   * @param input - The `fetch()` `input` parameter. Only strings are supported.\n   * @param init - The `fetch()` `init` parameter. Only plain objects are\n   *   supported.\n   *\n   * @returns The `fetch()` Response for the request.\n   *\n   * @experimental\n   */\n  async graphQLFetch(input, init) {\n    const cachedRepository = await this.getCachedRepository();\n    const ref = await this.getResolvedRefString();\n    const unsanitizedHeaders = {\n      \"Prismic-ref\": ref,\n      Authorization: this.accessToken ? `Token ${this.accessToken}` : \"\",\n      // Asserting `init.headers` is a Record since popular GraphQL\n      // libraries pass this as a Record. Header objects as input\n      // are unsupported.\n      ...init ? init.headers : {}\n    };\n    if (cachedRepository.integrationFieldsRef) {\n      unsanitizedHeaders[\"Prismic-integration-field-ref\"] = cachedRepository.integrationFieldsRef;\n    }\n    const headers = {};\n    for (const key in unsanitizedHeaders) {\n      if (unsanitizedHeaders[key]) {\n        headers[key.toLowerCase()] = unsanitizedHeaders[key];\n      }\n    }\n    const url = new URL(\n      // Asserting `input` is a string since popular GraphQL\n      // libraries pass this as a string. Request objects as\n      // input are unsupported.\n      input\n    );\n    url.searchParams.set(\"ref\", ref);\n    const query = url.searchParams.get(\"query\");\n    if (query) {\n      url.searchParams.set(\n        \"query\",\n        // Compress the GraphQL query (if it exists) by\n        // removing whitespace. This is done to\n        // optimize the query size and avoid\n        // hitting the upper limit of GET requests\n        // (2048 characters).\n        minifyGraphQLQuery(query)\n      );\n    }\n    return await this.fetchFn(url.toString(), {\n      ...init,\n      headers\n    });\n  }\n  /**\n   * Returns a cached version of `getRepository` with a TTL.\n   *\n   * @returns Cached repository metadata.\n   */\n  async getCachedRepository(params) {\n    if (!this.cachedRepository || Date.now() >= this.cachedRepositoryExpiration) {\n      this.cachedRepositoryExpiration = Date.now() + REPOSITORY_CACHE_TTL;\n      this.cachedRepository = await this.getRepository(params);\n    }\n    return this.cachedRepository;\n  }\n  /**\n   * Returns a cached Prismic repository form. Forms are used to determine API\n   * endpoints for types of repository data.\n   *\n   * @param name - Name of the form.\n   *\n   * @returns The repository form.\n   *\n   * @throws If a matching form cannot be found.\n   */\n  async getCachedRepositoryForm(name, params) {\n    const cachedRepository = await this.getCachedRepository(params);\n    const form = cachedRepository.forms[name];\n    if (!form) {\n      throw new PrismicError(`Form with name \"${name}\" could not be found`, void 0, void 0);\n    }\n    return form;\n  }\n  /**\n   * Returns the ref needed to query based on the client's current state. This\n   * method may make a network request to fetch a ref or resolve the user's ref\n   * thunk.\n   *\n   * If auto previews are enabled, the preview ref takes priority if available.\n   *\n   * The following strategies are used depending on the client's state:\n   *\n   * - If the user called `queryLatestContent`: Use the repository's master ref.\n   *   The ref is cached for 5 seconds. After 5 seconds, a new master ref is\n   *   fetched.\n   * - If the user called `queryContentFromReleaseByID`: Use the release's ref.\n   *   The ref is cached for 5 seconds. After 5 seconds, a new ref for the\n   *   release is fetched.\n   * - If the user called `queryContentFromReleaseByLabel`: Use the release's ref.\n   *   The ref is cached for 5 seconds. After 5 seconds, a new ref for the\n   *   release is fetched.\n   * - If the user called `queryContentFromRef`: Use the provided ref. Fall back\n   *   to the master ref if the ref is not a string.\n   *\n   * @returns The ref to use during a query.\n   */\n  async getResolvedRefString(params) {\n    var _a, _b;\n    if (this.refState.autoPreviewsEnabled) {\n      let previewRef;\n      let cookieJar;\n      if ((_a = this.refState.httpRequest) == null ? void 0 : _a.headers) {\n        if (\"get\" in this.refState.httpRequest.headers && typeof this.refState.httpRequest.headers.get === \"function\") {\n          cookieJar = this.refState.httpRequest.headers.get(\"cookie\");\n        } else if (\"cookie\" in this.refState.httpRequest.headers) {\n          cookieJar = this.refState.httpRequest.headers.cookie;\n        }\n      } else if ((_b = globalThis.document) == null ? void 0 : _b.cookie) {\n        cookieJar = globalThis.document.cookie;\n      }\n      if (cookieJar) {\n        previewRef = getPreviewCookie(cookieJar);\n      }\n      if (previewRef) {\n        return previewRef;\n      }\n    }\n    const cachedRepository = await this.getCachedRepository(params);\n    const refModeType = this.refState.mode;\n    if (refModeType === RefStateMode.ReleaseID) {\n      return findRefByID(cachedRepository.refs, this.refState.releaseID).ref;\n    } else if (refModeType === RefStateMode.ReleaseLabel) {\n      return findRefByLabel(cachedRepository.refs, this.refState.releaseLabel).ref;\n    } else if (refModeType === RefStateMode.Manual) {\n      const res = await castThunk(this.refState.ref)();\n      if (typeof res === \"string\") {\n        return res;\n      }\n    }\n    return findMasterRef(cachedRepository.refs).ref;\n  }\n  /**\n   * Performs a network request using the configured `fetch` function. It\n   * assumes all successful responses will have a JSON content type. It also\n   * normalizes unsuccessful network requests.\n   *\n   * @typeParam T - The JSON response.\n   *\n   * @param url - URL to the resource to fetch.\n   * @param params - Prismic REST API parameters for the network request.\n   *\n   * @returns The JSON response from the network request.\n   */\n  async fetch(url, params = {}) {\n    var _a, _b, _c, _d;\n    const requestInit = {\n      ...this.fetchOptions,\n      ...params.fetchOptions,\n      headers: {\n        ...(_a = this.fetchOptions) == null ? void 0 : _a.headers,\n        ...(_b = params.fetchOptions) == null ? void 0 : _b.headers\n      },\n      signal: ((_c = params.fetchOptions) == null ? void 0 : _c.signal) || params.signal || ((_d = this.fetchOptions) == null ? void 0 : _d.signal)\n    };\n    let job;\n    if (this.fetchJobs[url] && this.fetchJobs[url].has(requestInit.signal)) {\n      job = this.fetchJobs[url].get(requestInit.signal);\n    } else {\n      this.fetchJobs[url] = this.fetchJobs[url] || /* @__PURE__ */ new Map();\n      job = this.fetchFn(url, requestInit).then(async (res2) => {\n        let json = void 0;\n        try {\n          json = await res2.json();\n        } catch {\n        }\n        return {\n          status: res2.status,\n          json\n        };\n      }).finally(() => {\n        this.fetchJobs[url].delete(requestInit.signal);\n        if (this.fetchJobs[url].size === 0) {\n          delete this.fetchJobs[url];\n        }\n      });\n      this.fetchJobs[url].set(requestInit.signal, job);\n    }\n    const res = await job;\n    if (res.status !== 404 && res.json == null) {\n      throw new PrismicError(void 0, url, res.json);\n    }\n    switch (res.status) {\n      case 200: {\n        return res.json;\n      }\n      case 400: {\n        throw new ParsingError(res.json.message, url, res.json);\n      }\n      case 401:\n      case 403: {\n        throw new ForbiddenError(\"error\" in res.json ? res.json.error : res.json.message, url, res.json);\n      }\n      case 404: {\n        throw new NotFoundError(`Prismic repository not found. Check that \"${this.endpoint}\" is pointing to the correct repository.`, url, void 0);\n      }\n    }\n    throw new PrismicError(void 0, url, res.json);\n  }\n}\nexport {\n  Client,\n  GET_ALL_QUERY_DELAY,\n  REPOSITORY_CACHE_TTL,\n  createClient\n};\n//# sourceMappingURL=createClient.js.map\n","import { PrismicError } from \"./PrismicError.js\";\nclass ForbiddenError extends PrismicError {\n}\nexport {\n  ForbiddenError\n};\n//# sourceMappingURL=ForbiddenError.js.map\n","import { PrismicError } from \"./PrismicError.js\";\nclass NotFoundError extends PrismicError {\n}\nexport {\n  NotFoundError\n};\n//# sourceMappingURL=NotFoundError.js.map\n","import { PrismicError } from \"./PrismicError.js\";\nclass ParsingError extends PrismicError {\n}\nexport {\n  ParsingError\n};\n//# sourceMappingURL=ParsingError.js.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass PrismicError extends Error {\n  constructor(message = \"An invalid API response was returned\", url, response) {\n    super(message);\n    __publicField(this, \"url\");\n    __publicField(this, \"response\");\n    this.url = url;\n    this.response = response;\n  }\n}\nexport {\n  PrismicError\n};\n//# sourceMappingURL=PrismicError.js.map\n","const formatValue = (value) => {\n  if (Array.isArray(value)) {\n    return `[${value.map(formatValue).join(\", \")}]`;\n  }\n  if (typeof value === \"string\") {\n    return `\"${value}\"`;\n  }\n  if (value instanceof Date) {\n    return `${value.getTime()}`;\n  }\n  return `${value}`;\n};\nconst pathWithArgsFilter = (name) => {\n  const fn = (path, ...args) => {\n    const formattedArgs = args.map(formatValue).join(\", \");\n    const joiner = path && args.length ? \", \" : \"\";\n    return `[${name}(${path}${joiner}${formattedArgs})]`;\n  };\n  return fn;\n};\nconst pathFilter = (name) => {\n  const filterFn = pathWithArgsFilter(name);\n  const fn = (path) => {\n    return filterFn(path);\n  };\n  return fn;\n};\nconst argsFilter = (name) => {\n  const filterFn = pathWithArgsFilter(name);\n  const fn = (...args) => {\n    return filterFn(\"\", ...args);\n  };\n  return fn;\n};\nconst filter = {\n  /**\n   * The `at` filter checks that the path matches the described value exactly.\n   * It takes a single value for a field or an array (only for tags).\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#at}\n   */\n  at: pathWithArgsFilter(\"at\"),\n  /**\n   * The `not` filter checks that the path doesn't match the provided value\n   * exactly. It takes a single value for a field or an array (only for tags).\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#not}\n   */\n  not: pathWithArgsFilter(\"not\"),\n  /**\n   * The `any` filter takes an array of values. It works exactly the same way as\n   * the `at` operator, but checks whether the fragment matches any of the\n   * values in the array.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#any}\n   */\n  any: pathWithArgsFilter(\"any\"),\n  /**\n   * The `in` filter is used specifically to retrieve an array of documents by\n   * their IDs or UIDs. This filter is much more efficient at this than the any\n   * filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#in}\n   */\n  in: pathWithArgsFilter(\"in\"),\n  /**\n   * The `fulltext` filter provides two capabilities:\n   *\n   * 1. Checking if a certain string is anywhere inside a document (this is what\n   *    you should use to make your project's search engine feature)\n   * 2. Checking if the string is contained inside a specific custom type’s Rich\n   *    Text or Key Text fragment.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#fulltext}\n   */\n  fulltext: pathWithArgsFilter(\"fulltext\"),\n  /**\n   * The `has` filter checks whether a fragment has a value. It will return all\n   * the documents of the specified type that contain a value for the specified\n   * field.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#has}\n   */\n  has: pathFilter(\"has\"),\n  /**\n   * The `missing` filter checks if a fragment doesn't have a value. It will\n   * return all the documents of the specified type that do not contain a value\n   * for the specified field.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#missing}\n   */\n  missing: pathFilter(\"missing\"),\n  /**\n   * The `similar` filter takes the ID of a document, and returns a list of\n   * documents with similar content. This allows you to build an automated\n   * content discovery feature (for example, a \"Related posts\" section).\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#similar}\n   */\n  similar: argsFilter(\"similar\"),\n  /**\n   * The `geopoint.near` filter checks that the value in the path is within the\n   * radius of the given coordinates.\n   *\n   * This filter will only work for a geopoint field.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#geopointnear}\n   */\n  geopointNear: pathWithArgsFilter(\"geopoint.near\"),\n  /**\n   * The `number.lt` filter checks that the value in the number field is less\n   * than the value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#numberlessthan}\n   */\n  numberLessThan: pathWithArgsFilter(\"number.lt\"),\n  /**\n   * The `number.gt` filter checks that the value in the number field is greater\n   * than the value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#numbergreaterthan}\n   */\n  numberGreaterThan: pathWithArgsFilter(\"number.gt\"),\n  /**\n   * The `number.inRange` filter checks that the value in the path is within the\n   * two values passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#numberinrange}\n   */\n  numberInRange: pathWithArgsFilter(\"number.inRange\"),\n  /**\n   * The `date.after` filter checks that the value in the path is after the date\n   * value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateAfter: pathWithArgsFilter(\"date.after\"),\n  /**\n   * The `date.before` filter checks that the value in the path is before the\n   * date value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateBefore: pathWithArgsFilter(\"date.before\"),\n  /**\n   * The `date.between` filter checks that the value in the path is within the\n   * date values passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateBetween: pathWithArgsFilter(\"date.between\"),\n  /**\n   * The `date.day-of-month` filter checks that the value in the path is equal\n   * to the day of the month passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateDayOfMonth: pathWithArgsFilter(\"date.day-of-month\"),\n  /**\n   * The `date.day-of-month-after` filter checks that the value in the path is\n   * after the day of the month passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateDayOfMonthAfter: pathWithArgsFilter(\"date.day-of-month-after\"),\n  /**\n   * The `date.day-of-month-before` filter checks that the value in the path is\n   * before the day of the month passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateDayOfMonthBefore: pathWithArgsFilter(\"date.day-of-month-before\"),\n  /**\n   * The `date.day-of-week` filter checks that the value in the path is equal to\n   * the day of the week passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateDayOfWeek: pathWithArgsFilter(\"date.day-of-week\"),\n  /**\n   * The `date.day-of-week-after` filter checks that the value in the path is\n   * after the day of the week passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateDayOfWeekAfter: pathWithArgsFilter(\"date.day-of-week-after\"),\n  /**\n   * The date.day-of-week-before filter checks that the value in the path is\n   * before the day of the week passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateDayOfWeekBefore: pathWithArgsFilter(\"date.day-of-week-before\"),\n  /**\n   * The `date.month` filter checks that the value in the path occurs in the\n   * month value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateMonth: pathWithArgsFilter(\"date.month\"),\n  /**\n   * The `date.month-after` filter checks that the value in the path occurs in\n   * any month after the value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateMonthAfter: pathWithArgsFilter(\"date.month-after\"),\n  /**\n   * The `date.month-before` filter checks that the value in the path occurs in\n   * any month before the value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateMonthBefore: pathWithArgsFilter(\"date.month-before\"),\n  /**\n   * The `date.year` filter checks that the value in the path occurs in the year\n   * value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateYear: pathWithArgsFilter(\"date.year\"),\n  /**\n   * The `date.hour` filter checks that the value in the path occurs within the\n   * hour value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateHour: pathWithArgsFilter(\"date.hour\"),\n  /**\n   * The `date.hour-after` filter checks that the value in the path occurs after\n   * the hour value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateHourAfter: pathWithArgsFilter(\"date.hour-after\"),\n  /**\n   * The `date.hour-before` filter checks that the value in the path occurs\n   * before the hour value passed into the filter.\n   *\n   * {@link https://prismic.io/docs/rest-api-technical-reference#date-filters}\n   */\n  dateHourBefore: pathWithArgsFilter(\"date.hour-before\")\n};\nexport {\n  filter\n};\n//# sourceMappingURL=filter.js.map\n","import { PrismicError } from \"./errors/PrismicError.js\";\nimport { isRepositoryName } from \"./isRepositoryName.js\";\nconst getGraphQLEndpoint = (repositoryName) => {\n  if (isRepositoryName(repositoryName)) {\n    return `https://${repositoryName}.cdn.prismic.io/graphql`;\n  } else {\n    throw new PrismicError(`An invalid Prismic repository name was given: ${repositoryName}`, void 0, void 0);\n  }\n};\nexport {\n  getGraphQLEndpoint\n};\n//# sourceMappingURL=getGraphQLEndpoint.js.map\n","import { PrismicError } from \"./errors/PrismicError.js\";\nimport { isRepositoryName } from \"./isRepositoryName.js\";\nconst getRepositoryEndpoint = (repositoryName) => {\n  if (isRepositoryName(repositoryName)) {\n    return `https://${repositoryName}.cdn.prismic.io/api/v2`;\n  } else {\n    throw new PrismicError(`An invalid Prismic repository name was given: ${repositoryName}`, void 0, void 0);\n  }\n};\nexport {\n  getRepositoryEndpoint\n};\n//# sourceMappingURL=getRepositoryEndpoint.js.map\n","import { PrismicError } from \"./errors/PrismicError.js\";\nconst getRepositoryName = (repositoryEndpoint) => {\n  try {\n    return new URL(repositoryEndpoint).hostname.split(\".\")[0];\n  } catch {\n    throw new PrismicError(`An invalid Prismic Rest API V2 endpoint was provided: ${repositoryEndpoint}`, void 0, void 0);\n  }\n};\nexport {\n  getRepositoryName\n};\n//# sourceMappingURL=getRepositoryName.js.map\n","import { composeSerializers, serialize, Element, wrapMapSerializer } from \"@prismicio/richtext\";\nimport { serializeSpan, serializeStandardTag, serializeHyperlink, serializeEmbed, serializeImage, serializePreFormatted } from \"../lib/serializerHelpers.js\";\nconst createDefaultHTMLRichTextSerializer = (linkResolver) => {\n  return (_type, node, text, children, _key) => {\n    switch (node.type) {\n      case Element.heading1:\n        return serializeStandardTag(\"h1\", node, children);\n      case Element.heading2:\n        return serializeStandardTag(\"h2\", node, children);\n      case Element.heading3:\n        return serializeStandardTag(\"h3\", node, children);\n      case Element.heading4:\n        return serializeStandardTag(\"h4\", node, children);\n      case Element.heading5:\n        return serializeStandardTag(\"h5\", node, children);\n      case Element.heading6:\n        return serializeStandardTag(\"h6\", node, children);\n      case Element.paragraph:\n        return serializeStandardTag(\"p\", node, children);\n      case Element.preformatted:\n        return serializePreFormatted(node);\n      case Element.strong:\n        return serializeStandardTag(\"strong\", node, children);\n      case Element.em:\n        return serializeStandardTag(\"em\", node, children);\n      case Element.listItem:\n        return serializeStandardTag(\"li\", node, children);\n      case Element.oListItem:\n        return serializeStandardTag(\"li\", node, children);\n      case Element.list:\n        return serializeStandardTag(\"ul\", node, children);\n      case Element.oList:\n        return serializeStandardTag(\"ol\", node, children);\n      case Element.image:\n        return serializeImage(linkResolver, node);\n      case Element.embed:\n        return serializeEmbed(node);\n      case Element.hyperlink:\n        return serializeHyperlink(linkResolver, node, children);\n      case Element.label:\n        return serializeStandardTag(\"span\", node, children);\n      case Element.span:\n      default:\n        return serializeSpan(text);\n    }\n  };\n};\nconst wrapMapSerializerWithStringChildren = (mapSerializer) => {\n  const modifiedMapSerializer = {};\n  for (const tag in mapSerializer) {\n    const tagSerializer = mapSerializer[tag];\n    if (tagSerializer) {\n      modifiedMapSerializer[tag] = (payload) => {\n        return tagSerializer({\n          ...payload,\n          // @ts-expect-error - merging blockSerializer types causes TS to bail to a never type\n          children: payload.children.join(\"\")\n        });\n      };\n    }\n  }\n  return wrapMapSerializer(modifiedMapSerializer);\n};\nconst asHTML = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrLinkResolver, maybeSerializer] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n      config = {\n        linkResolver: configObjectOrLinkResolver,\n        serializer: maybeSerializer\n      };\n    } else {\n      config = { ...configObjectOrLinkResolver };\n    }\n    let serializer;\n    if (config.serializer) {\n      serializer = composeSerializers(typeof config.serializer === \"object\" ? wrapMapSerializerWithStringChildren(config.serializer) : (type, node, text, children, key) => (\n        // TypeScript doesn't narrow the type correctly here since it is now in a callback function, so we have to cast it here.\n        config.serializer(type, node, text, children.join(\"\"), key)\n      ), createDefaultHTMLRichTextSerializer(config.linkResolver));\n    } else {\n      serializer = createDefaultHTMLRichTextSerializer(config.linkResolver);\n    }\n    return serialize(richTextField, serializer).join(\"\");\n  } else {\n    return null;\n  }\n};\nexport {\n  asHTML\n};\n//# sourceMappingURL=asHTML.js.map\n","import { LinkType } from \"../types/value/link.js\";\nimport { documentToLinkField } from \"./documentToLinkField.js\";\nconst asLink = (linkFieldOrDocument, ...configObjectOrTuple) => {\n  if (!linkFieldOrDocument) {\n    return null;\n  }\n  const linkField = (\n    // prettier-ignore\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n    // TODO: Remove the `prettier-ignore` comment when this bug is fixed.\n    \"link_type\" in linkFieldOrDocument ? linkFieldOrDocument : documentToLinkField(linkFieldOrDocument)\n  );\n  const [configObjectOrLinkResolver] = configObjectOrTuple;\n  let config;\n  if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n    config = {\n      linkResolver: configObjectOrLinkResolver\n    };\n  } else {\n    config = { ...configObjectOrLinkResolver };\n  }\n  switch (linkField.link_type) {\n    case LinkType.Media:\n    case LinkType.Web:\n      return \"url\" in linkField ? linkField.url : null;\n    case LinkType.Document: {\n      if (\"id\" in linkField && config.linkResolver) {\n        const resolvedURL = config.linkResolver(linkField);\n        if (resolvedURL != null) {\n          return resolvedURL;\n        }\n      }\n      if (\"url\" in linkField && linkField.url) {\n        return linkField.url;\n      }\n      return null;\n    }\n    case LinkType.Any:\n    default:\n      return null;\n  }\n};\nexport {\n  asLink\n};\n//# sourceMappingURL=asLink.js.map\n","import { asText as asText$1 } from \"@prismicio/richtext\";\nconst asText = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrSeparator] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrSeparator === \"string\") {\n      config = {\n        separator: configObjectOrSeparator\n      };\n    } else {\n      config = { ...configObjectOrSeparator };\n    }\n    return asText$1(richTextField, config.separator);\n  } else {\n    return null;\n  }\n};\nexport {\n  asText\n};\n//# sourceMappingURL=asText.js.map\n","import { LinkType } from \"../types/value/link.js\";\nconst documentToLinkField = (prismicDocument) => {\n  var _a;\n  return {\n    link_type: LinkType.Document,\n    id: prismicDocument.id,\n    uid: prismicDocument.uid || void 0,\n    type: prismicDocument.type,\n    tags: prismicDocument.tags,\n    lang: prismicDocument.lang,\n    url: prismicDocument.url == null ? void 0 : prismicDocument.url,\n    slug: (_a = prismicDocument.slugs) == null ? void 0 : _a[0],\n    // The REST API does not include a `data` property if the data\n    // object is empty.\n    //\n    // A presence check for `prismicDocument.data` is done to\n    // support partial documents. While `documentToLinkField` is\n    // not typed to accept partial documents, passing a partial\n    // document can happen in untyped projects.\n    ...prismicDocument.data && Object.keys(prismicDocument.data).length > 0 ? { data: prismicDocument.data } : {}\n  };\n};\nexport {\n  documentToLinkField\n};\n//# sourceMappingURL=documentToLinkField.js.map\n","const isNonNullish = (input) => {\n  return input != null;\n};\nconst isNonEmptyArray = (input) => {\n  return !!input.length;\n};\nconst richText = (field) => {\n  if (!isNonNullish(field)) {\n    return false;\n  } else if (field.length === 1 && \"text\" in field[0]) {\n    return !!field[0].text;\n  } else {\n    return !!field.length;\n  }\n};\nconst title = richText;\nconst imageThumbnail = (thumbnail) => {\n  return isNonNullish(thumbnail) && !!thumbnail.url;\n};\nconst image = imageThumbnail;\nconst link = (field) => {\n  return isNonNullish(field) && (\"id\" in field || \"url\" in field);\n};\nconst linkToMedia = link;\nconst contentRelationship = link;\nconst date = isNonNullish;\nconst timestamp = isNonNullish;\nconst color = isNonNullish;\nconst number = isNonNullish;\nconst keyText = (field) => {\n  return isNonNullish(keyText) && !!field;\n};\nconst select = isNonNullish;\nconst embed = (field) => {\n  return isNonNullish(field) && !!field.embed_url;\n};\nconst geoPoint = (field) => {\n  return isNonNullish(field) && \"longitude\" in field;\n};\nconst integrationField = isNonNullish;\nconst integrationFields = integrationField;\nconst group = (group2) => {\n  return isNonNullish(group2) && isNonEmptyArray(group2);\n};\nconst sliceZone = (slices) => {\n  return isNonNullish(slices) && isNonEmptyArray(slices);\n};\nexport {\n  color,\n  contentRelationship,\n  date,\n  embed,\n  geoPoint,\n  group,\n  image,\n  imageThumbnail,\n  integrationField,\n  integrationFields,\n  keyText,\n  link,\n  linkToMedia,\n  number,\n  richText,\n  select,\n  sliceZone,\n  timestamp,\n  title\n};\n//# sourceMappingURL=isFilled.js.map\n","const isRepositoryEndpoint = (input) => {\n  try {\n    new URL(input);\n    return true;\n  } catch {\n    return false;\n  }\n};\nexport {\n  isRepositoryEndpoint\n};\n//# sourceMappingURL=isRepositoryEndpoint.js.map\n","const isRepositoryName = (input) => {\n  return /^[a-zA-Z0-9][-a-zA-Z0-9]{2,}[a-zA-Z0-9]$/.test(input);\n};\nexport {\n  isRepositoryName\n};\n//# sourceMappingURL=isRepositoryName.js.map\n","import { castArray } from \"./castArray.js\";\nconst appendFilters = (objWithFilters = {}, filters) => {\n  return {\n    ...objWithFilters,\n    filters: [...objWithFilters.filters || [], ...castArray(filters)]\n  };\n};\nexport {\n  appendFilters\n};\n//# sourceMappingURL=appendFilters.js.map\n","const castArray = (a) => {\n  return Array.isArray(a) ? a : [a];\n};\nexport {\n  castArray\n};\n//# sourceMappingURL=castArray.js.map\n","const castThunk = (a) => {\n  return typeof a === \"function\" ? a : () => a;\n};\nexport {\n  castThunk\n};\n//# sourceMappingURL=castThunk.js.map\n","import { version } from \"../package.json.js\";\nconst devMsg = (slug) => {\n  return `https://prismic.dev/msg/client/v${version}/${slug}`;\n};\nexport {\n  devMsg\n};\n//# sourceMappingURL=devMsg.js.map\n","const matchHtmlRegExp = /[\"'&<>]/;\nconst escapeHTML = (string) => {\n  const str = \"\" + string;\n  const match = matchHtmlRegExp.exec(str);\n  if (!match) {\n    return str;\n  }\n  let escape;\n  let html = \"\";\n  let index = 0;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escape;\n  }\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n};\nexport {\n  escapeHTML\n};\n//# sourceMappingURL=escapeHTML.js.map\n","import { filter } from \"../filter.js\";\nimport { castArray } from \"./castArray.js\";\nconst everyTagFilter = (tags) => {\n  return filter.at(\"document.tags\", castArray(tags));\n};\nexport {\n  everyTagFilter\n};\n//# sourceMappingURL=everyTagFilter.js.map\n","import { findRef } from \"./findRef.js\";\nconst findMasterRef = (refs) => {\n  return findRef(refs, (ref) => ref.isMasterRef);\n};\nexport {\n  findMasterRef\n};\n//# sourceMappingURL=findMasterRef.js.map\n","import { PrismicError } from \"../errors/PrismicError.js\";\nconst findRef = (refs, filter) => {\n  const ref = refs.find((ref2) => filter(ref2));\n  if (!ref) {\n    throw new PrismicError(\"Ref could not be found.\", void 0, void 0);\n  }\n  return ref;\n};\nexport {\n  findRef\n};\n//# sourceMappingURL=findRef.js.map\n","import { findRef } from \"./findRef.js\";\nconst findRefByID = (refs, id) => {\n  return findRef(refs, (ref) => ref.id === id);\n};\nexport {\n  findRefByID\n};\n//# sourceMappingURL=findRefByID.js.map\n","import { findRef } from \"./findRef.js\";\nconst findRefByLabel = (refs, label) => {\n  return findRef(refs, (ref) => ref.label === label);\n};\nexport {\n  findRefByLabel\n};\n//# sourceMappingURL=findRefByLabel.js.map\n","import { preview } from \"../cookie.js\";\nconst readValue = (value) => {\n  return value.replace(/%3B/g, \";\");\n};\nconst getPreviewCookie = (cookieJar) => {\n  const cookies = cookieJar.split(\"; \");\n  let value;\n  for (const cookie of cookies) {\n    const parts = cookie.split(\"=\");\n    const name = readValue(parts[0]).replace(/%3D/g, \"=\");\n    if (name === preview) {\n      value = readValue(parts.slice(1).join(\"=\"));\n      break;\n    }\n  }\n  return value;\n};\nexport {\n  getPreviewCookie\n};\n//# sourceMappingURL=getPreviewCookie.js.map\n","const minifyGraphQLQuery = (query) => {\n  return query.replace(/(\\n| )*( |{|})(\\n| )*/gm, (_chars, _spaces, brackets) => brackets);\n};\nexport {\n  minifyGraphQLQuery\n};\n//# sourceMappingURL=minifyGraphQLQuery.js.map\n","import { LinkType } from \"../types/value/link.js\";\nimport { RichTextNodeType } from \"../types/value/richText.js\";\nimport { asLink } from \"../helpers/asLink.js\";\nimport { escapeHTML } from \"./escapeHTML.js\";\nconst getLabel = (node) => {\n  return \"data\" in node && \"label\" in node.data ? ` class=\"${node.data.label}\"` : \"\";\n};\nconst serializeStandardTag = (tag, node, children) => {\n  return `<${tag}${getLabel(node)}>${children.join(\"\")}</${tag}>`;\n};\nconst serializePreFormatted = (node) => {\n  return `<pre${getLabel(node)}>${escapeHTML(node.text)}</pre>`;\n};\nconst serializeImage = (linkResolver, node) => {\n  let imageTag = `<img src=\"${node.url}\" alt=\"${escapeHTML(node.alt)}\"${node.copyright ? ` copyright=\"${escapeHTML(node.copyright)}\"` : \"\"} />`;\n  if (node.linkTo) {\n    imageTag = serializeHyperlink(linkResolver, {\n      type: RichTextNodeType.hyperlink,\n      data: node.linkTo,\n      start: 0,\n      end: 0\n    }, [imageTag]);\n  }\n  return `<p class=\"block-img\">${imageTag}</p>`;\n};\nconst serializeEmbed = (node) => {\n  return `<div data-oembed=\"${node.oembed.embed_url}\" data-oembed-type=\"${node.oembed.type}\" data-oembed-provider=\"${node.oembed.provider_name}\"${getLabel(node)}>${node.oembed.html}</div>`;\n};\nconst serializeHyperlink = (linkResolver, node, children) => {\n  switch (node.data.link_type) {\n    case LinkType.Web: {\n      return `<a href=\"${escapeHTML(node.data.url)}\" ${node.data.target ? `target=\"${node.data.target}\" ` : \"\"}rel=\"noopener noreferrer\"${getLabel(node)}>${children.join(\"\")}</a>`;\n    }\n    case LinkType.Document: {\n      return `<a href=\"${asLink(node.data, linkResolver)}\"${getLabel(node)}>${children.join(\"\")}</a>`;\n    }\n    case LinkType.Media: {\n      return `<a href=\"${node.data.url}\"${getLabel(node)}>${children.join(\"\")}</a>`;\n    }\n  }\n};\nconst serializeSpan = (content) => {\n  return content ? escapeHTML(content).replace(/\\n/g, \"<br />\") : \"\";\n};\nexport {\n  getLabel,\n  serializeEmbed,\n  serializeHyperlink,\n  serializeImage,\n  serializePreFormatted,\n  serializeSpan,\n  serializeStandardTag\n};\n//# sourceMappingURL=serializerHelpers.js.map\n","import { filter } from \"../filter.js\";\nimport { castArray } from \"./castArray.js\";\nconst someTagsFilter = (tags) => {\n  return filter.any(\"document.tags\", castArray(tags));\n};\nexport {\n  someTagsFilter\n};\n//# sourceMappingURL=someTagsFilter.js.map\n","import { filter } from \"../filter.js\";\nconst typeFilter = (documentType) => {\n  return filter.at(\"document.type\", documentType);\n};\nexport {\n  typeFilter\n};\n//# sourceMappingURL=typeFilter.js.map\n","const version = \"7.1.0\";\nexport {\n  version\n};\n//# sourceMappingURL=package.json.js.map\n","const CustomTypeModelSliceType = {\n  Slice: \"Slice\",\n  SharedSlice: \"SharedSlice\"\n};\nexport {\n  CustomTypeModelSliceType\n};\n//# sourceMappingURL=sliceZone.js.map\n","const CustomTypeModelFieldType = {\n  Boolean: \"Boolean\",\n  Color: \"Color\",\n  Date: \"Date\",\n  Embed: \"Embed\",\n  GeoPoint: \"GeoPoint\",\n  Group: \"Group\",\n  Image: \"Image\",\n  Integration: \"IntegrationFields\",\n  Link: \"Link\",\n  Number: \"Number\",\n  Select: \"Select\",\n  Slices: \"Slices\",\n  StructuredText: \"StructuredText\",\n  Text: \"Text\",\n  Timestamp: \"Timestamp\",\n  UID: \"UID\",\n  /**\n   * @deprecated - Renamed to `Integration`.\n   */\n  IntegrationFields: \"IntegrationFields\",\n  /**\n   * @deprecated - Legacy field type. Use `Number` instead.\n   */\n  Range: \"Range\",\n  /**\n   * @deprecated - Legacy field type. Do not use.\n   */\n  Separator: \"Separator\",\n  /**\n   * @deprecated - Legacy field type. Use `Slices` instead.\n   */\n  LegacySlices: \"Choice\"\n};\nexport {\n  CustomTypeModelFieldType\n};\n//# sourceMappingURL=types.js.map\n","const LinkType = {\n  Any: \"Any\",\n  Document: \"Document\",\n  Media: \"Media\",\n  Web: \"Web\"\n};\nexport {\n  LinkType\n};\n//# sourceMappingURL=link.js.map\n","const RichTextNodeType = {\n  heading1: \"heading1\",\n  heading2: \"heading2\",\n  heading3: \"heading3\",\n  heading4: \"heading4\",\n  heading5: \"heading5\",\n  heading6: \"heading6\",\n  paragraph: \"paragraph\",\n  preformatted: \"preformatted\",\n  strong: \"strong\",\n  em: \"em\",\n  listItem: \"list-item\",\n  oListItem: \"o-list-item\",\n  list: \"group-list-item\",\n  oList: \"group-o-list-item\",\n  image: \"image\",\n  embed: \"embed\",\n  hyperlink: \"hyperlink\",\n  label: \"label\",\n  span: \"span\"\n};\nexport {\n  RichTextNodeType\n};\n//# sourceMappingURL=richText.js.map\n","const asText = (richTextField, separator = \" \") => {\n  let result = \"\";\n  for (let i = 0; i < richTextField.length; i++) {\n    if (\"text\" in richTextField[i]) {\n      result += (result ? separator : \"\") + richTextField[i].text;\n    }\n  }\n  return result;\n};\nexport {\n  asText\n};\n//# sourceMappingURL=asText.js.map\n","import { RichTextNodeType } from \"@prismicio/types\";\nconst uuid = () => {\n  return (++uuid.i).toString();\n};\nuuid.i = 0;\nconst asTree = (nodes) => {\n  const preparedNodes = prepareNodes(nodes);\n  const children = [];\n  for (let i = 0; i < preparedNodes.length; i++) {\n    children.push(nodeToTreeNode(preparedNodes[i]));\n  }\n  return {\n    key: uuid(),\n    children\n  };\n};\nconst createTreeNode = (node, children = []) => {\n  return {\n    key: uuid(),\n    type: node.type,\n    text: \"text\" in node ? node.text : void 0,\n    node,\n    children\n  };\n};\nconst createTextTreeNode = (text) => {\n  return createTreeNode({\n    type: RichTextNodeType.span,\n    text,\n    spans: []\n  });\n};\nconst prepareNodes = (nodes) => {\n  const mutNodes = nodes.slice(0);\n  for (let i = 0; i < mutNodes.length; i++) {\n    const node = mutNodes[i];\n    if (node.type === RichTextNodeType.listItem || node.type === RichTextNodeType.oListItem) {\n      const items = [\n        node\n      ];\n      while (mutNodes[i + 1] && mutNodes[i + 1].type === node.type) {\n        items.push(mutNodes[i + 1]);\n        mutNodes.splice(i, 1);\n      }\n      if (node.type === RichTextNodeType.listItem) {\n        mutNodes[i] = {\n          type: RichTextNodeType.list,\n          items\n        };\n      } else {\n        mutNodes[i] = {\n          type: RichTextNodeType.oList,\n          items\n        };\n      }\n    }\n  }\n  return mutNodes;\n};\nconst nodeToTreeNode = (node) => {\n  if (\"text\" in node) {\n    return createTreeNode(node, textNodeSpansToTreeNodeChildren(node.spans, node));\n  }\n  if (\"items\" in node) {\n    const children = [];\n    for (let i = 0; i < node.items.length; i++) {\n      children.push(nodeToTreeNode(node.items[i]));\n    }\n    return createTreeNode(node, children);\n  }\n  return createTreeNode(node);\n};\nconst textNodeSpansToTreeNodeChildren = (spans, node, parentSpan) => {\n  if (!spans.length) {\n    return [createTextTreeNode(node.text)];\n  }\n  const mutSpans = spans.slice(0);\n  mutSpans.sort((a, b) => a.start - b.start || b.end - a.end);\n  const children = [];\n  for (let i = 0; i < mutSpans.length; i++) {\n    const span = mutSpans[i];\n    const parentSpanStart = parentSpan && parentSpan.start || 0;\n    const spanStart = span.start - parentSpanStart;\n    const spanEnd = span.end - parentSpanStart;\n    const text = node.text.slice(spanStart, spanEnd);\n    const childSpans = [];\n    for (let j = i; j < mutSpans.length; j++) {\n      const siblingSpan = mutSpans[j];\n      if (siblingSpan !== span) {\n        if (siblingSpan.start >= span.start && siblingSpan.end <= span.end) {\n          childSpans.push(siblingSpan);\n          mutSpans.splice(j, 1);\n          j--;\n        } else if (siblingSpan.start < span.end && siblingSpan.end > span.start) {\n          childSpans.push({\n            ...siblingSpan,\n            end: span.end\n          });\n          mutSpans[j] = {\n            ...siblingSpan,\n            start: span.end\n          };\n        }\n      }\n    }\n    if (i === 0 && spanStart > 0) {\n      children.push(createTextTreeNode(node.text.slice(0, spanStart)));\n    }\n    const spanWithText = { ...span, text };\n    children.push(createTreeNode(spanWithText, textNodeSpansToTreeNodeChildren(childSpans, {\n      ...node,\n      text\n    }, span)));\n    if (spanEnd < node.text.length) {\n      children.push(createTextTreeNode(node.text.slice(spanEnd, mutSpans[i + 1] ? mutSpans[i + 1].start - parentSpanStart : void 0)));\n    }\n  }\n  return children;\n};\nexport {\n  asTree\n};\n//# sourceMappingURL=asTree.js.map\n","const composeSerializers = (...serializers) => {\n  return (...args) => {\n    for (let i = 0; i < serializers.length; i++) {\n      const serializer = serializers[i];\n      if (serializer) {\n        const res = serializer(...args);\n        if (res != null) {\n          return res;\n        }\n      }\n    }\n  };\n};\nexport {\n  composeSerializers\n};\n//# sourceMappingURL=composeSerializers.js.map\n","import { asTree } from \"./asTree.js\";\nconst serialize = (richTextField, serializer) => {\n  return serializeTreeNodes(asTree(richTextField).children, serializer);\n};\nconst serializeTreeNodes = (nodes, serializer) => {\n  const serializedTreeNodes = [];\n  for (let i = 0; i < nodes.length; i++) {\n    const treeNode = nodes[i];\n    const serializedTreeNode = serializer(treeNode.type, treeNode.node, treeNode.text, serializeTreeNodes(treeNode.children, serializer), treeNode.key);\n    if (serializedTreeNode != null) {\n      serializedTreeNodes.push(serializedTreeNode);\n    }\n  }\n  return serializedTreeNodes;\n};\nexport {\n  serialize\n};\n//# sourceMappingURL=serialize.js.map\n","import { RichTextNodeType } from \"@prismicio/types\";\nconst RichTextReversedNodeType = {\n  [RichTextNodeType.listItem]: \"listItem\",\n  [RichTextNodeType.oListItem]: \"oListItem\",\n  [RichTextNodeType.list]: \"list\",\n  [RichTextNodeType.oList]: \"oList\"\n};\nexport {\n  RichTextReversedNodeType\n};\n//# sourceMappingURL=types.js.map\n","import { RichTextReversedNodeType } from \"./types.js\";\nconst wrapMapSerializer = (mapSerializer) => {\n  return (type, node, text, children, key) => {\n    const tagSerializer = mapSerializer[RichTextReversedNodeType[type] || type];\n    if (tagSerializer) {\n      return tagSerializer({\n        // @ts-expect-error cannot type check here\n        type,\n        // @ts-expect-error cannot type check here\n        node,\n        // @ts-expect-error cannot type check here\n        text,\n        // @ts-expect-error cannot type check here\n        children,\n        // @ts-expect-error cannot type check here\n        key\n      });\n    }\n  };\n};\nexport {\n  wrapMapSerializer\n};\n//# sourceMappingURL=wrapMapSerializer.js.map\n","const RichTextNodeType = {\n  heading1: \"heading1\",\n  heading2: \"heading2\",\n  heading3: \"heading3\",\n  heading4: \"heading4\",\n  heading5: \"heading5\",\n  heading6: \"heading6\",\n  paragraph: \"paragraph\",\n  preformatted: \"preformatted\",\n  strong: \"strong\",\n  em: \"em\",\n  listItem: \"list-item\",\n  oListItem: \"o-list-item\",\n  list: \"group-list-item\",\n  oList: \"group-o-list-item\",\n  image: \"image\",\n  embed: \"embed\",\n  hyperlink: \"hyperlink\",\n  label: \"label\",\n  span: \"span\"\n};\nexport {\n  RichTextNodeType\n};\n//# sourceMappingURL=richText.js.map\n"],"names":["s","l","u","d","c","h","g","warn","e","console","p","sortNumeric","t","m","getSizes","f","getSrcSet","map","src","width","join","v","lastIndexOf","a","slice","length","w","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","toLowerCase","n","Math","round","y","generateImageSource","filename","format","fit","options","b","pluginName","reporter","S","N","backgroundColor","x","placeholderURL","Error","I","Set","size","has","delete","add","W","Object","entries","filter","outputPixelDensities","k","M","sizes","presentationWidth","presentationHeight","unscaledWidth","E","j","sources","R","forEach","Boolean","find","fallback","srcSet","push","type","_","images","placeholder","dedupeAndSortDensities","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","getImage","gatsbyImageData","gatsbyImage","childImageSharp","getSrc","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","A","O","T","z","_Picture$propTypes","loading","alt","shouldLoad","createElement","decoding","L","Picture","key","propTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","q","C","Placeholder","D","MainImage","Fragment","P","H","NativeScriptLoading","dangerouslySetInnerHTML","__html","F","Sizer","style","paddingTop","maxWidth","display","role","position","B","LayoutWrapper","children","G","V","U","removeNewLines","replace","X","GatsbyImage","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","Y","Z","__imageData","__error","J","checkDimensionProps","number","call","arguments","K","Q","StaticImage","generateImageData","getImageData","getLowResolutionImageURL","withArtDirection","PUBLIC_MODELS_FILE_NAME_SEED_CACHE_KEY","DEFAULT_IMGIX_PARAMS","bootstrapPrismicPreview","repositoryName","abortController","state","usePrismicPreviewStore","getState","isBootstrapped","pluginOptions","getPluginOptions","error","fmtLog","repositoryConfig","getRepositoryConfig","client","getClient","signal","getCachedRepository","localPublishedDocumentIDs","newDocuments","Promise","all","fetchPublishedDocumentIDs","fetchNewDocuments","setPublishedDocumentIDs","modelsRaw","fetch","withAssetPrefix","__PUBLIC_MODELS_PATH__","models","json","modelsForRepository","fetchLinkedDocuments","customTypeModels","sharedSliceModels","doc","model","model2","id","normalizedDocument","normalizeDocument","addDocument","setIsBootstrapped","extractLinkedDocumentIDsFromField","looseValue","looseModel","CustomTypeModelFieldType","Slices","value","sliceModel","_b","_a","config","choices","slice_type","CustomTypeModelSliceType","Slice","extractLinkedDocumentIDsFromFields","primary","items","item","repeat","flat","SharedSlice","typedSlice","variationModel","_c","variations","variation","Group","fields","Link","isBroken","fieldNames","keys","fieldName","extractLinkedDocumentIDs","document","customTypeModel","fieldModels","assign","values","linkedIDs","data","alternateLanguageIDs","alternate_languages","alternateLanguage","documents","iterationCount","maximumIterationCount","aggregateAlreadyFetchedIDs","alreadyFetchedIDs","ids","prunedIDs","fetchedLinkedDocuments","getAllByIDs","first","getFirst","isReleasePreview","rest","dangerouslyGetAll","predicates","dateBetween","Date","parse","last_publication_date","not","endpoint","graphQLEndpoint","getGraphQLEndpoint","existingIDs","after","hasNextPage","url","URL","afterStr","searchParams","set","res","graphQLFetch","toString","_allDocuments","edges","node","_meta","pageInfo","endCursor","text","createClient","apiEndpoint","accessToken","routes","defaultParams","lang","fetchLinks","graphQuery","setClient","repositoryConfigs","test","getPreviewCookie","defaultTransformFieldName","withDocumentProxy","target","Proxy","get","target2","prop","receiver","hasOwnProperty","getDocument","asLink","raw","linkResolver","Reflect","imgixGatsbyImageDataUrlBuilder","args","buildURL","imageImgixParams","fm","normalizeImageField","isFilled","dimensions","localFile","publicURL","normalizeField","path","sliceZone","result","uuid","__typename","pascalCase","typePrefix","normalizeFields","sharedSliceModel","group","_asLink","link_type","StructuredText","html","richText","asHTML","serializer","htmlSerializer","asText","Image","thumbnails","transformFieldName","thumbnailModel","transformedThumbnailName","name","transformedFieldName","_asLink2","_previewable","prismicId","dataRaw","input","pascalCase$1","pascalCaseTransformMerge","camelCaseToParamCase","match","params","instance","camelCasedParamKey","paramKey","paramValue","isArray","append","buildPixelDensitySrcSet","pixelDensities","dpr","buildWidthSrcSet","widths","Client","constructor","baseURL","buildURLForPath","buildWidthSrcSetForPath","buildPixelDensitySrcSetForPath"],"sourceRoot":""}