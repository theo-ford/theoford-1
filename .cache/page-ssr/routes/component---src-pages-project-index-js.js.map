{"version":3,"file":"component---src-pages-project-index-js.js","mappings":"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","sources":["webpack://studio-prismic-starter/./node_modules/camelcase/index.js","webpack://studio-prismic-starter/../src/image-utils.ts","webpack://studio-prismic-starter/../src/components/hooks.ts","webpack://studio-prismic-starter/../src/components/placeholder.tsx","webpack://studio-prismic-starter/../src/components/picture.tsx","webpack://studio-prismic-starter/../src/components/main-image.tsx","webpack://studio-prismic-starter/../src/components/layout-wrapper.tsx","webpack://studio-prismic-starter/../src/components/gatsby-image.server.tsx","webpack://studio-prismic-starter/../src/components/static-image.server.tsx","webpack://studio-prismic-starter/./src/components/tf/media-query.js","webpack://studio-prismic-starter/./src/components/tf/nav-grid/nav.js","webpack://studio-prismic-starter/./src/components/tf/page-load.js","webpack://studio-prismic-starter/./src/pages/project_index.js","webpack://studio-prismic-starter/./assets/WhiteLogo.svg"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { useState, useEffect } from \"react\";\n\nexport function useMediaQuery(query) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { withPreview } from \"gatsby-source-prismic\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../media-query\";\nimport Icon from \"../../../../assets/WhiteLogo.svg\";\nimport { graphql, Link } from \"gatsby\";\nimport { PageLoad } from \"../page-load\";\n\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 1;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\n\nexport const NavGrid = () => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  var [currentPage, setCurrentPage] = useState(null);\n  const LogoConRef = useRef(null);\n\n  useEffect(() => {\n    var inputString = window.location.href;\n    var outputString = inputString.replace(/.*\\//, \"\");\n    if (outputString == \"project_index\") {\n      setCurrentPage(outputString);\n    } else if (outputString == \"office\") {\n      setCurrentPage(outputString);\n    } else {\n      setCurrentPage(null);\n    }\n  }, [setCurrentPage]);\n\n  if (isPageWide) {\n    return (\n      <>\n        <LogoGridCon style={{ opacity: PageLoad ? 1 : 0 }}>\n          <LogoConCon>\n            <LogoCon ref={LogoConRef}>\n              <Link to=\"/\">\n                <Icon />\n              </Link>\n            </LogoCon>\n          </LogoConCon>\n          <MenuCon>\n            <DesktopNavP>\n              <Link to=\"/\">Select, </Link>\n              <Link\n                to=\"/project_index\"\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index,{\" \"}\n              </Link>\n              <Link\n                to=\"/office\"\n                className={currentPage == \"office\" ? \"selected\" : \"\"}\n              >\n                Office\n              </Link>\n              {/* <br></br>Instagram, Twitter */}\n            </DesktopNavP>\n          </MenuCon>\n        </LogoGridCon>\n      </>\n    );\n  }\n  if (!isPageWide) {\n    return (\n      <>\n        <LogoGridCon>\n          <MobileLeftCol>\n            <Link to=\"/\">\n              <MobileNavP>Selected</MobileNavP>\n            </Link>\n            <Link to=\"/project_index\">\n              <MobileNavP\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index\n              </MobileNavP>\n            </Link>\n          </MobileLeftCol>\n\n          <MobileRightCol>\n            <Link to=\"/office\">\n              <MobileNavP className={currentPage == \"office\" ? \"selected\" : \"\"}>\n                Office\n              </MobileNavP>\n            </Link>\n            <MobileNavP>Instagram</MobileNavP>\n          </MobileRightCol>\n        </LogoGridCon>\n      </>\n    );\n  }\n};\n","import { useState, useEffect } from \"react\";\n\nexport function PageLoad(query) {\n  const [pageLoad, setPageLoad] = useState(null);\n\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport { Helmet } from \"react-helmet\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\n// import PlayButton from \"../../assets/Logo.jpg\";\n// import PlayButton from \"../../public/icons/logo.jpg\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: black;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n  body {\n    // https://stackoverflow.com/questions/47095596/body-overflow-x-hidden-breaks-position-sticky\n    background-color: black;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n`;\n\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: fixed;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n\n  @media (max-width: 666px) {\n    /* display: none; */\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 10px;\n    width: calc(100% - 20px);\n    margin-left: 10px;\n  }\n`;\nconst Grid2B = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100%);\n  z-index: 20000;\n`;\nconst Col1 = styled.div`\n  grid-column: span 8;\n`;\nconst Col2 = styled.div`\n  grid-column: span 3;\n`;\nconst Col3 = styled.div`\n  grid-column: span 1;\n`;\nconst Col4 = styled.div`\n  grid-column: span 4;\n`;\nconst LogoCon = styled.div`\n  top: 12.5px;\n  mix-blend-mode: exclusion;\n  width: calc(50% - 6.25px);\n  display: inline-block;\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n\n  .shrink {\n    width: calc(37.5% - 6.25px);\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    width: calc(75% - 6.25px);\n    margin-top: 14vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\nconst NavCon1 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  margin-top: -3px;\n  vertical-align: top;\n  mix-blend-mode: exclusion;\n  p {\n    color: #878787;\n  }\n  span.selected {\n    color: white;\n  }\n  span.navItem {\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst NavCon2 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  margin-left: 12.5px;\n  margin-top: -3px;\n  mix-blend-mode: exclusion;\n  z-index: 300000;\n  p {\n    color: #878787;\n    /* font-size: 12px; */\n  }\n  p.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst WhiteText = styled.p`\n  color: white;\n`;\nconst TableCon = styled.div`\n  margin-top: 20px;\n`;\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\n\nconst ImageBorderCon = styled.div`\n  height: 10px;\n`;\n\nconst IndexImgCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst IndexImg = styled.div`\n  width: 100%;\n  opacity: 0;\n  /* position: absolute; */\n  /* &:first-child {\n    opacity: 1;\n  } */\n`;\nconst ProjectCon = styled.div`\n  &:hover ${IndexImg} {\n    opacity: 1;\n  }\n  /* &:nth-child(1) .index_img {\n    opacity: 1;\n  } */\n`;\nconst Border = styled.div`\n  grid-column: span 14;\n  border-top: 1px solid white;\n  @media (max-width: 666px) {\n    grid-column: span 16;\n  }\n`;\nconst InformationCon = styled.div`\n  height: 20px;\n`;\nconst ImgSpacer = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst ProjectTitleCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    grid-column: span 8;\n  }\n`;\nconst ClientCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst SectorCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst CategoryCon = styled.div`\n  grid-column: span 4;\n  @media (max-width: 666px) {\n    grid-column: span 8;\n  }\n`;\nconst YearCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst LocationCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst IndexBodyP = styled.p`\n  color: white;\n  font-size: 12px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\nconst TableHeaderCon = styled.div`\n  margin-top: 140px;\n`;\n\nconst IndexTitleP = styled.p`\n  font-size: 16px;\n  color: white;\n`;\nconst CategoryMenuConCon = styled.div`\n  width: calc(25% - 12.5px);\n  margin-left: calc(75% + 12.5px);\n  top: 12.5px;\n  position: absolute;\n  z-index: 1000000;\n\n  @media (max-width: 666px) {\n    margin-top: 70px;\n    width: calc(100% - 20px);\n    margin-left: calc(10px);\n\n    /* display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px; */\n  }\n`;\nconst CategoryMenuCon = styled.div`\n  /* grid-column: 2 / span 1; */\n`;\n\nconst CategoryItem = styled.span`\n  font-size: 16px;\n  color: #878787;\n  &.active {\n    color: white;\n  }\n`;\nconst TextImgToggleP = styled.p`\n  color: #878787;\n  span.active {\n    color: white;\n  }\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n  font-size: 12px;\n`;\nconst ProjectIndex = ({ data }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  const LogoConRef = useRef(null);\n  const [activeCategory, setCategory] = useState(null);\n  const [categoriesVisible, setCategoriesVisible] = useState(false);\n\n  const LogoNav = scrollPosition => {\n    if (isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <Grid2B>\n              <Col1>\n                <LogoCon ref={LogoConRef}>\n                  <Icon />\n                </LogoCon>\n              </Col1>\n              <Col2>\n                <NavCon1>\n                  <p>\n                    <Link to=\"/\">\n                      <span className=\"selected\">Select,</span>{\" \"}\n                    </Link>\n                    <Link to=\"/project_index\">\n                      <span className=\"navItem\">Index,</span>{\" \"}\n                    </Link>\n                    <Link to=\"/about17\">\n                      <span className=\"navItem\">Office</span>\n                    </Link>\n                    {/* <br></br>Instagram, Twitter */}\n                  </p>\n                </NavCon1>\n              </Col2>\n              <Col3>\n                {/* <TextImgToggleP>\n                  <span class=\"active\">Text</span>, Img\n                </TextImgToggleP> */}\n              </Col3>\n              <Col4>\n                <Categories></Categories>\n              </Col4>\n            </Grid2B>\n          </LogoGridCon>\n        </>\n      );\n    }\n    if (!isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <NavCon1>\n              <Link to=\"/\">\n                <p className=\"selected\">Selected</p>\n              </Link>\n              <Link to=\"/project_index\">\n                <p>\n                  <span className=\"navItem\">Index</span>\n                </p>\n              </Link>\n            </NavCon1>\n            <NavCon2>\n              <Link to=\"/about17\">\n                <p>Office</p>\n              </Link>\n              <p>Instagram</p>\n            </NavCon2>\n          </LogoGridCon>\n          {/* <LogoCon ref={LogoConRef}>\n            <Icon />\n          </LogoCon> */}\n        </>\n      );\n    }\n  };\n  const squareProjects = data.allPrismicProject.edges.map((content, index) => {\n    return (\n      // <WhiteText>\n      //   {content.node.data.project_title.text}, {content.node.data.year.text}\n      // </WhiteText>\n      { content }\n    );\n  });\n  const filmsProjects = data.allPrismicFilmLeadProject.edges.map(\n    (content, index) => {\n      // console.log(content.node.data.year.text);\n      // console.log(content);\n      return (\n        // <WhiteText>\n        //   {content.node.data.project_title.text}, {content.node.data.year.text}\n        // </WhiteText>\n        { content }\n      );\n    }\n  );\n  // console.log(\"SQUARE PROJECTS\");\n  // console.log(squareProjects);\n\n  // console.log(\"FILMS PROJECTS\");\n  // console.log(filmsProjects);\n\n  const mergedArray = squareProjects.concat(filmsProjects);\n  // console.log(\"MERGED ARRAY\");\n  // console.log(mergedArray);\n\n  const organisedArray = mergedArray.sort(function(a, b) {\n    // console.log(a.content);\n    // console.log(a.content.node.data.year.text);\n    return b.content.node.data.year.text - a.content.node.data.year.text;\n  });\n  // console.log(\"ORGANISED ARRAY\");\n  // console.log(organisedArray);\n  \n  const organisedArrayMap = organisedArray\n    .filter(project => {\n      if (activeCategory === null) {\n        return project;\n      } else {\n        // console.log(project.content.node.data.categories);\n        return project.content.node.data.categories\n          .map(category =>\n            // console.log(category.category.slug);\n            x(category.category.slug)\n          )\n          .includes(activeCategory);\n      }\n    })\n    .map((content, index) => {\n      // console.log(content);\n      // console.log(content.content.node.data.year.text);\n      var index_image = getImage(content.content.node.data.index_preview_img)\n      return (\n        <>\n          <Link to={`/${content.content.node.uid}`}>\n            <ProjectCon>\n              <ImageBorderCon>\n                <Grid16>\n                  <IndexImgCon>\n                    {/* <IndexImg\n                      className=\"index_img\"\n                      srcSet={\n                        content.content.node.data.index_preview_img\n                      }\n                    /> */}\n                    <IndexImg className=\"index_img\">\n                      <GatsbyImage image={index_image} />\n                    </IndexImg>\n                    {/* <IndexImg src={PlayButton}></IndexImg> */}\n                  </IndexImgCon>\n                  <Border></Border>\n                </Grid16>\n              </ImageBorderCon>\n\n              <InformationCon>\n                <Grid16>\n                  <ImgSpacer></ImgSpacer>\n                  <ProjectTitleCon>\n                    <IndexBodyP>\n                      {content.content.node.data.project_title.text}\n                    </IndexBodyP>\n                  </ProjectTitleCon>\n                  <ClientCon>\n                    <IndexBodyP>\n                      {content.content.node.data.client.text}\n                    </IndexBodyP>\n                  </ClientCon>\n                  <SectorCon>\n                    <IndexBodyP>\n                      {content.content.node.data.sector.text}\n                    </IndexBodyP>\n                  </SectorCon>\n                  <CategoryCon>\n                    <IndexBodyP>\n                      {\" \"}\n                      {content.content.node.data.categories.map(\n                        (category, index) => {\n                          return (\n                            <CategoryName key={index}>\n                              {(index ? \", \" : \"\") + category.category.slug}\n                            </CategoryName>\n                          );\n                        }\n                      )}\n                    </IndexBodyP>\n                  </CategoryCon>\n                  <YearCon>\n                    <IndexBodyP>\n                      {\" \"}\n                      {content.content.node.data.year.text}\n                    </IndexBodyP>\n                  </YearCon>\n                  <LocationCon>\n                    <IndexBodyP>\n                      {content.content.node.data.location.text}\n                    </IndexBodyP>\n                  </LocationCon>\n                </Grid16>\n              </InformationCon>\n            </ProjectCon>\n          </Link>\n        </>\n      );\n    });\n  // console.log(\"ORGANISED ARRAY MAP\");\n  // console.log(organisedArrayMap);\n\n  function x(y) {\n    return y.replace(\"-\", \" \").replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n  }\n\n  const Categories = () => {\n    console.log(activeCategory);\n    return (\n      <>\n        <CategoryItem\n          onClick={() => setCategory(null)}\n          className={activeCategory === null ? `active` : ``}\n        >\n          All,{\" \"}\n        </CategoryItem>\n\n        {categoriesList}\n      </>\n    );\n  };\n\n  const categoriesList = data.allPrismicCategory.edges.map((content, index) => {\n    // console.log(content.node.data.name.length);\n    // console.log(index);\n    return (\n      <>\n        <CategoryItem>{index ? \", \" : \"\"}</CategoryItem>\n\n        <CategoryItem\n          className={activeCategory === content.node.data.name ? `active` : ``}\n          key={index}\n          onClick={() => {\n            // console.log(\"testing\");\n            setCategory(content.node.data.name);\n          }}\n        >\n          {content.node.data.name}\n        </CategoryItem>\n      </>\n    );\n  });\n\n  return (\n    <>\n      <GlobalStyle />\n      <Helmet>\n        <title>(10) Pagination 1</title>\n      </Helmet>\n\n      {/* <LogoNav></LogoNav> */}\n\n      <NavGrid></NavGrid>\n      <CategoryMenuConCon>\n        <CategoryMenuCon>\n          <Categories></Categories>\n        </CategoryMenuCon>\n      </CategoryMenuConCon>\n\n      <TableHeaderCon>\n        <Grid16>\n          <ImgSpacer></ImgSpacer>\n          <ProjectTitleCon>\n            <IndexTitleP>Project</IndexTitleP>\n          </ProjectTitleCon>\n          <ClientCon>\n            <IndexTitleP>Client</IndexTitleP>\n          </ClientCon>\n          <SectorCon>\n            <IndexTitleP>Sector</IndexTitleP>\n          </SectorCon>\n          <CategoryCon>\n            <IndexTitleP>Category</IndexTitleP>\n          </CategoryCon>\n          <YearCon>\n            <IndexTitleP>Year</IndexTitleP>\n          </YearCon>\n          <LocationCon>\n            <IndexTitleP>Location</IndexTitleP>\n          </LocationCon>\n        </Grid16>\n      </TableHeaderCon>\n      <TableCon>{organisedArrayMap}</TableCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(ProjectIndex);\n\nexport const query = graphql`\n  query IndexQuery37 {\n    allPrismicProject {\n      edges {\n        node {\n          uid\n          data {\n            categories {\n              category {\n                slug\n                id\n              }\n            }\n            project_title {\n              text\n            }\n            year {\n              text\n            }\n            client {\n              text\n            }\n            location {\n              text\n            }\n            sector {\n              text\n            }\n            index_preview_img {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n    allPrismicFilmLeadProject {\n      edges {\n        node {\n          uid\n          data {\n            categories {\n              category {\n                slug\n                id\n              }\n            }\n            project_title {\n              text\n            }\n            year {\n              text\n            }\n            client {\n              text\n            }\n            location {\n              text\n            }\n            sector {\n              text\n            }\n            index_preview_img {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n    allPrismicCategory {\n      edges {\n        node {\n          data {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction WhiteLogo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:#fff;}\")),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m-.62,1h254.56v52.03h-98.04v254.13h-58.48V53.03H-.62V1Z\",\"key\":1}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m382.51,80.12c24.08,0,43.07,6.95,56.98,20.85,13.9,13.91,20.85,33.61,20.85,59.12v147.06h-54.18v-138.03c0-28.09-13.91-42.14-41.71-42.14-13.76,0-25.44,4.94-35.04,14.83-9.61,9.89-14.41,23.58-14.41,41.07v124.27h-54.18V1h54.18v113.95c16.91-23.22,39.41-34.83,67.51-34.83Z\",\"key\":2}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m687.81,200.09v12.9h-165.98c2,18.92,7.96,33.18,17.85,42.79,9.89,9.61,23.15,14.4,39.77,14.4,24.65,0,41.56-10.6,50.74-31.82h52.03c-5.74,22.65-17.78,40.63-36.12,53.96-18.35,13.33-40.71,20-67.08,20-32.97,0-59.63-10.6-79.98-31.82-20.36-21.21-30.53-49.3-30.53-84.28s10.03-63.06,30.1-84.28c20.35-21.21,46.87-31.82,79.55-31.82s60.2,11.04,79.98,33.11c19.78,22.08,29.67,51.03,29.67,86.86Zm-110.08-77.83c-31.82,0-50.31,17.63-55.47,52.89h111.37c-2.3-16.34-8.32-29.24-18.06-38.7-9.75-9.46-22.36-14.19-37.84-14.19Z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m890.34,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":4}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1233.04,1v52.03h-158.24v72.24h144.05v49.88h-144.05v132.01h-58.05V1h216.29Z\",\"key\":5}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1423.96,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":6}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1581.77,81.84c4.87,0,9.31.29,13.33.86v49.88h-13.76c-20.64,0-36.48,5.23-47.51,15.7-11.04,10.47-16.55,25.87-16.55,46.22v112.66h-54.18V85.28h52.46v39.56c12.32-28.66,34.4-43,66.22-43Z\",\"key\":7}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1755.49,114.09V1h54.18v306.16h-52.46v-30.96c-16.34,24.08-39.71,36.12-70.09,36.12s-54.9-10.6-72.67-31.82c-18.06-21.21-27.09-49.3-27.09-84.28s9.03-63.78,27.09-84.71c17.48-20.92,41.71-31.39,72.67-31.39s52.6,11.33,68.37,33.97Zm-112.66,83.85c0,22.94,5.01,40.28,15.05,52.03,10.03,11.76,23.93,17.63,41.71,17.63s31.82-6.16,42.14-18.49c10.03-12.32,15.05-29.95,15.05-52.89s-5.02-40.56-15.05-52.89c-10.04-12.32-24.08-18.49-42.14-18.49s-31.32,6.45-41.49,19.35c-10.18,12.9-15.27,30.82-15.27,53.75Z\",\"key\":8})]);\n}\n\nWhiteLogo.defaultProps = {\"id\":\"Layer_1\",\"viewBox\":\"0 0 1810 322.5\"};\n\nmodule.exports = WhiteLogo;\n\nWhiteLogo.default = WhiteLogo;\n"],"names":["s","l","u","d","c","h","g","warn","e","console","p","sortNumeric","t","m","getSizes","f","getSrcSet","map","src","width","join","v","lastIndexOf","a","slice","length","w","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","toLowerCase","n","Math","round","y","generateImageSource","filename","format","fit","options","b","pluginName","reporter","S","N","backgroundColor","x","placeholderURL","Error","I","Set","size","has","delete","add","W","Object","entries","filter","outputPixelDensities","k","M","sizes","presentationWidth","presentationHeight","unscaledWidth","E","j","sources","R","forEach","Boolean","find","fallback","srcSet","push","type","_","images","placeholder","dedupeAndSortDensities","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","getImage","gatsbyImageData","gatsbyImage","childImageSharp","getSrc","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","A","O","T","z","_Picture$propTypes","loading","alt","shouldLoad","createElement","decoding","L","Picture","key","propTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","q","C","Placeholder","D","MainImage","Fragment","P","H","NativeScriptLoading","dangerouslySetInnerHTML","__html","F","Sizer","style","paddingTop","maxWidth","display","role","position","B","LayoutWrapper","children","G","V","U","removeNewLines","replace","X","GatsbyImage","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","Y","Z","__imageData","__error","J","checkDimensionProps","number","call","arguments","K","Q","StaticImage","generateImageData","getImageData","getLowResolutionImageURL","withArtDirection","useState","useEffect","useMediaQuery","query","matches","setMatches","window","matchMedia","listener","addListener","removeListener","React","useRef","withPreview","styled","createGlobalStyle","Icon","graphql","Link","PageLoad","LogoGridCon","div","withConfig","componentId","LogoConCon","MenuCon","LogoCon","DesktopNavP","MobileLeftCol","MobileRightCol","MobileNavP","NavGrid","isPageWide","currentPage","setCurrentPage","LogoConRef","inputString","location","href","outputString","ref","to","pageLoad","setPageLoad","onPageLoad","log","document","readyState","addEventListener","removeEventListener","createContext","useContext","useMemo","ReactDOM","findDOMNode","useScrollRestoration","keyframes","withPrismicPreview","ImageOrientation","Helmet","GlobalStyle","Grid2B","Col1","Col2","Col3","Col4","NavCon1","NavCon2","WhiteText","TableCon","Grid16","ImageBorderCon","IndexImgCon","IndexImg","ProjectCon","Border","InformationCon","ImgSpacer","ProjectTitleCon","ClientCon","SectorCon","CategoryCon","YearCon","LocationCon","IndexBodyP","TableHeaderCon","IndexTitleP","CategoryMenuConCon","CategoryMenuCon","CategoryItem","span","TextImgToggleP","CategoryName","ProjectIndex","data","activeCategory","setCategory","categoriesVisible","setCategoriesVisible","LogoNav","scrollPosition","Categories","squareProjects","allPrismicProject","edges","content","index","filmsProjects","allPrismicFilmLeadProject","mergedArray","organisedArray","node","year","text","organisedArrayMap","project","categories","category","slug","index_image","index_preview_img","uid","project_title","client","sector","toUpperCase","onClick","categoriesList","allPrismicCategory","name"],"sourceRoot":""}