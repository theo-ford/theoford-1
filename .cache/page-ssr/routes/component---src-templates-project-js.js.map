{"version":3,"file":"component---src-templates-project-js.js","mappings":";;;;;;;;;;;;;AAEO,QAAS,CAAAG,WAAWA,CAACC,GAAG,CAAE,CAC/B;AACA,KAAM,GAACC,UAAU,GAAEC,aAAa,EAAIL,+CAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAAM,WAAW,CAAGL,6CAAM,CAAC,IAAI,CAAC,CAChCF,gDAAS,CAAC,IAAM,CACdO,WAAW,CAACC,OAAO,CAAG,GAAI,CAAAC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,GACrDJ,aAAa,CAACI,KAAK,CAACC,cAAc,CACpC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACNX,gDAAS,CAAC,IAAM,CACdO,WAAW,CAACC,OAAO,CAACI,OAAO,CAACR,GAAG,CAACI,OAAO,CAAC,CACxC,MAAO,IAAM,CACXD,WAAW,CAACC,OAAO,CAACK,UAAU,CAAC,CAAC,CAClC,CAAC,CACH,CAAC,CAAE,CAACT,GAAG,CAAC,CAAC,CACT,MAAO,CAAAC,UAAU,CACnB;;;;;;;;;;;;;;;;ACLA,KAAM,CAAAkB,gBAAgB,CAAGL,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oCAAAC,WAAA,+FAMlC,CACD,KAAM,CAAAC,gBAAgB,CAAGV,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oCAAAC,WAAA,8CAIlC,CACD,KAAM,CAAAE,kBAAkB,CAAGX,yDAAM,CAACY,KAAK,CAAAL,UAAA,EAAAC,WAAA,sCAAAC,WAAA,8CAItC,CACD,KAAM,CAAAI,mBAAmB,CAAGb,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,uCAAAC,WAAA,uBAAE,CACxC,KAAM,CAAAK,gBAAgB,CAAGZ,4DAAS,gDAIjC,CACD,KAAM,CAAAa,oBAAoB,CAAGf,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,wCAAAC,WAAA,+UAgBjBK,gBAAgB,CAIrC,CAEM,KAAM,CAAAE,aAAa,CAAGA,CAAC,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,YAAa,CAAC,GAAK,CACxE;AACA;AACA,KAAM,CAAAC,gBAAgB,CAAGpC,6CAAM,CAAC,IAAI,CAAC,CACrC,KAAM,CAAAG,UAAU,CAAGF,wEAAW,CAACmC,gBAAgB,CAAC,CAChD,KAAM,GAACC,aAAa,GAAEC,gBAAgB,EAAIvC,+CAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACwC,aAAa,CAAEC,gBAAgB,CAAC,CAAG5B,qDAAc,CAAC,KAAK,CAAC,CAE/D;AACA;AAEA,KAAM,CAAA6B,YAAY,CAAGA,CAAA,GAAM,CACzBD,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED1C,gDAAS,CAAC,IAAM,CACd,GAAIK,UAAU,EAAI,IAAI,CAAE,CACtB;AACA;AACAmC,gBAAgB,CAACL,QAAQ,CAAC,CAC1BG,gBAAgB,CAAC9B,OAAO,CAACoC,IAAI,CAAC,CAAC,CAC/BN,gBAAgB,CAAC9B,OAAO,CAACqC,IAAI,CAAC,CAAC,CACjC,CAAC,IAAM,IAAIxC,UAAU,GAAK,KAAK,CAAE,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAqC,gBAAgB,CAAC,KAAK,CAAC,CACvBF,gBAAgB,CAAC,EAAE,CAAC,CACtB,CACF,CAAC,CAAE,CAACnC,UAAU,CAAC,CAAC,CAChB,KAAM,CAAAyC,cAAc,CAAGxB,uEAAQ,CAACc,WAAW,CAAC,CAC5C,mBACEtB,0DAAA,CAAAA,uDAAA,mBACEA,0DAAA,CAACS,gBAAgB,mBACfT,0DAAA,CAACiB,mBAAmB,EAClBkB,KAAK,CAAE,CACLC,OAAO,CAAET,aAAa,CAAG,CAAC,CAAG,CAAC,CAC9BU,QAAQ,CAAEV,aAAa,CAAG,UAAU,CAAG,UACvC;AACA;AACF,CAAE,eAEF3B,0DAAA,CAACmB,oBAAoB,mBACnBnB,0DAAA,UAAG,eAAgB,CACC,CAAC,cAEvBA,0DAAA,CAACc,gBAAgB,EACfwB,MAAM,CAAEhB,WAAY,CACpBa,KAAK,CAAE,CACLC,OAAO,CAAET,aAAa,CAAG,CAAC,CAAG,CAAC,CAC9BU,QAAQ,CAAEV,aAAa,CAAG,UAAU,CAAG,UACvC;AACA;AACF,CAAE,eAEF3B,0DAAA,CAACO,sEAAW,EAACgC,KAAK,CAAEP,cAAe,CAAE,CACrB,CACC,CAAC,cAEtBhC,0DAAA,CAACe,kBAAkB,EACjByB,WAAW,MACXC,QAAQ,MACRC,KAAK,MACLC,IAAI,MACJrD,GAAG,CAAEkC,gBACL;AAAA,CACAK,YAAY,CAAEA,YAAa,CAC3BM,KAAK,CAAE,CACLC,OAAO,CAAET,aAAa,CAAG,CAAC,CAAG,CAAC,CAC9BU,QAAQ,CAAEV,aAAa,CAAG,UAAU,CAAG,UACvC;AACA;AACA;AACF,CAAE,eAEF3B,0DAAA,WAAQ4C,IAAI,CAAC,WAAW,CAACC,GAAG,CAAEpB,aAAc,CAAE,CAC5B,CACJ,CAClB,CAAC,CAEP,CAAC,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AClKO,QAAS,CAAAqB,aAAaA,CAACC,KAAK,CAAE,CACnC,KAAM,GAACC,OAAO,GAAEC,UAAU,EAAI9D,+CAAQ,CAAC,KAAK,CAAC,CAE7CD,gDAAS,CAAC,IAAM,CACd,KAAM,CAAAgE,KAAK,CAAGC,MAAM,CAACC,UAAU,CAACL,KAAK,CAAC,CACtC,GAAIG,KAAK,CAACF,OAAO,GAAKA,OAAO,CAAE,CAC7BC,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC,CAC3B,CACA,KAAM,CAAAK,QAAQ,CAAGA,CAAA,GAAM,CACrBJ,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC,CAC3B,CAAC,CACDE,KAAK,CAACI,WAAW,CAACD,QAAQ,CAAC,CAC3B,MAAO,IAAMH,KAAK,CAACK,cAAc,CAACF,QAAQ,CAAC,CAC7C,CAAC,CAAE,CAACL,OAAO,CAAED,KAAK,CAAC,CAAC,CAEpB,MAAO,CAAAC,OAAO,CAChB;;;;;;;;;;;;;;;;;;;ACVA,UACA,KAAM,CAAAa,WAAW,CAAGzD,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oBAAAC,WAAA,gRAe7B,CACD,aACA,KAAM,CAAAiD,UAAU,CAAG1D,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,mBAAAC,WAAA,+DAG5B,CACD,KAAM,CAAAkD,OAAO,CAAG3D,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,gBAAAC,WAAA,mEAGzB,CACD,KAAM,CAAAmD,OAAO,CAAG5D,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,gBAAAC,WAAA,qHAMzB,CACD,KAAM,CAAAoD,WAAW,CAAG7D,yDAAM,CAAC8D,CAAC,CAAAvD,UAAA,EAAAC,WAAA,oBAAAC,WAAA,yHAS3B,CAED,YACA,KAAM,CAAAsD,aAAa,CAAG/D,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,sBAAAC,WAAA,+DAG/B,CACD,KAAM,CAAAuD,cAAc,CAAGhE,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,uBAAAC,WAAA,+DAGhC,CACD,KAAM,CAAAwD,UAAU,CAAGjE,yDAAM,CAAC8D,CAAC,CAAAvD,UAAA,EAAAC,WAAA,mBAAAC,WAAA,uIAU1B,CAEM,KAAM,CAAAyD,OAAO,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAAAC,UAAU,CAAGzB,oEAAa,CAAC,oBAAoB,CAAC,CACpD,GAAI,GAAC0B,WAAW,GAAEC,cAAc,EAAItF,+CAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAAAuF,UAAU,CAAGtF,6CAAM,CAAC,IAAI,CAAC,CAE/BF,gDAAS,CAAC,IAAM,CACd,GAAI,CAAAyF,WAAW,CAAGxB,MAAM,CAACyB,QAAQ,CAACC,IAAI,CACtC,GAAI,CAAAC,YAAY,CAAGH,WAAW,CAACI,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,CAClD,GAAID,YAAY,EAAI,eAAe,CAAE,CACnCL,cAAc,CAACK,YAAY,CAAC,CAC9B,CAAC,IAAM,IAAIA,YAAY,EAAI,QAAQ,CAAE,CACnCL,cAAc,CAACK,YAAY,CAAC,CAC9B,CAAC,IAAM,CACLL,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAAC,CAAE,CAACA,cAAc,CAAC,CAAC,CAEpB,GAAIF,UAAU,CAAE,CACd,mBACEvE,0DAAA,CAAAA,uDAAA,mBACEA,0DAAA,CAAC6D,WAAW,EAAC1B,KAAK,CAAE,CAAEC,OAAO,CAAEwB,yDAAQ,CAAG,CAAC,CAAG,CAAE,CAAE,eAChD5D,0DAAA,CAAC8D,UAAU,mBACT9D,0DAAA,CAACgE,OAAO,EAAC1E,GAAG,CAAEoF,UAAW,eACvB1E,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAC,GAAG,eACVhF,0DAAA,CAACyD,8DAAI,KAAE,CACH,CACC,CACC,CAAC,cACbzD,0DAAA,CAAC+D,OAAO,mBACN/D,0DAAA,CAACiE,WAAW,mBACVjE,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAC,GAAG,EAAC,UAAc,CAAC,cAC5BhF,0DAAA,CAAC2D,wCAAI,EACHqB,EAAE,CAAC,gBAAgB,CACnBC,SAAS,CAAET,WAAW,EAAI,eAAe,CAAG,UAAU,CAAG,EAAG,EAC7D,QACO,CAAC,GACH,CAAC,cACPxE,0DAAA,CAAC2D,wCAAI,EACHqB,EAAE,CAAC,SAAS,CACZC,SAAS,CAAET,WAAW,EAAI,QAAQ,CAAG,UAAU,CAAG,EAAG,EACtD,QAEK,CAEK,CACN,CACE,CACb,CAAC,CAEP,CACA,GAAI,CAACD,UAAU,CAAE,CACf,mBACEvE,0DAAA,CAAAA,uDAAA,mBACEA,0DAAA,CAAC6D,WAAW,mBACV7D,0DAAA,CAACmE,aAAa,mBACZnE,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAC,GAAG,eACVhF,0DAAA,CAACqE,UAAU,MAAC,UAAoB,CAC5B,CAAC,cACPrE,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAC,gBAAgB,eACvBhF,0DAAA,CAACqE,UAAU,EACTY,SAAS,CAAET,WAAW,EAAI,eAAe,CAAG,UAAU,CAAG,EAAG,EAC7D,OAEW,CACR,CACO,CAAC,cAEhBxE,0DAAA,CAACoE,cAAc,mBACbpE,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAC,SAAS,eAChBhF,0DAAA,CAACqE,UAAU,EAACY,SAAS,CAAET,WAAW,EAAI,QAAQ,CAAG,UAAU,CAAG,EAAG,EAAC,QAEtD,CACR,CAAC,cACPxE,0DAAA,CAACqE,UAAU,MAAC,WAAqB,CACnB,CACL,CACb,CAAC,CAEP,CACF,CAAC;;;;;;;;;;;;;ACtJM,QAAS,CAAAT,QAAQA,CAACb,KAAK,CAAE,CAC9B,KAAM,GAACmC,QAAQ,GAAEC,WAAW,EAAIhG,+CAAQ,CAAC,IAAI,CAAC,CAE9CD,gDAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAkG,UAAU,CAAGA,CAAA,GAAM,CACvBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BH,WAAW,CAAC,IAAI,CAAC,CACjB;AACF,CAAC,CAED;AACA,GAAII,QAAQ,CAACC,UAAU,GAAK,UAAU,CAAE,CACtCJ,UAAU,CAAC,CAAC,CACd,CAAC,IAAM,CACLjC,MAAM,CAACsC,gBAAgB,CAAC,MAAM,CAAEL,UAAU,CAAE,KAAK,CAAC,CAClD;AACA,MAAO,IAAMjC,MAAM,CAACuC,mBAAmB,CAAC,MAAM,CAAEN,UAAU,CAAC,CAC7D,CACF,CAAC,CAAE,EAAE,CAAC,CACR;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,KAAM,CAAAvB,WAAW,CAAGzD,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,wBAAAC,WAAA,wQAgB7B,CACD,KAAM,CAAAiF,MAAM,CAAG1F,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,mBAAAC,WAAA,yJAQxB,CACD,KAAM,CAAAkF,IAAI,CAAG3F,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,iBAAAC,WAAA,0CAEtB,CACD,KAAM,CAAAmF,IAAI,CAAG5F,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,iBAAAC,WAAA,0CAEtB,CACD,KAAM,CAAAmD,OAAO,CAAG5D,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oBAAAC,WAAA,2TA4BzB,CACD,KAAM,CAAAoF,OAAO,CAAG7F,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oBAAAC,WAAA,0RA4BzB,CACD,KAAM,CAAAqF,OAAO,CAAG9F,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oBAAAC,WAAA,wPAoBzB,CACD,KAAM,CAAAsF,KAAK,CAAG/F,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,kBAAAC,WAAA,iJAMvB,CACD,KAAM,CAAAuF,KAAK,CAAGhG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,kBAAAC,WAAA,wEAGvB,CACD,KAAM,CAAAwF,QAAQ,CAAGjG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,qBAAAC,WAAA,qFAI1B,CAED,KAAM,CAAAyF,UAAU,CAAGlG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,uBAAAC,WAAA,+DAK5B,CACD,KAAM,CAAA0F,YAAY,CAAGnG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,yBAAAC,WAAA,2CAE9B,CACD,KAAM,CAAA2F,UAAU,CAAGpG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,uBAAAC,WAAA,oLAM5B,CACD,KAAM,CAAA4F,OAAO,CAAGrG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,oBAAAC,WAAA,6HAYzB,CACD,KAAM,CAAA6F,WAAW,CAAGtG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,wBAAAC,WAAA,yFAO7B,CACD,KAAM,CAAA8F,WAAW,CAAGvG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,wBAAAC,WAAA,sHAQ7B,CACD,KAAM,CAAA+F,2BAA2B,CAAGxG,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,wCAAAC,WAAA,0FAK7C,CACD,KAAM,CAAAgG,YAAY,CAAGzG,yDAAM,CAAC0G,IAAI,CAAAnG,UAAA,EAAAC,WAAA,yBAAAC,WAAA,kDAE/B,CACD,KAAM,CAAAkG,kBAAkB,CAAG3G,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,+BAAAC,WAAA,6DAGpC,CACD,KAAM,CAAAmG,oBAAoB,CAAG5G,yDAAM,CAAC8D,CAAC,CAAAvD,UAAA,EAAAC,WAAA,iCAAAC,WAAA,2CAEpC,CACD,KAAM,CAAAoG,yBAAyB,CAAG7G,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,sCAAAC,WAAA,2CAE3C,CACD,KAAM,CAAAqG,0BAA0B,CAAG9G,yDAAM,CAAC8D,CAAC,CAAAvD,UAAA,EAAAC,WAAA,uCAAAC,WAAA,mDAG1C,CACD,KAAM,CAAAsG,kBAAkB,CAAG/G,yDAAM,CAACM,GAAG,CAAAC,UAAA,EAAAC,WAAA,+BAAAC,WAAA,mCAMpC,CACD,KAAM,CAAAuG,OAAO,CAAGA,CAAC,CAAEC,IAAK,CAAC,GAAK,CAC5B,GAAI,CAAA9C,UAAU,CAAGzB,kFAAa,CAAC,oBAAoB,CAAC,CACpD;AACA,KAAM,CAAA4B,UAAU,CAAGtF,6CAAM,CAAC,IAAI,CAAC,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAkI,YAAY,CAAGA,CAAC,CAAEjG,QAAQ,CAAEkG,SAAU,CAAC,GAAK,CAChD;AACA,GAAI,CAAAC,CAAC,CAAGnG,QAAQ,CAChB;AACA;AACA,GAAI,CAAAoG,CAAC,CAAGD,CAAC,CAACzC,OAAO,CACf,kEAAkE,CAClE,EACF,CAAC,CACD;AACA;AACA,mBAAO/E,0DAAA,CAAC2G,WAAW,EAACrE,MAAM,CAAEmF,CAAE,CAAE,CAAC,CACjC;AACF,CAAC,CACD,KAAM,CAAAC,WAAW,CAAGL,IAAI,CAACM,cAAc,CAACN,IAAI,CAACO,KAAK,CAACC,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAK,CACzE,GAAID,OAAO,CAACE,UAAU,EAAI,OAAO,CAAE,CACjC,KAAM,CAAAzF,KAAK,CAAG/B,uEAAQ,CAACsH,OAAO,CAACG,OAAO,CAAC1F,KAAK,CAAC,CAC7C,mBACEvC,0DAAA,CAAAA,uDAAA,mBAEEA,0DAAA,CAAC2G,WAAW,mBACV3G,0DAAA,CAACO,sEAAW,EAACgC,KAAK,CAAEA,KAAM,CAAE,CACjB,CACb,CAAC,CAEP,CACA,GAAIuF,OAAO,CAACE,UAAU,EAAI,MAAM,CAAE,CAChC,mBACEhI,0DAAA,CAAAA,uDAAA,mBACEA,0DAAA,CAAC0G,WAAW,mBACV1G,0DAAA,UAAI8H,OAAO,CAACG,OAAO,CAACC,IAAI,CAACA,IAAQ,CACtB,CACb,CAAC,CAEP,CACA,GAAIJ,OAAO,CAACE,UAAU,EAAI,OAAO,CAAE,CACjC,GAAIzD,UAAU,CAAE,CACd,KAAM,CAAA4D,cAAc,CAAGL,OAAO,CAACG,OAAO,CAACG,WAAW,CAClD,mBACEpI,0DAAA,CAAC4G,2BAA2B,mBAC1B5G,0DAAA,CAACoB,iFAAa,EACZC,QAAQ,CAAEyG,OAAO,CAACG,OAAO,CAACjH,KAAK,CAACqH,GAAI,CACpC/G,WAAW,CAAE6G,cAAe,CAC7B,CAC0B,CAAC,CAElC,CAAC,IAAM,CACL,KAAM,CAAAA,cAAc,CAAGL,OAAO,CAACG,OAAO,CAACG,WAAW,CAClD/C,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BD,OAAO,CAACC,GAAG,CAACwC,OAAO,CAACG,OAAO,CAACK,SAAS,CAACD,GAAG,CAAC,CAC1C,mBACErI,0DAAA,CAAC4G,2BAA2B,mBAC1B5G,0DAAA,CAACoB,iFAAa,EACZC,QAAQ,CAAEyG,OAAO,CAACG,OAAO,CAACK,SAAS,CAACD,GAAI,CACxC/G,WAAW,CAAE6G,cAAe,CAC7B,CAC0B,CAAC,CAElC,CACF,CACF,CAAC,CAAC,CAEF;AACA;AACA;AACA;AAEA;AAEA,GAAI,CAAAI,eAAe,CAAGlB,IAAI,CAACM,cAAc,CAACN,IAAI,CAACmB,sBAAsB,CAACX,GAAG,CACvE,CAACC,OAAO,CAAEC,KAAK,GAAK,CAClB,GAAID,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAAC3C,IAAI,EAAI,SAAS,CAAE,CACvDyC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAA/C,KAAK,CAAG/B,uEAAQ,CAACsH,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAAC8B,IAAI,CAACqB,iBAAiB,CAAC,CAChF,mBACE1I,0DAAA,CAAAA,uDAAA,mBACEA,0DAAA,CAACiH,yBAAyB,mBACxBjH,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAG,IAAG8C,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAACoD,GAAI,EAAE,eACpD3I,0DAAA,CAACmH,kBAAkB,mBACjBnH,0DAAA,CAACO,sEAAW,EAACgC,KAAK,CAAEA,KAAM,CAAE,CACV,CAAC,cACrBvC,0DAAA,CAACkH,0BAA0B,MACxBY,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAAC8B,IAAI,CAACuB,aAAa,CAACV,IAC5B,CACxB,CACmB,CAG3B,CAAC,CAEP,CAAC,IAAM,IACLJ,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAAC3C,IAAI,EAAI,mBAAmB,CAC7D,CACA,KAAM,CAAAL,KAAK,CAAG/B,uEAAQ,CAACsH,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAAC8B,IAAI,CAACqB,iBAAiB,CAAC,CAChFrD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3B,mBACEtF,0DAAA,CAAAA,uDAAA,mBACEA,0DAAA,CAACiH,yBAAyB,mBACxBjH,0DAAA,CAAC2D,wCAAI,EAACqB,EAAE,CAAG,IAAG8C,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAACoD,GAAI,EAAE,eACtD3I,0DAAA,CAACmH,kBAAkB,mBACfnH,0DAAA,CAACO,sEAAW,EAACgC,KAAK,CAAEA,KAAM,CAAE,CACV,CAAC,cACrBvC,0DAAA,CAACkH,0BAA0B,MACxBY,OAAO,CAACW,gBAAgB,CAAClD,QAAQ,CAAC8B,IAAI,CAACuB,aAAa,CAACV,IAC5B,CACxB,CACmB,CAG3B,CAAC,CAEP,CACA;AACA;AACA;AACA;AACA;AACF,CACF,CAAC,CAED,KAAM,CAAAW,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,mBACE7I,0DAAA,CAACmG,KAAK,MACHoC,eAAe,CAAC,CAAC,CAAC,CAClBA,eAAe,CAAC,CAAC,CACb,CAAC,CAEZ,CAAC,CAED,mBACEvI,0DAAA,CAAAA,uDAAA,mBAEEA,0DAAA,CAACsE,yEAAO,KAAU,CAAC,cACnBtE,0DAAA,CAACwG,UAAU,mBACTxG,0DAAA,CAACyG,OAAO,mBACNzG,0DAAA,CAACoG,KAAK,mBACJpG,0DAAA,CAACqG,QAAQ,mBACPrG,0DAAA,CAACmG,KAAK,mBACJnG,0DAAA,CAACsG,UAAU,mBACTtG,0DAAA,UAAG,SAAU,CACH,CAAC,cACbA,0DAAA,CAACuG,YAAY,mBACXvG,0DAAA,UAAIqH,IAAI,CAACM,cAAc,CAACN,IAAI,CAACuB,aAAa,CAACV,IAAQ,CACvC,CACT,CACC,CAAC,cACXlI,0DAAA,CAACqG,QAAQ,mBACPrG,0DAAA,CAACmG,KAAK,mBACJnG,0DAAA,CAACsG,UAAU,mBACTtG,0DAAA,UAAG,UAAW,CACJ,CAAC,cACbA,0DAAA,CAACuG,YAAY,mBACXvG,0DAAA,UAAIqH,IAAI,CAACM,cAAc,CAACN,IAAI,CAACzC,QAAQ,CAACsD,IAAQ,CAClC,CACT,CACC,CAAC,cACXlI,0DAAA,CAACqG,QAAQ,mBACPrG,0DAAA,CAACmG,KAAK,mBACJnG,0DAAA,CAACsG,UAAU,mBACTtG,0DAAA,UAAG,UAAW,CACJ,CAAC,cACbA,0DAAA,CAACuG,YAAY,mBACXvG,0DAAA,UACGqH,IAAI,CAACM,cAAc,CAACN,IAAI,CAACyB,UAAU,CAACjB,GAAG,CACtC,CAACkB,QAAQ,CAAEhB,KAAK,GAAK,CACnB,mBACE/H,0DAAA,CAAC6G,YAAY,EAACmC,GAAG,CAAEjB,KAAM,EACtB,CAACA,KAAK,CAAG,IAAI,CAAG,EAAE,EAAIgB,QAAQ,CAACA,QAAQ,CAACE,IAC7B,CAAC,CAEnB,CACF,CACC,CACS,CACT,CACC,CAAC,cACXjJ,0DAAA,CAACqG,QAAQ,mBACPrG,0DAAA,CAACmG,KAAK,mBACJnG,0DAAA,CAACsG,UAAU,mBACTtG,0DAAA,UAAG,QAAS,CACF,CAAC,cACbA,0DAAA,CAACuG,YAAY,mBACXvG,0DAAA,UAAG,GAAC,CAACqH,IAAI,CAACM,cAAc,CAACN,IAAI,CAAC6B,MAAM,CAAChB,IAAQ,CACjC,CACT,CACC,CAAC,cACXlI,0DAAA,CAACqG,QAAQ,mBACPrG,0DAAA,CAACmG,KAAK,mBACJnG,0DAAA,CAACsG,UAAU,mBACTtG,0DAAA,UAAG,MAAO,CACA,CAAC,cACbA,0DAAA,CAACuG,YAAY,mBACXvG,0DAAA,UAAIqH,IAAI,CAACM,cAAc,CAACN,IAAI,CAAC8B,IAAI,CAACjB,IAAQ,CAC9B,CACT,CACC,CACL,CAAC,CACPR,WAAW,cACZ1H,0DAAA,CAAC+G,kBAAkB,mBACjB/G,0DAAA,CAACgH,oBAAoB,MAAC,kBAAsC,CAAC,cAC7DhH,0DAAA,CAAC6I,gBAAgB,KAAE,CACD,CACb,CACC,CACZ,CAAC,CAEP,CAAC,CAED,iEAAelD,4FAAkB,CAACyB,OAAO,CAAC,EAEnC,KAAM,CAAArE,KAAK,aA4GjB;;;;;;;AChmBD,YAAY,mBAAO,CAAC,IAAO;;AAE3B;AACA,wEAAwE,QAAQ,0CAA0C,WAAW,gCAAgC,0FAA0F,8BAA8B,2SAA2S,8BAA8B,uhBAAuhB,8BAA8B,4hBAA4hB,8BAA8B,8GAA8G,8BAA8B,6hBAA6hB,8BAA8B,uNAAuN,8BAA8B,wgBAAwgB;AACzpG;;AAEA,0BAA0B;;AAE1B;;AAEA","sources":["webpack://studio-prismic-starter/./src/components/hooks/useOnScreen.js","webpack://studio-prismic-starter/./src/components/tf/autoplay-video.js","webpack://studio-prismic-starter/./src/components/tf/media-query.js","webpack://studio-prismic-starter/./src/components/tf/nav-grid/nav.js","webpack://studio-prismic-starter/./src/components/tf/page-load.js","webpack://studio-prismic-starter/./src/templates/project.js","webpack://studio-prismic-starter/./assets/WhiteLogo.svg"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nexport function useOnScreen(ref) {\n  // console.log(\"useOnSCreen\");\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  const observerRef = useRef(null);\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(([entry]) =>\n      setIsOnScreen(entry.isIntersecting)\n    );\n  }, []);\n  useEffect(() => {\n    observerRef.current.observe(ref.current);\n    return () => {\n      observerRef.current.disconnect();\n    };\n  }, [ref]);\n  return isOnScreen;\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../hooks/useOnScreen\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nconst AutoplayVideoCon = styled.div`\n  position: relative;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\nconst AutoplayVideoImg = styled.div`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoVideo = styled.video`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoImgCon = styled.div``;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: black;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: white;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const AutoPlayVideo = ({ srcProps, posterProps, changedSlide }) => {\n  // https://stackoverflow.com/questions/58341787/intersectionobserver-with-react-hooks\n  // https://frontend-digest.com/responsive-and-progressive-video-loading-in-react-e8753315af51\n  const autoplayVideoRef = useRef(null);\n  const isOnScreen = useOnScreen(autoplayVideoRef);\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  // console.log(\"autoplay Video Ref\");\n  // console.log(autoplayVideoRef);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n  };\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      // console.log(srcProps);\n      // console.log(\"on screen\");\n      setVideoSrcState(srcProps);\n      autoplayVideoRef.current.load();\n      autoplayVideoRef.current.play();\n    } else if (isOnScreen === false) {\n      // console.log(srcProps);\n      // console.log(\"off screen\");\n      // caches.delete();\n      // var x = srcProps;\n      // var y = x.replace(\"https://theoford-1.cdn.prismic.io/theoford-1/\", \"\");\n      // console.log(y);\n      // caches.delete(y);\n      // console.log(caches.keys());\n      // caches.keys().then(function(names) {\n      //   for (let name of names) caches.delete(name);\n      // });\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n    }\n  }, [isOnScreen]);\n  const getPosterImage = getImage(posterProps)\n  return (\n    <>\n      <AutoplayVideoCon>\n        <AutoplayVideoImgCon\n          style={{\n            opacity: isVideoLoaded ? 0 : 1,\n            position: isVideoLoaded ? \"absolute\" : \"relative\",\n            // opacity: 1,\n            // position: \"relative\",\n          }}\n        >\n          <AutoplayVideoTextCon>\n            <p>Video Loading</p>\n          </AutoplayVideoTextCon>\n\n          <AutoplayVideoImg\n            srcSet={posterProps}\n            style={{\n              opacity: isVideoLoaded ? 0 : 1,\n              position: isVideoLoaded ? \"absolute\" : \"relative\",\n              // opacity: 1,\n              // position: \"relative\",\n            }}\n          >\n            <GatsbyImage image={getPosterImage} />\n          </AutoplayVideoImg>\n        </AutoplayVideoImgCon>\n\n        <AutoplayVideoVideo\n          playsInline\n          autoPlay\n          muted\n          loop\n          ref={autoplayVideoRef}\n          // onCanPlayThrough={onLoadedData}\n          onLoadedData={onLoadedData}\n          style={{\n            opacity: isVideoLoaded ? 1 : 0,\n            position: isVideoLoaded ? \"relative\" : \"absolute\",\n            // display: isOnScreen ? \"block\" : \"none\",\n            // opacity: 0,\n            // position: \"absolute\",\n          }}\n        >\n          <source type=\"video/mp4\" src={videoSrcState} />\n        </AutoplayVideoVideo>\n      </AutoplayVideoCon>\n    </>\n  );\n};\n\n// export function autoplayVideo(query) {\n//   const [matches, setMatches] = useState(false);\n\n//   useEffect(() => {\n//     const media = window.matchMedia(query);\n//     if (media.matches !== matches) {\n//       setMatches(media.matches);\n//     }\n//     const listener = () => {\n//       setMatches(media.matches);\n//     };\n//     media.addListener(listener);\n//     return () => media.removeListener(listener);\n//   }, [matches, query]);\n\n//   return matches;\n// }\n","import { useState, useEffect } from \"react\";\n\nexport function useMediaQuery(query) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { withPreview } from \"gatsby-source-prismic\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../media-query\";\nimport Icon from \"../../../../assets/WhiteLogo.svg\";\nimport { graphql, Link } from \"gatsby\";\nimport { PageLoad } from \"../page-load\";\n\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 1;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\n\nexport const NavGrid = () => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  var [currentPage, setCurrentPage] = useState(null);\n  const LogoConRef = useRef(null);\n\n  useEffect(() => {\n    var inputString = window.location.href;\n    var outputString = inputString.replace(/.*\\//, \"\");\n    if (outputString == \"project_index\") {\n      setCurrentPage(outputString);\n    } else if (outputString == \"office\") {\n      setCurrentPage(outputString);\n    } else {\n      setCurrentPage(null);\n    }\n  }, [setCurrentPage]);\n\n  if (isPageWide) {\n    return (\n      <>\n        <LogoGridCon style={{ opacity: PageLoad ? 1 : 0 }}>\n          <LogoConCon>\n            <LogoCon ref={LogoConRef}>\n              <Link to=\"/\">\n                <Icon />\n              </Link>\n            </LogoCon>\n          </LogoConCon>\n          <MenuCon>\n            <DesktopNavP>\n              <Link to=\"/\">Select, </Link>\n              <Link\n                to=\"/project_index\"\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index,{\" \"}\n              </Link>\n              <Link\n                to=\"/office\"\n                className={currentPage == \"office\" ? \"selected\" : \"\"}\n              >\n                Office\n              </Link>\n              {/* <br></br>Instagram, Twitter */}\n            </DesktopNavP>\n          </MenuCon>\n        </LogoGridCon>\n      </>\n    );\n  }\n  if (!isPageWide) {\n    return (\n      <>\n        <LogoGridCon>\n          <MobileLeftCol>\n            <Link to=\"/\">\n              <MobileNavP>Selected</MobileNavP>\n            </Link>\n            <Link to=\"/project_index\">\n              <MobileNavP\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index\n              </MobileNavP>\n            </Link>\n          </MobileLeftCol>\n\n          <MobileRightCol>\n            <Link to=\"/office\">\n              <MobileNavP className={currentPage == \"office\" ? \"selected\" : \"\"}>\n                Office\n              </MobileNavP>\n            </Link>\n            <MobileNavP>Instagram</MobileNavP>\n          </MobileRightCol>\n        </LogoGridCon>\n      </>\n    );\n  }\n};\n","import { useState, useEffect } from \"react\";\n\nexport function PageLoad(query) {\n  const [pageLoad, setPageLoad] = useState(null);\n\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { Helmet } from \"react-helmet\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\nimport { PageLoad } from \"../components/tf/page-load\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n\n  @media (max-width: 666px) {\n    /* display: none; */\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 10px;\n    width: calc(100% - 20px);\n    margin-left: 10px;\n  }\n`;\nconst Grid2B = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 20px);\n  z-index: 20000;\n`;\nconst Col1 = styled.div`\n  grid-column: span 1;\n`;\nconst Col2 = styled.div`\n  grid-column: span 1;\n`;\nconst LogoCon = styled.div`\n  top: 12.5px;\n  mix-blend-mode: exclusion;\n  /* grid-column: span 6; */\n  /* width: calc(50% - 6.25px); // (8col) */\n  // width: calc(37.5% - 6.25px); // (6col)\n  // width: calc(25% - 6.25px); // (4col)\n  /* width: calc(62.5% - 6.25px); // (10col) */\n  /* width: calc(75% - 6.25px); // (12col) */\n  width: calc(50% - 6.25px);\n  display: inline-block;\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n  /* background-color: blue; */\n\n  .shrink {\n    width: calc(37.5% - 6.25px);\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    width: calc(75% - 6.25px);\n    margin-top: 14vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\nconst NavCon1 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  /* margin-left: 10px; */\n  margin-left: 11px;\n  /* margin-left: calc(50vw + 7px); */\n  /* margin-left: calc(25vw + 6.25px); */\n  /* margin-top: -118px; */\n  margin-top: -3px;\n  vertical-align: top;\n  mix-blend-mode: exclusion;\n  p {\n    color: #878787;\n    /* font-size: 12px; */\n  }\n  span.selected {\n    color: white;\n  }\n  span.navItem {\n    /* margin-left: 5px; */\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst NavCon2 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  margin-left: 12.5px;\n  margin-top: -3px;\n  mix-blend-mode: exclusion;\n  z-index: 300000;\n  p {\n    color: #878787;\n    /* font-size: 12px; */\n  }\n  p.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst Grid8 = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100%);\n`;\nconst Table = styled.div`\n  margin-bottom: 20px;\n  border-bottom: 1px solid black;\n`;\nconst TableRow = styled.div`\n  border-top: 1px solid black;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nconst TableTitle = styled.div`\n  grid-column: span 2;\n  p {\n    font-weight: bold;\n  }\n`;\nconst TableContent = styled.div`\n  grid-column: span 6;\n`;\nconst PageConCon = styled.div`\n  width: calc(100% - 25px);\n  margin: 12.5px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 1 */ 1fr 1fr 1fr 1fr /* 2 */ 1fr 1fr 1fr 1fr /* 3 */ 1fr 1fr 1fr 1fr /* 4 */;\n  grid-gap: 12.5px;\n`;\nconst PageCon = styled.div`\n  /* width: calc(50% - 12.5px);\n  margin-left: 25%; */\n  grid-column: 5 / span 8;\n  margin-top: 20vh;\n  @media (max-width: 666px) {\n    /* display: none; */\n    /* width: calc(100% - 20px);\n    margin-left: 10px; */\n    grid-column: span 16;\n    margin-top: 10vh;\n  }\n`;\nconst BodyTextCon = styled.div`\n  margin-bottom: 20px;\n  p {\n    line-height: 125%;\n  }\n  @media (max-width: 666px) {\n  }\n`;\nconst SquareImage = styled.div`\n  width: calc(100%);\n  margin-bottom: 12.5px;\n\n  @media (max-width: 666px) {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n`;\nconst ProjectPageAutoPlayVideoCon = styled.div`\n  margin-bottom: 12.5px;\n  @media (max-width: 666px) {\n    margin-bottom: 10px;\n  }\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n`;\nconst RelatedProjectsCon = styled.div`\n  margin-top: 100px;\n  margin-bottom: 100px;\n`;\nconst RelatedProjectsTitle = styled.p`\n  margin-bottom: 10px;\n`;\nconst RelatedProjectsProjectCon = styled.div`\n  grid-column: span 4;\n`;\nconst RelatedProjectProjectTitle = styled.p`\n  color: grey;\n  margin-top: 10px;\n`;\nconst RelatedProjectsImg = styled.div`\n  width: 100%;\n  /* filter: grayscale(100%);\n  &:hover {\n    filter: none;\n  } */\n`;\nconst Project = ({ data }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  // PageLoad;\n  const LogoConRef = useRef(null);\n  // const LogoNav = scrollPosition => {\n  //   if (isPageWide) {\n  //     return (\n  //       <>\n  //         <LogoGridCon>\n  //           <Grid2B>\n  //             <Col1>\n  //               <LogoCon ref={LogoConRef}>\n  //                 <Icon />\n  //               </LogoCon>\n  //             </Col1>\n  //             <Col2>\n  //               <NavCon1>\n  //                 <p>\n  //                   <Link to=\"/\">\n  //                     <span className=\"selected\">Select,</span>{\" \"}\n  //                   </Link>\n  //                   <Link to=\"/project_index\">\n  //                     <span className=\"navItem\">Index,</span>{\" \"}\n  //                   </Link>\n  //                   <Link to=\"/about17\">\n  //                     <span className=\"navItem\">Office</span>\n  //                   </Link>\n  //                   {/* <br></br>Instagram, Twitter */}\n  //                 </p>\n  //               </NavCon1>\n  //             </Col2>\n  //           </Grid2B>\n  //         </LogoGridCon>\n  //       </>\n  //     );\n  //   }\n  //   if (!isPageWide) {\n  //     return (\n  //       <>\n  //         <LogoGridCon>\n  //           <NavCon1>\n  //             <Link to=\"/\">\n  //               <p className=\"selected\">Selected</p>\n  //             </Link>\n  //             <Link to=\"/project_index\">\n  //               <p>\n  //                 <span className=\"navItem\">Index</span>{\" \"}\n  //               </p>\n  //             </Link>\n  //           </NavCon1>\n  //           <NavCon2>\n  //             <Link to=\"/about17\">\n  //               <p>Office</p>\n  //             </Link>\n  //             <p>Instagram</p>\n  //           </NavCon2>\n  //         </LogoGridCon>\n  //         {/* <LogoCon ref={LogoConRef}>\n  //           <Icon />\n  //         </LogoCon> */}\n  //       </>\n  //     );\n  //   }\n  // };\n  const ImgComponent = ({ srcProps, videoLoad }) => {\n    // console.log(srcProps);\n    var x = srcProps;\n    // console.log(\"x\");\n    // console.log(x);\n    var y = x.replace(\n      /\\?auto=&w=(800|1400|1600|2400|3600)&h=(800|1400|1600|2400|3600)/g,\n      \"\"\n    );\n    // console.log(\"y\");\n    // console.log(y);\n    return <SquareImage srcSet={y} />;\n    //return <SquareImage src={srcProps} />;\n  };\n  const projectBody = data.prismicProject.data.body1.map((content, index) => {\n    if (content.slice_type == \"image\") {\n      const image = getImage(content.primary.image)\n      return (\n        <>\n          {/* <Img src={content.primary.image.fluid.src} /> */}\n          <SquareImage>\n            <GatsbyImage image={image} />\n          </SquareImage>\n        </>\n      );\n    }\n    if (content.slice_type == \"text\") {\n      return (\n        <>\n          <BodyTextCon>\n            <p>{content.primary.text.text}</p>\n          </BodyTextCon>\n        </>\n      );\n    }\n    if (content.slice_type == \"video\") {\n      if (isPageWide) {\n        const posterImgProps = content.primary.index_image;\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      } else {\n        const posterImgProps = content.primary.index_image;\n        console.log(\"SMALL VIDEO\");\n        console.log(content.primary.sml_video.url);\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.sml_video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      }\n    }\n  });\n\n  // var testArray = [\"a\", \"b\", \"c\", \"d\"];\n  // var testArrayMap = testArray.map((content, index) => {\n  //   return content;\n  // });\n\n  // console.log(testArrayMap[1]);\n\n  var RelatedProjects = data.prismicProject.data.related_projects_group.map(\n    (content, index) => {\n      if (content.related_projects.document.type == \"project\") {\n        console.log(\"square project\");\n        // const project = content.related_projects.document.data.map(\n        //   (content3, index) => {\n        //     return (\n        //       //test\n        //       { content3 }\n        //     );\n        //   }\n        // );\n        const image = getImage(content.related_projects.document.data.index_preview_img);\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n                <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n\n            {/* {content.related_projects} */}\n          </>\n        );\n      } else if (\n        content.related_projects.document.type == \"film_lead_project\"\n      ) {\n        const image = getImage(content.related_projects.document.data.index_preview_img);\n        console.log(\"film project\");\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n              <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n\n            {/* {content.related_projects} */}\n          </>\n        );\n      }\n      // return (\n      //   // test\n      //   // test\n      //   { content }\n      // );\n    }\n  );\n\n  const RelatedProjects2 = () => {\n    return (\n      <Grid8>\n        {RelatedProjects[0]}\n        {RelatedProjects[1]}\n      </Grid8>\n    );\n  };\n\n  return (\n    <>\n      {/* <LogoNav></LogoNav> */}\n      <NavGrid></NavGrid>\n      <PageConCon>\n        <PageCon>\n          <Table>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Project</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.project_title.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Location</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.location.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Category</p>\n                </TableTitle>\n                <TableContent>\n                  <p>\n                    {data.prismicProject.data.categories.map(\n                      (category, index) => {\n                        return (\n                          <CategoryName key={index}>\n                            {(index ? \", \" : \"\") + category.category.slug}\n                          </CategoryName>\n                        );\n                      }\n                    )}\n                  </p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Client</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicProject.data.client.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Team</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.team.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n          </Table>\n          {projectBody}\n          <RelatedProjectsCon>\n            <RelatedProjectsTitle>Related Projects</RelatedProjectsTitle>\n            <RelatedProjects2 />\n          </RelatedProjectsCon>\n        </PageCon>\n      </PageConCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(Project);\n\nexport const query = graphql`\n  query Artists($uid: String!) {\n    prismicProject(uid: { eq: $uid }) {\n      uid\n      id\n      data {\n        project_title {\n          html\n          text\n        }\n        client {\n          html\n          text\n        }\n        location {\n          html\n          text\n        }\n        project_title {\n          html\n          text\n        }\n        team {\n          html\n          text\n        }\n        year {\n          html\n          text\n        }\n        categories {\n          category {\n            slug\n            id\n          }\n        }\n        body1 {\n          ... on PrismicProjectDataBody1Image {\n            id\n            slice_type\n            primary {\n              image {\n                gatsbyImageData\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1Text {\n            id\n            slice_type\n            primary {\n              text {\n                html\n                text\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1Video {\n            id\n            slice_type\n            primary {\n              index_image {\n                gatsbyImageData\n              }\n              sml_video {\n                url\n              }\n              video {\n                url\n              }\n            }\n          }\n        }\n        related_projects_group {\n          related_projects {\n            uid\n            document {\n              ... on PrismicProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction WhiteLogo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:#fff;}\")),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m-.62,1h254.56v52.03h-98.04v254.13h-58.48V53.03H-.62V1Z\",\"key\":1}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m382.51,80.12c24.08,0,43.07,6.95,56.98,20.85,13.9,13.91,20.85,33.61,20.85,59.12v147.06h-54.18v-138.03c0-28.09-13.91-42.14-41.71-42.14-13.76,0-25.44,4.94-35.04,14.83-9.61,9.89-14.41,23.58-14.41,41.07v124.27h-54.18V1h54.18v113.95c16.91-23.22,39.41-34.83,67.51-34.83Z\",\"key\":2}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m687.81,200.09v12.9h-165.98c2,18.92,7.96,33.18,17.85,42.79,9.89,9.61,23.15,14.4,39.77,14.4,24.65,0,41.56-10.6,50.74-31.82h52.03c-5.74,22.65-17.78,40.63-36.12,53.96-18.35,13.33-40.71,20-67.08,20-32.97,0-59.63-10.6-79.98-31.82-20.36-21.21-30.53-49.3-30.53-84.28s10.03-63.06,30.1-84.28c20.35-21.21,46.87-31.82,79.55-31.82s60.2,11.04,79.98,33.11c19.78,22.08,29.67,51.03,29.67,86.86Zm-110.08-77.83c-31.82,0-50.31,17.63-55.47,52.89h111.37c-2.3-16.34-8.32-29.24-18.06-38.7-9.75-9.46-22.36-14.19-37.84-14.19Z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m890.34,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":4}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1233.04,1v52.03h-158.24v72.24h144.05v49.88h-144.05v132.01h-58.05V1h216.29Z\",\"key\":5}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1423.96,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":6}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1581.77,81.84c4.87,0,9.31.29,13.33.86v49.88h-13.76c-20.64,0-36.48,5.23-47.51,15.7-11.04,10.47-16.55,25.87-16.55,46.22v112.66h-54.18V85.28h52.46v39.56c12.32-28.66,34.4-43,66.22-43Z\",\"key\":7}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1755.49,114.09V1h54.18v306.16h-52.46v-30.96c-16.34,24.08-39.71,36.12-70.09,36.12s-54.9-10.6-72.67-31.82c-18.06-21.21-27.09-49.3-27.09-84.28s9.03-63.78,27.09-84.71c17.48-20.92,41.71-31.39,72.67-31.39s52.6,11.33,68.37,33.97Zm-112.66,83.85c0,22.94,5.01,40.28,15.05,52.03,10.03,11.76,23.93,17.63,41.71,17.63s31.82-6.16,42.14-18.49c10.03-12.32,15.05-29.95,15.05-52.89s-5.02-40.56-15.05-52.89c-10.04-12.32-24.08-18.49-42.14-18.49s-31.32,6.45-41.49,19.35c-10.18,12.9-15.27,30.82-15.27,53.75Z\",\"key\":8})]);\n}\n\nWhiteLogo.defaultProps = {\"id\":\"Layer_1\",\"viewBox\":\"0 0 1810 322.5\"};\n\nmodule.exports = WhiteLogo;\n\nWhiteLogo.default = WhiteLogo;\n"],"names":["useEffect","useState","useRef","useOnScreen","ref","isOnScreen","setIsOnScreen","observerRef","current","IntersectionObserver","entry","isIntersecting","observe","disconnect","React","createContext","useContext","useMemo","styled","createGlobalStyle","keyframes","GatsbyImage","getImage","AutoplayVideoCon","div","withConfig","displayName","componentId","AutoplayVideoImg","AutoplayVideoVideo","video","AutoplayVideoImgCon","breatheAnimation","AutoplayVideoTextCon","AutoPlayVideo","srcProps","posterProps","changedSlide","autoplayVideoRef","videoSrcState","setVideoSrcState","isVideoLoaded","setIsVideoLoaded","onLoadedData","load","play","getPosterImage","createElement","Fragment","style","opacity","position","srcSet","image","playsInline","autoPlay","muted","loop","type","src","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addListener","removeListener","withPreview","Icon","graphql","Link","PageLoad","LogoGridCon","LogoConCon","MenuCon","LogoCon","DesktopNavP","p","MobileLeftCol","MobileRightCol","MobileNavP","NavGrid","isPageWide","currentPage","setCurrentPage","LogoConRef","inputString","location","href","outputString","replace","to","className","pageLoad","setPageLoad","onPageLoad","console","log","document","readyState","addEventListener","removeEventListener","withPrismicPreview","Helmet","ImageOrientation","Grid2B","Col1","Col2","NavCon1","NavCon2","Grid8","Table","TableRow","TableTitle","TableContent","PageConCon","PageCon","BodyTextCon","SquareImage","ProjectPageAutoPlayVideoCon","CategoryName","span","RelatedProjectsCon","RelatedProjectsTitle","RelatedProjectsProjectCon","RelatedProjectProjectTitle","RelatedProjectsImg","Project","data","ImgComponent","videoLoad","x","y","projectBody","prismicProject","body1","map","content","index","slice_type","primary","text","posterImgProps","index_image","url","sml_video","RelatedProjects","related_projects_group","related_projects","index_preview_img","uid","project_title","RelatedProjects2","categories","category","key","slug","client","team"],"sourceRoot":""}