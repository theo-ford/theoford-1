{"version":3,"file":"component---src-pages-404-js-cf72ee772d95b9fbad7a.js","mappings":"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","sources":["webpack://studio-prismic-starter/./src/pages/404.js","webpack://studio-prismic-starter/../../src/withPrismicUnpublishedPreview.tsx","webpack://studio-prismic-starter/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { withPrismicUnpublishedPreview } from \"gatsby-plugin-prismic-previews\";\n\nimport Index from \"./index\";\n// import Template from \"../templates/template\";\n\nconst NotFoundPage = () => (\n  <>\n    <h1>Page not found!</h1>\n  </>\n);\n\n// If an unpublished `page` document is previewed, PageTemplate will be rendered.\nexport default withPrismicUnpublishedPreview(NotFoundPage, {\n  templateMap: {\n    homepage: Index,\n  },\n});\n","import * as React from \"react\";\n\nimport { getActiveRepositoryName } from \"./lib/getActiveRepositoryName\";\nimport { getComponentDisplayName } from \"./lib/getComponentDisplayName\";\n\nimport type { NormalizedDocument, PagePropsLike } from \"./types\";\n\nexport const withPrismicUnpublishedPreview = <TProps extends PagePropsLike>(\n\tWrappedComponent: React.ComponentType<TProps>,\n): React.ComponentType<TProps> => {\n\tconst WithPrismicUnpublishedPreview = (props: TProps): JSX.Element => {\n\t\tconst [unpublishedData, setUnpublishedData] = React.useState<{\n\t\t\tdata?: { [key: string]: NormalizedDocument };\n\t\t\tcomponent?: React.ComponentType<TProps>;\n\t\t}>({});\n\n\t\tconst ResolvedComponent = unpublishedData.component || WrappedComponent;\n\n\t\tconst data = React.useMemo(\n\t\t\t() => ({ ...props.data, ...unpublishedData.data }),\n\t\t\t[props.data, unpublishedData.data],\n\t\t);\n\n\t\tReact.useEffect(() => {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tconst repositoryName = getActiveRepositoryName();\n\n\t\t\tif (repositoryName) {\n\t\t\t\tPromise.all([\n\t\t\t\t\timport(\"./lib/bootstrapPrismicPreview\"),\n\t\t\t\t\timport(\"./lib/resolveUnpublishedPrismicPreview\"),\n\t\t\t\t]).then(([bootstrap, resolve]) =>\n\t\t\t\t\tbootstrap\n\t\t\t\t\t\t.default(repositoryName, abortController)\n\t\t\t\t\t\t.then(() =>\n\t\t\t\t\t\t\tresolve.default(\n\t\t\t\t\t\t\t\trepositoryName,\n\t\t\t\t\t\t\t\tabortController,\n\t\t\t\t\t\t\t\tsetUnpublishedData,\n\t\t\t\t\t\t\t\tprops.location?.pathname,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn () => abortController.abort();\n\t\t}, [props.location?.pathname]);\n\n\t\treturn <ResolvedComponent {...props} data={data} />;\n\t};\n\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst wrappedComponentName = getComponentDisplayName(WrappedComponent);\n\t\tWithPrismicUnpublishedPreview.displayName = `withPrismicUnpublishedPreview(${wrappedComponentName})`;\n\t}\n\n\treturn WithPrismicUnpublishedPreview;\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport { Helmet } from \"react-helmet\";\nimport \"../components/styles/index.css\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\nimport { Intro } from \"../components/tf/index/intro\";\nimport { ProjectInfo2 } from \"../components/tf/index/project-info2\";\n\nimport { TwoUpProjectCarouselSwiper } from \"../components/tf/index/two-up-carousels/two-up-carousel-swiper\";\nimport { OneUpProjectCarouselSwiper } from \"../components/tf/index/one-up-carousel/one-up-carousel-swiper\";\nimport { ProjectCarousel } from \"../components/tf/index/one-up-carousel\";\nimport { SingleAssetProject } from \"../components/tf/index/single-asset-project1\";\nimport { FilmLeadCarousel2 } from \"../components/tf/index/film-carousel\";\nimport { VideoWithControlsImg2 } from \"../components/tf/index/video\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: white;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n  body {\n    // https://stackoverflow.com/questions/47095596/body-overflow-x-hidden-breaks-position-sticky\n    background-color: white;\n    overflow-x: clip;\n    max-width: 100vw;\n    @media (min-width: 666px) {\n      /* position: fixed; */\n    }    \n  }\n`;\n\n/* - - - - - INTRO  - - - - -  */\nconst IntroConCon = styled.div``;\n\n/* NAV */\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  /* background-color: green; */\n  @media (max-width: 666px) {\n    /* width: calc(100% - 25px);\n    margin-left: 12.5px;\n    top: 10px; */\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  /* grid-column: span 2; */\n\n  mix-blend-mode: exclusion;\n  width: calc(50vw - 18.75px);\n  /* background-color: red; */\n  position: sticky;\n  top: 12.5px;\n  margin-left: 12.5px;\n  float: left;\n  z-index: 200000;\n`;\nconst MenuCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: 200px;\n  float: left;\n  /* margin-left: calc(50vw - 18.75px); */\n  /* background-color: orange; */\n  position: sticky;\n  top: 12.5px;\n  margin-top: -2px;\n  margin-left: 12.5px;\n  z-index: 200000;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\n\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\nconst LogoConMobile = styled.div`\n  display: none;\n  mix-blend-mode: exclusion;\n  @media (max-width: 666px) {\n    display: block;\n    width: calc(75% - 6.25px);\n    margin-top: 28vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\n\nconst NavSpacer = styled.div`\n  height: 32vh;\n  width: 100%;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* - - - - - PAGE  - - - - - */\nconst PageCon = styled.div`\n  margin-top: 48vh;\n  @media (max-width: 666px) {\n    margin-top: 38vh;\n  }\n`;\n\nconst ProjectCon = styled.div`\n  margin-bottom: 100px;\n  @media (max-width: 666px) {\n    margin-bottom: 200px;\n  }\n`;\n\n/* - - - - - INDEX AUTOPLAT VIDEO FORMATTING - - - - - */\n/* - - perhaps in the autoplay video component you put a conditional saying if page index apply this  - - */\nconst IndexAutoPlayVideoCon = styled.div`\n  position: relative;\n  width: calc(100% - 12.5px) !important;\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\n\n/* - - - - - - IMAGE - - - - - - - */\nconst SquareImg = styled.div`\n  width: calc(100% - 12.5px) !important;\n  @media (max-width: 666px) {\n    /* width: 100% !important; */\n  }\n`;\n\nconst Counter = styled.p`\n  margin-bottom: 5px;\n`;\n\nconst Index = ({ data }) => {\n  console.log(\"2023/12/04 16:59\");\n  const [pageLoad, setPageLoad] = useState(null);\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  const LogoConRef2 = useRef(null);\n\n  // page load useEffect\n  // https://stackoverflow.com/questions/57729504/is-there-a-way-to-tell-when-your-react-app-page-is-done-loading-the-page-asset\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n\n  const NavIndexGridIndex = () => {\n    let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n    var [currentPage, setCurrentPage] = useState(null);\n    const LogoConRef = useRef(null);\n\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      // console.log(position);\n      if (position > 25) {\n        // console.log(\"greater than 100\");\n        LogoConRef.current.classList.add(\"shrink\");\n      } else if (position < 25) {\n        // console.log(\"less than 100\");\n        LogoConRef.current.classList.remove(\"shrink\");\n      }\n    };\n    // scroll use effect\n    useEffect(() => {\n      window.addEventListener(\"scroll\", handleScroll, {\n        passive: true,\n      });\n\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n\n    if (isPageWide) {\n      return (\n        <>\n          <LogoConCon style={{ opacity: pageLoad ? 1 : 0 }}>\n            <LogoCon ref={LogoConRef}>\n              <Link to=\"/\">\n                <Icon />\n              </Link>\n            </LogoCon>\n          </LogoConCon>\n          <MenuCon style={{ opacity: pageLoad ? 1 : 0 }}>\n            <DesktopNavP>\n              <Link to=\"/\" className=\"selected\">\n                Select,{\" \"}\n              </Link>\n              <Link to=\"/project_index\">Index, </Link>\n              <Link to=\"/office\">Office</Link>\n            </DesktopNavP>\n          </MenuCon>\n        </>\n      );\n    }\n    if (!isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <MobileLeftCol>\n              <Link to=\"/\">\n                <MobileNavP className=\"selected\">Selected</MobileNavP>\n              </Link>\n              <Link to=\"/project_index\">\n                <MobileNavP>Index</MobileNavP>\n              </Link>\n            </MobileLeftCol>\n\n            <MobileRightCol>\n              <Link to=\"/office\">\n                <MobileNavP>Office</MobileNavP>\n              </Link>\n              <MobileNavP>Instagram</MobileNavP>\n            </MobileRightCol>\n          </LogoGridCon>\n          <LogoConMobile ref={LogoConRef}>\n            <Icon />\n          </LogoConMobile>\n        </>\n      );\n    }\n  };\n\n  const overview = data.prismicFeaturedProjects.data.project_relationship_group.map(\n    (content, index) => {\n      if (\n        content.project_relationship_field.document.type == \"film_lead_project\"\n      ) {\n        const filmLeadProject = content.project_relationship_field.document.data.body.map(\n          (content_three, index) => {\n            if (content_three.slice_type == \"video_with_play_button\") {\n              const posterImage = content_three.primary.video_thumbnail;\n              if (isPageWide) {\n                return (\n                  <VideoWithControlsImg2\n                    srcProps={content_three.primary.video_with_play_button.url}\n                    posterProps={posterImage}\n                    img={posterImage}\n                  ></VideoWithControlsImg2>\n                );\n              } else {\n                return (\n                  <VideoWithControlsImg2\n                    srcProps={\n                      content_three.primary.small_video_with_play_button.url\n                    }\n                    posterProps={posterImage}\n                    img={posterImage}\n                  ></VideoWithControlsImg2>\n                );\n              }\n            }\n          }\n        );\n        return (\n          <>\n            <ProjectCon>\n              <FilmLeadCarousel2>\n                {React.Children.map(filmLeadProject, child =>\n                  React.cloneElement(child, {})\n                )}\n              </FilmLeadCarousel2>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          </>\n        );\n      }\n      if (content.project_relationship_field.document.type == \"project\") {\n        const projectLength =\n          content.project_relationship_field.document.data.body.length;\n        const project = content.project_relationship_field.document.data.body.map(\n          (content_four, index) => {\n            if (content_four.slice_type == \"image\") {\n              const image = getImage(content_four.primary.image);\n              return (\n                <SwiperSlide>\n                  <SquareImg>\n                    <GatsbyImage image={image} />\n                  </SquareImg>\n                </SwiperSlide>\n              );\n            }\n            if (content_four.slice_type == \"video\") {\n              if (isPageWide) {\n                const posterImg = content_four.primary.index_image;\n                return (\n                  <SwiperSlide>\n                    <IndexAutoPlayVideoCon>\n                      <AutoPlayVideo\n                        srcProps={content_four.primary.video.url}\n                        posterProps={posterImg}\n                      />\n                    </IndexAutoPlayVideoCon>\n                  </SwiperSlide>\n                );\n              } else {\n                const posterImg = content_four.primary.index_image;\n                return (\n                  <SwiperSlide>\n                    <IndexAutoPlayVideoCon>\n                      <AutoPlayVideo\n                        srcProps={content_four.primary.sml_video.url}\n                        posterProps={posterImg}\n                      />\n                    </IndexAutoPlayVideoCon>\n                  </SwiperSlide>\n                );\n              }\n            }\n          }\n        );\n        if (isPageWide && projectLength > 1) {\n          return (\n            <ProjectCon>\n              <TwoUpProjectCarouselSwiper\n                projectLength={\n                  content.project_relationship_field.document.data.body.length\n                }\n              >\n                {React.Children.map(project, child =>\n                  React.cloneElement(child, {\n                    changedSlide: false,\n                  })\n                )}\n              </TwoUpProjectCarouselSwiper>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          );\n        } else if (isPageWide && projectLength <= 1) {\n          return (\n            <>\n              <ProjectCon>\n                <SingleAssetProject>{project}</SingleAssetProject>\n                <ProjectInfo2\n                  data2={content.project_relationship_field.document.data}\n                  uid={content.project_relationship_field.document.uid}\n                ></ProjectInfo2>\n              </ProjectCon>\n            </>\n          );\n        } else if (!isPageWide && projectLength <= 1) {\n          return (\n            <>\n              <ProjectCon>\n                <SingleAssetProject>{project}</SingleAssetProject>\n                <ProjectInfo2\n                  data2={content.project_relationship_field.document.data}\n                  uid={content.project_relationship_field.document.uid}\n                ></ProjectInfo2>\n              </ProjectCon>\n            </>\n          );\n        } else if (isPageWide == false) {\n          return (\n            <ProjectCon>\n              <OneUpProjectCarouselSwiper projectLength={projectLength}>\n                {React.Children.map(project, child =>\n                  React.cloneElement(child, {\n                    changedSlide: false,\n                  })\n                )}\n              </OneUpProjectCarouselSwiper>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          );\n        }\n      }\n    }\n  );\n\n  return (\n    <>\n      <GlobalStyle />\n      <Helmet>\n        <title>Theo Ford</title>\n      </Helmet>\n      <IntroConCon style={{ opacity: pageLoad ? 1 : 0 }}>\n        <Intro></Intro>\n      </IntroConCon>\n\n      <NavSpacer></NavSpacer>\n      <NavIndexGridIndex></NavIndexGridIndex>\n\n      <PageCon style={{ opacity: pageLoad ? 1 : 0 }}>{overview}</PageCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(Index);\n\nexport const query = graphql`\n  query IndexQuery45 {\n    prismicFeaturedProjects {\n      data {\n        project_relationship_group {\n          project_relationship_field {\n            document {\n              ... on PrismicProject {\n                id\n                type\n                uid\n                data {\n                  project_title {\n                    html\n                    text\n                  }\n                  location {\n                    html\n                    text\n                  }\n                  year {\n                    html\n                    text\n                  }\n                  homepage_intro {\n                    text\n                  }\n                  client {\n                    text\n                  }\n                  show_client_on_index\n                  body {\n                    ... on PrismicProjectDataBodyImage {\n                      id\n                      slice_type\n                      primary {\n                        image {\n                          gatsbyImageData(\n                            placeholder: NONE\n                            backgroundColor: \"#D6D6D6\"\n                          )\n                        }\n                      }\n                    }\n                    ... on PrismicProjectDataBodyVideo {\n                      id\n                      slice_type\n                      primary {\n                        video {\n                          url\n                        }\n                        sml_video {\n                          url\n                        }\n                        index_image {\n                          gatsbyImageData(\n                            placeholder: NONE\n                            backgroundColor: \"#D6D6D6\"\n                          )\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                id\n                type\n                uid\n                data {\n                  project_title {\n                    html\n                    text\n                  }\n                  location {\n                    html\n                    text\n                  }\n                  year {\n                    html\n                    text\n                  }\n                  client {\n                    html\n                    text\n                  }\n                  show_client_on_index\n                  homepage_intro {\n                    text\n                  }\n                  body {\n                    ... on PrismicFilmLeadProjectDataBodyVideoWithPlayButton {\n                      id\n                      slice_type\n                      primary {\n                        video_with_play_button {\n                          url\n                        }\n                        small_video_with_play_button {\n                          url\n                        }\n                        video_thumbnail {\n                          gatsbyImageData(\n                            placeholder: NONE\n                            backgroundColor: \"#D6D6D6\"\n                          )\n                          dimensions {\n                            height\n                            width\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["WrappedComponent","NotFoundPage","React","Index","props","unpublishedData","setUnpublishedData","ResolvedComponent","component","data","abortController","AbortController","repositoryName","getActiveRepositoryName","Promise","all","then","_ref","bootstrap","resolve","default","_a2","location","pathname","abort","_a","jsx","GlobalStyle","createGlobalStyle","IntroConCon","styled","div","withConfig","displayName","componentId","LogoGridCon","LogoConCon","MenuCon","LogoCon","DesktopNavP","p","MobileLeftCol","MobileRightCol","MobileNavP","LogoConMobile","NavSpacer","PageCon","ProjectCon","IndexAutoPlayVideoCon","SquareImg","withPrismicPreview","console","log","pageLoad","setPageLoad","useState","isPageWide","useMediaQuery","useRef","useEffect","onPageLoad","document","readyState","window","addEventListener","removeEventListener","NavIndexGridIndex","currentPage","setCurrentPage","LogoConRef","handleScroll","position","pageYOffset","current","classList","add","remove","passive","style","opacity","ref","Link","to","Icon","className","overview","prismicFeaturedProjects","project_relationship_group","map","content","index","project_relationship_field","type","filmLeadProject","body","content_three","slice_type","posterImage","primary","video_thumbnail","VideoWithControlsImg2","srcProps","video_with_play_button","url","posterProps","img","small_video_with_play_button","FilmLeadCarousel2","child","ProjectInfo2","data2","uid","projectLength","length","project","content_four","image","getImage","SwiperSlide","GatsbyImage","posterImg","index_image","AutoPlayVideo","video","sml_video","TwoUpProjectCarouselSwiper","changedSlide","SingleAssetProject","OneUpProjectCarouselSwiper","Helmet","Intro"],"sourceRoot":""}