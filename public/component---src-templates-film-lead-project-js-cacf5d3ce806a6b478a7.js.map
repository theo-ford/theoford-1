{"version":3,"file":"component---src-templates-film-lead-project-js-cacf5d3ce806a6b478a7.js","mappings":"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","sources":["webpack://studio-prismic-starter/./src/components/tf/autoplay-video.js","webpack://studio-prismic-starter/./src/components/tf/project/video-project-page.js","webpack://studio-prismic-starter/./src/components/utils/image-orientation2.js","webpack://studio-prismic-starter/./src/templates/film_lead_project.js"],"sourcesContent":["import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../hooks/useOnScreen\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst AutoplayVideoCon = styled.div`\n  position: relative;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\nconst AutoplayVideoImg = styled.div`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoVideo = styled.video`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoImgCon = styled.div``;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: black;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: white;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const AutoPlayVideo = ({ srcProps, posterProps, changedSlide }) => {\n  // https://stackoverflow.com/questions/58341787/intersectionobserver-with-react-hooks\n  // https://frontend-digest.com/responsive-and-progressive-video-loading-in-react-e8753315af51\n  const autoplayVideoRef = useRef(null);\n  const isOnScreen = useOnScreen(autoplayVideoRef);\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n  };\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      setVideoSrcState(srcProps);\n      autoplayVideoRef.current.load();\n      autoplayVideoRef.current.play();\n    } else if (isOnScreen === false) {\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n    }\n  }, [isOnScreen]);\n  const getPosterImage = getImage(posterProps);\n  return (\n    <>\n      <AutoplayVideoCon>\n        <AutoplayVideoImgCon\n          style={{\n            opacity: isVideoLoaded ? 0 : 1,\n            position: isVideoLoaded ? \"absolute\" : \"relative\",\n          }}\n        >\n          <AutoplayVideoTextCon>\n            <p>Video Loading</p>\n          </AutoplayVideoTextCon>\n\n          <AutoplayVideoImg\n            srcSet={posterProps}\n            style={{\n              opacity: isVideoLoaded ? 0 : 1,\n              position: isVideoLoaded ? \"absolute\" : \"relative\",\n            }}\n          >\n            <GatsbyImage image={getPosterImage} />\n          </AutoplayVideoImg>\n        </AutoplayVideoImgCon>\n\n        <AutoplayVideoVideo\n          playsInline\n          autoPlay\n          muted\n          loop\n          ref={autoplayVideoRef}\n          // onCanPlayThrough={onLoadedData}\n          onLoadedData={onLoadedData}\n          style={{\n            opacity: isVideoLoaded ? 1 : 0,\n            position: isVideoLoaded ? \"relative\" : \"absolute\",\n          }}\n        >\n          <source type=\"video/mp4\" src={videoSrcState} />\n        </AutoplayVideoVideo>\n      </AutoplayVideoCon>\n    </>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../../hooks/useOnScreen\";\nimport { ImageOrientation } from \"../../utils/image-orientation\";\nimport { ImageOrientation2 } from \"../../utils/image-orientation2\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\nimport { playWhite } from \"../../../img/Play_White.svg\";\n\nconst VideoCon = styled.div`\n  /* margin-bottom: 200px; */\n  /* margin-bottom: 12.5px; */\n  /* margin-top: 25px;\n  margin-bottom: 25px; */\n  margin-top: 100px;\n  margin-bottom: 100px;\n  position: relative;\n  float: left;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 4 */ 1fr 1fr 1fr 1fr /* 8 */ 1fr 1fr 1fr 1fr /* 12 */ 1fr 1fr 1fr 1fr /* 16 */ 1fr 1fr 1fr 1fr /* 20 */ 1fr 1fr 1fr 1fr /* 24 */;\n  grid-gap: 12.5px;\n  width: 100%;\n  /* background-color: red; */\n  /* background-color: red; */\n  @media (max-width: 666px) {\n    grid-column-gap: 10px;\n    grid-template-columns: 1fr 1fr 1fr 1fr /* 4 */ 1fr 1fr 1fr 1fr /* 8 */ 1fr 1fr 1fr 1fr /* 12 */ 1fr 1fr 1fr 1fr /* 16 */ 1fr 1fr 1fr 1fr /* 20 */ 1fr 1fr 1fr 1fr /* 24 */ 1fr 1fr 1fr 1fr /* 28 */ 1fr 1fr 1fr 1fr /* 32 */ 1fr 1fr 1fr 1fr /* 36 */;\n    grid-column-gap: 10px;\n    grid-row-gap: 0;\n    margin-top: 50px;\n    margin-bottom: 50px;\n    /* width: calc(100% - 20px); */\n  }\n`;\nconst VideoConInner = styled.div`\n  /* &.portrait {\n    grid-column: 4 / span 6;\n  } */\n  &.sml-portrait {\n    grid-column: 7 / span 12;\n  }\n  &.lrg-portrait {\n    grid-column: 8 / span 10;\n  }\n  &.square {\n    grid-column: 6 / span 14;\n  }\n  &.landscape {\n    grid-column: 1 / span 24;\n  }\n  @media (max-width: 666px) {\n    &.sml-portrait {\n      /* grid-column: 5 / span 16; */\n      /* grid-column: 4 / span 30; */\n      /* grid-column: 6 / span 26; */\n      grid-column: span 36;\n    }\n    &.lrg-portrait {\n      /* grid-column: 5 / span 16; */\n      /* grid-column: 7 / span 24; */\n      grid-column: span 36;\n    }\n    &.square {\n      /* grid-column: 4 / span 18; */\n      /* grid-column: 3 / span 32; */\n      /* grid-column: span 36; */\n      /* grid-column: 5 / span 28; */\n      grid-column: span 36;\n    }\n    &.landscape {\n      /* grid-column: span 24; */\n      grid-column: span 36;\n    }\n  }\n`;\nconst ControlsCon = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 12.5px;\n  width: 100%;\n  margin-top: 5px;\n`;\nconst LengthCon = styled.div`\n  grid-column: span 1;\n  p {\n    font-size: 12px;\n    color: #545454;\n    color: ${props => (props.pageColour == \"black\" ? \"#545454\" : \"#878787\")};\n  }\n`;\nconst PlayPauseButtonCon = styled.div`\n  height: 12px;\n`;\nconst PlayCon = styled.div`\n  grid-column: span 1;\n  /* background-color: red; */\n`;\nconst PauseButtonImgCon = styled.div`\n  width: 8px;\n  display: inline-block !important;\n  /* margin-right: 5px; */\n  margin-top: 2px;\n  img {\n    fill: #ff0000;\n  }\n`;\nconst PlayButtonText = styled.p`\n  font-size: 12px;\n  color: #545454;\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n  position: absolute;\n  margin-left: 5px;\n  color: ${props => (props.pageColour == \"black\" ? \"#545454\" : \"#878787\")};\n`;\n\nconst PlayButtonImgCon = styled.div`\n  width: 8px;\n  /* margin-right: 5px; */\n  margin-top: 2px;\n  display: inline-block !important;\n  /* background-color: blue; */\n`;\n// const Poster = styled.div`\n//   width: 100%;\n//   /* height: 100%; */\n// `;\nconst VideoWithContolsSC = styled.video`\n  width: 100%;\n`;\nconst VideoControlsImgCon = styled.div``;\nconst VideoControlsImg = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: white;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: black;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  @media (min-width: 666px) {\n    display: none;\n  }\n`;\n\nexport const VideoProjectPage = ({\n  srcProps,\n  posterProps,\n  img,\n  pageColour,\n}) => {\n  function format(time) {\n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~((time % 3600) / 60);\n    var secs = ~~time % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n    if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n    ret += \"\" + String(mins).padStart(2, \"0\") + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n  }\n\n  const handleLoadedMetadata = () => {\n    console.log(VideoRef.current.duration);\n    console.log(format(VideoRef.current.duration));\n    setVidDuration(format(VideoRef.current.duration));\n  };\n\n  const PlayButtonImg = pageColour => {\n    if (pageColour.pageColour === \"white\") {\n      return <StaticImage src={\"../../../img/Play_87.svg\"} />;\n    } else if (pageColour.pageColour === \"black\") {\n      return <StaticImage src={\"../../../img/Play_54.svg\"} />;\n    }\n  };\n\n  const PauseButtonImg = pageColour => {\n    if (pageColour.pageColour === \"white\") {\n      return <StaticImage src={\"../../../img/Pause_87.svg\"} />;\n    } else if (pageColour.pageColour === \"black\") {\n      return <StaticImage src={\"../../../img/Pause_54.svg\"} />;\n    }\n  };\n\n  const VideoRef = useRef(null);\n  const isOnScreen = useOnScreen(VideoRef);\n  const imgRef = useRef(null);\n  const [isPlaying, setPlayingStatus] = useState(false);\n  const [hasStartedPlaying, setHasStartedPlaying] = useState(false);\n  const [vidDuration, setVidDuration] = useState(\"\");\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      setVideoSrcState(srcProps);\n      VideoRef.current.load();\n      // if (!isVideoLoaded) {\n      //   VideoRef.current.load();\n      // }\n    } else if (isOnScreen === false) {\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n      setPlayingStatus(false);\n      setHasStartedPlaying(false);\n    }\n  }, [isOnScreen, videoSrcState]);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n    if (isPlaying) {\n      setHasStartedPlaying(true);\n    }\n  };\n\n  const playVideo = () => {\n    VideoRef.current.play();\n    setPlayingStatus(true);\n    if (isVideoLoaded) {\n      setHasStartedPlaying(true);\n    }\n  };\n  const pauseVideo = () => {\n    VideoRef.current.pause();\n    setPlayingStatus(false);\n  };\n  const getImageVal = getImage(posterProps);\n\n  const playPause = () => {\n    if (isPlaying) {\n      VideoRef.current.pause();\n      setPlayingStatus(false);\n    } else {\n      VideoRef.current.play();\n      setPlayingStatus(true);\n    }\n  };\n  return (\n    <>\n      <VideoCon>\n        <VideoConInner className={ImageOrientation2(img)} onClick={playPause}>\n          <VideoControlsImgCon\n            style={{\n              opacity: hasStartedPlaying ? 0 : 1,\n              position: hasStartedPlaying ? \"absolute\" : \"relative\",\n            }}\n          >\n            {!isVideoLoaded && isPlaying ? (\n              <AutoplayVideoTextCon>\n                <p>Video Loading</p>\n              </AutoplayVideoTextCon>\n            ) : (\n              \" \"\n            )}\n            <VideoControlsImgCon\n              style={{\n                opacity: hasStartedPlaying ? 0 : 1,\n                position: hasStartedPlaying ? \"absolute\" : \"relative\",\n              }}\n            >\n              {!isVideoLoaded && isPlaying ? (\n                <AutoplayVideoTextCon>\n                  <p>Video Loading</p>\n                </AutoplayVideoTextCon>\n              ) : (\n                \" \"\n              )}\n              <GatsbyImage image={getImageVal} />\n              {/* <Poster\n            ref={imgRef}\n            style={{\n              opacity: hasStartedPlaying ? 0 : 1,\n              position: hasStartedPlaying ? \"absolute\" : \"relative\",\n              zIndex: hasStartedPlaying ? -100 : 0,\n              display: hasStartedPlaying ? \"none\" : \"block\",\n            }}\n            onClick={playVideo}\n          > \n            \n          </Poster> */}\n            </VideoControlsImgCon>\n          </VideoControlsImgCon>\n          <VideoWithContolsSC\n            playsInline\n            // muted\n            loop\n            preload=\"auto\"\n            ref={VideoRef}\n            // onLoadedData={onLoadedData}\n            onCanPlayThrough={onLoadedData}\n            style={{\n              zIndex: 0,\n              opacity: hasStartedPlaying ? 1 : 0,\n              position: hasStartedPlaying ? \"relative\" : \"absolute\",\n              // https://stackoverflow.com/questions/3680429/click-through-div-to-underlying-elements\n              // click through video to controls\n              pointerEvents: \"none\",\n            }}\n            onLoadedMetadata={handleLoadedMetadata}\n          >\n            <source type=\"video/mp4\" src={videoSrcState} />\n          </VideoWithContolsSC>\n          <ControlsCon>\n            <LengthCon pageColour={pageColour}>\n              <p>{vidDuration}</p>\n              {/* <p>TEST</p> */}\n            </LengthCon>\n            <PlayCon>\n              {isPlaying ? (\n                <PlayPauseButtonCon onClick={pauseVideo}>\n                  <PauseButtonImgCon>\n                    <PauseButtonImg pageColour={pageColour} />\n                  </PauseButtonImgCon>\n\n                  <PlayButtonText pageColour={pageColour}>Pause</PlayButtonText>\n                </PlayPauseButtonCon>\n              ) : (\n                <PlayPauseButtonCon onClick={playVideo}>\n                  <PlayButtonImgCon>\n                    <PlayButtonImg pageColour={pageColour} />\n                  </PlayButtonImgCon>\n                  <PlayButtonText pageColour={pageColour}>Play</PlayButtonText>\n                </PlayPauseButtonCon>\n              )}\n            </PlayCon>\n          </ControlsCon>\n        </VideoConInner>\n      </VideoCon>\n    </>\n  );\n};\n","export const ImageOrientation2 = image => {\n  var x = image.dimensions.height / image.dimensions.width;\n  const isImageSmlPortrait = x > 1.2;\n  const isImageLrgPortrait = x > 1.7;\n  const isImageLandscape = image.dimensions.width > image.dimensions.height;\n  const isImageSquare = image.dimensions.width === image.dimensions.height;\n\n  if (isImageLrgPortrait === true) {\n    return \"lrg-portrait\";\n  } else if (isImageSmlPortrait === true) {\n    return \"sml-portrait\";\n  } else if (isImageSquare === true) {\n    // console.log(\"square\");\n    return \"square\";\n  } else {\n    // console.log(\"portrait\");\n    return \"landscape\";\n  }\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { Helmet } from \"react-helmet\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport ReactPlayer from \"react-player\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { VideoProjectPage } from \"../components/tf/project/video-project-page\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: black;\n  }\n  body {\n    background-color: black;\n    /* overflow-y: clip; */\n  }\n  p {\n    color: white;\n  }\n`;\n\nconst PageConCon = styled.div`\n  width: calc(100% - 25px);\n  margin: 12.5px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 1 */ 1fr 1fr 1fr 1fr /* 2 */ 1fr 1fr 1fr 1fr /* 3 */ 1fr 1fr 1fr 1fr /* 4 */;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    /* width: calc(100% - 25px);\n    margin-left: 12.5px;\n    top: 10px; */\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n    grid-gap: 10px;\n  }\n`;\nconst PageCon = styled.div`\n  grid-column: 5 / span 8;\n  margin-top: 20vh;\n  @media (max-width: 666px) {\n    grid-column: span 16;\n    margin-top: 10vh;\n  }\n`;\nconst Grid8 = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    grid-gap: 10px;\n  }\n`;\nconst Table = styled.div`\n  /* margin-bottom: 20px; */\n  /* margin-bottom: 12.5px; */\n  position: relative;\n  float: left;\n  width: 100%;\n  border-bottom: 1px solid white;\n  @media (max-width: 666px) {\n    /* margin-bottom: 10px; */\n  }\n`;\nconst TableRow = styled.div`\n  border-top: 1px solid white;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nconst TableTitle = styled.div`\n  grid-column: span 2;\n  p {\n    font-weight: bold;\n    font-family: \"HelveticaNowText\";\n    line-height: 110%;\n    letter-spacing: -0.5px;\n  }\n`;\nconst TableContent = styled.div`\n  grid-column: span 6;\n  p {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n`;\nconst BodyTextCon = styled.div`\n  /* margin-bottom: 12.5px; */\n  /* margin-top: 7.5px;\n  margin-bottom: 7.5px; */\n  position: relative;\n  float: left;\n\n  p {\n    line-height: 125%;\n    /* margin-top: 10px; */\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n  @media (max-width: 666px) {\n    /* margin-top: 7.5px;\n    margin-bottom: 7.5px; */\n    /* margin-top: 5px;\n    margin-bottom: 5px; */\n  }\n`;\nconst SquareImage = styled.div`\n  width: calc(100%);\n  margin-top: 6.25px;\n  margin-bottom: 6.25px;\n  position: relative;\n  float: left;\n\n  @media (max-width: 666px) {\n    width: 100%;\n    margin-top: 5;\n    margin-bottom: 5;\n  }\n`;\nconst ProjectPageAutoPlayVideoCon = styled.div`\n  margin-top: 6.25px;\n  margin-bottom: 6.25px;\n  position: relative;\n  float: left;\n  @media (max-width: 666px) {\n    margin-top: 5;\n    margin-bottom: 5;\n  }\n`;\nconst Footer = styled.div`\n  width: 100%;\n  background-color: white;\n  height: 400px;\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n`;\nconst RelatedProjectsCon = styled.div`\n  margin-top: 100px;\n  margin-bottom: 100px;\n  position: relative;\n  float: left;\n`;\nconst RelatedProjectsTitle = styled.p`\n  margin-bottom: 10px;\n`;\nconst RelatedProjectsProjectCon = styled.div`\n  grid-column: span 4;\n`;\nconst RelatedProjectProjectTitle = styled.p`\n  color: grey;\n  margin-top: 10px;\n`;\nconst RelatedProjectsImg = styled.div`\n  width: 100%;\n  /* filter: grayscale(100%);\n  &:hover {\n    filter: none;\n  } */\n`;\nconst FilmLeadProject = ({ data }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n\n  const work = data.prismicFilmLeadProject.data.body1.map((content, index) => {\n    if (content.slice_type == \"video_with_play_button\") {\n      if (isPageWide) {\n        return (\n          <>\n            <VideoProjectPage\n              pageColour={\"black\"}\n              srcProps={content.primary.video_with_play_button.url}\n              posterProps={content.primary.video_thumbnail}\n              img={content.primary.video_thumbnail}\n            ></VideoProjectPage>\n          </>\n        );\n      } else {\n        return (\n          <>\n            <VideoProjectPage\n              pageColour={\"black\"}\n              srcProps={content.primary.small_video_with_play_button.url}\n              posterProps={content.primary.video_thumbnail}\n              img={content.primary.video_thumbnail}\n            ></VideoProjectPage>\n          </>\n        );\n      }\n    } else if (content.slice_type == \"text\") {\n      return (\n        <BodyTextCon>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: content.primary.text.html,\n            }}\n          />\n        </BodyTextCon>\n      );\n    } else if (content.slice_type == \"image\") {\n      const image = getImage(content.primary.image);\n      return (\n        <>\n          <SquareImage>\n            <GatsbyImage image={image} />\n          </SquareImage>\n        </>\n      );\n    } else if (content.slice_type == \"video\") {\n      if (isPageWide) {\n        const posterImgProps = content.primary.index_image;\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      } else {\n        const posterImgProps = content.primary.index_image;\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.sml_video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      }\n    }\n  });\n  var RelatedProjects = data.prismicFilmLeadProject.data.related_projects_group.map(\n    (content, index) => {\n      if (content.related_projects.document.type == \"project\") {\n        const image = getImage(\n          content.related_projects.document.data.index_preview_img\n        );\n\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n                <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n          </>\n        );\n      } else if (\n        content.related_projects.document.type == \"film_lead_project\"\n      ) {\n        const image = getImage(\n          content.related_projects.document.data.index_preview_img\n        );\n\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n                <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n          </>\n        );\n      }\n    }\n  );\n\n  const RelatedProjects2 = () => {\n    return (\n      <Grid8>\n        {RelatedProjects[0]}\n        {RelatedProjects[1]}\n      </Grid8>\n    );\n  };\n  return (\n    <>\n      <Helmet>\n        <title>\n          Theo Ford – {data.prismicFilmLeadProject.data.project_title.text}\n        </title>\n      </Helmet>\n      <GlobalStyle />\n      <NavGrid></NavGrid>\n      <PageConCon>\n        <PageCon>\n          <Table>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Project</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicFilmLeadProject.data.project_title.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Client</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicFilmLeadProject.data.client.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Location</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicFilmLeadProject.data.location.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Categories</p>\n                </TableTitle>\n                <TableContent>\n                  <p>\n                    {data.prismicFilmLeadProject.data.categories.map(\n                      (category, index) => {\n                        return (\n                          <CategoryName key={index}>\n                            {(index ? \", \" : \"\") + category.category.slug}\n                          </CategoryName>\n                        );\n                      }\n                    )}\n                  </p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Year</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicFilmLeadProject.data.year.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Team</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicFilmLeadProject.data.team.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n          </Table>\n          {work}\n          <RelatedProjectsCon>\n            <RelatedProjectsTitle>Related Projects</RelatedProjectsTitle>\n            <RelatedProjects2 />\n          </RelatedProjectsCon>\n          {/* <Footer></Footer> */}\n        </PageCon>\n      </PageConCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(FilmLeadProject);\n\nexport const query = graphql`\n  query FilmLeadArtists($uid: String!) {\n    prismicFilmLeadProject(uid: { eq: $uid }) {\n      uid\n      id\n      data {\n        project_title {\n          html\n          text\n        }\n        client {\n          html\n          text\n        }\n        location {\n          html\n          text\n        }\n        project_title {\n          html\n          text\n        }\n        team {\n          html\n          text\n        }\n        year {\n          html\n          text\n        }\n        categories {\n          category {\n            slug\n            id\n          }\n        }\n        body1 {\n          ... on PrismicFilmLeadProjectDataBody1VideoWithPlayButton {\n            id\n            slice_type\n            primary {\n              video_thumbnail {\n                gatsbyImageData\n                dimensions {\n                  width\n                  height\n                }\n              }\n              video_with_play_button {\n                url\n              }\n              small_video_with_play_button {\n                url\n              }\n            }\n          }\n          ... on PrismicFilmLeadProjectDataBody1Image {\n            id\n            slice_type\n            primary {\n              image {\n                gatsbyImageData\n              }\n            }\n          }\n          ... on PrismicFilmLeadProjectDataBody1Text {\n            id\n            slice_type\n            primary {\n              text {\n                html\n                text\n              }\n            }\n          }\n          ... on PrismicFilmLeadProjectDataBody1Video {\n            id\n            slice_type\n            primary {\n              index_image {\n                gatsbyImageData\n              }\n              sml_video {\n                url\n              }\n              video {\n                url\n              }\n            }\n          }\n        }\n        related_projects_group {\n          related_projects {\n            uid\n            document {\n              ... on PrismicProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["AutoplayVideoCon","styled","div","withConfig","displayName","componentId","AutoplayVideoImg","AutoplayVideoVideo","video","AutoplayVideoImgCon","breatheAnimation","keyframes","AutoplayVideoTextCon","AutoPlayVideo","_ref","srcProps","posterProps","changedSlide","autoplayVideoRef","useRef","isOnScreen","useOnScreen","videoSrcState","setVideoSrcState","useState","isVideoLoaded","setIsVideoLoaded","React","useEffect","current","load","play","getPosterImage","getImage","style","opacity","position","srcSet","GatsbyImage","image","playsInline","autoPlay","muted","loop","ref","onLoadedData","type","src","VideoCon","VideoConInner","ControlsCon","LengthCon","props","pageColour","PlayPauseButtonCon","PlayCon","PauseButtonImgCon","PlayButtonText","p","PlayButtonImgCon","VideoWithContolsSC","VideoControlsImgCon","VideoProjectPage","img","format","time","hrs","mins","secs","ret","String","padStart","PlayButtonImg","StaticImage","__imageData","require","PauseButtonImg","VideoRef","isPlaying","setPlayingStatus","hasStartedPlaying","setHasStartedPlaying","vidDuration","setVidDuration","getImageVal","className","ImageOrientation2","onClick","playPause","pause","preload","onCanPlayThrough","zIndex","pointerEvents","onLoadedMetadata","handleLoadedMetadata","console","log","duration","pauseVideo","playVideo","x","dimensions","height","width","isImageSmlPortrait","isImageLrgPortrait","isImageSquare","GlobalStyle","createGlobalStyle","PageConCon","PageCon","Grid8","Table","TableRow","TableTitle","TableContent","BodyTextCon","SquareImage","ProjectPageAutoPlayVideoCon","CategoryName","span","RelatedProjectsCon","RelatedProjectsTitle","RelatedProjectsProjectCon","RelatedProjectProjectTitle","RelatedProjectsImg","withPrismicPreview","data","isPageWide","useMediaQuery","work","prismicFilmLeadProject","body1","map","content","index","slice_type","primary","video_with_play_button","url","video_thumbnail","small_video_with_play_button","dangerouslySetInnerHTML","__html","text","html","posterImgProps","index_image","sml_video","RelatedProjects","related_projects_group","related_projects","document","index_preview_img","Link","to","uid","project_title","RelatedProjects2","Helmet","NavGrid","client","location","categories","category","key","slug","year","team"],"sourceRoot":""}