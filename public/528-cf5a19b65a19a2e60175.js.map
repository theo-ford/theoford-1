{"version":3,"file":"528-cf5a19b65a19a2e60175.js","mappings":"qOAOM,MAAAA,EAAwBC,MAC7BC,EACAC,KAEM,MAAAC,GAAgBC,EAAAA,EAAAA,GAAiBH,GACvC,IAAKE,EAQJ,YAPAE,QAAQC,OACPC,EAAAA,EAAAA,GACCN,EACA,gJAOG,MAAAO,GAAmBC,EAAAA,EAAAA,GAAoBR,GAC7C,IAAKO,EAQJ,YAPAH,QAAQC,OACPC,EAAAA,EAAAA,GACCN,EACA,8MAOG,MAAAS,GAASC,EAAAA,EAAAA,GAAUR,GAErB,IACG,MAAAS,QAAaF,EAAOG,kBAAkB,CAC3CC,aAAcN,EAAiBM,aAC/BC,WAAY,IACZC,OAAQd,EAAgBc,SAGpBd,EAAgBc,OAAOC,UAC3BC,EAAAA,EAAAA,UAASN,EACT,OACON,GACR,KAAMA,aAAiBa,OAAwB,eAAfb,EAAMc,MAC/B,MAAAd,CAEP,E","sources":["webpack://studio-prismic-starter/../../../src/lib/resolvePrismicPreview.ts"],"sourcesContent":["import { navigate } from \"gatsby\";\n\nimport { fmtLog } from \"./fmtLog\";\nimport { getClient } from \"./getClient\";\nimport { getPluginOptions } from \"./getPluginOptions\";\nimport { getRepositoryConfig } from \"./getRepositoryConfig\";\n\nconst resolvePrismicPreview = async (\n\trepositoryName: string,\n\tabortController: AbortController,\n): Promise<void> => {\n\tconst pluginOptions = getPluginOptions(repositoryName);\n\tif (!pluginOptions) {\n\t\tconsole.error(\n\t\t\tfmtLog(\n\t\t\t\trepositoryName,\n\t\t\t\t'Plugin options could not be found. Did you add \"gatsby-plugin-prismic-previews\" for this repository to your app\\'s \"gatsby-config.js\" file?',\n\t\t\t),\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst repositoryConfig = getRepositoryConfig(repositoryName);\n\tif (!repositoryConfig) {\n\t\tconsole.error(\n\t\t\tfmtLog(\n\t\t\t\trepositoryName,\n\t\t\t\t'Repository configuration could not be found. Did you add <PrismicPreviewProvider> to your \"gatsby-browser.js\" and \"gatsby-ssr.js\"? It must contain a repository configuration object for this repository.',\n\t\t\t),\n\t\t);\n\n\t\treturn;\n\t}\n\n\tconst client = getClient(pluginOptions);\n\n\ttry {\n\t\tconst path = await client.resolvePreviewURL({\n\t\t\tlinkResolver: repositoryConfig.linkResolver,\n\t\t\tdefaultURL: \"/\",\n\t\t\tsignal: abortController.signal,\n\t\t});\n\n\t\tif (!abortController.signal.aborted) {\n\t\t\tnavigate(path);\n\t\t}\n\t} catch (error) {\n\t\tif (!(error instanceof Error && error.name === \"AbortError\")) {\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n\nexport default resolvePrismicPreview;\n"],"names":["resolvePrismicPreview","async","repositoryName","abortController","pluginOptions","getPluginOptions","console","error","fmtLog","repositoryConfig","getRepositoryConfig","client","getClient","path","resolvePreviewURL","linkResolver","defaultURL","signal","aborted","navigate","Error","name"],"sourceRoot":""}