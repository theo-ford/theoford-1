{"version":3,"file":"component---src-pages-index-slick-js-6f5a77e87b3eede59097.js","mappings":"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","sources":["webpack://studio-prismic-starter/./src/components/tf/index/two-up-carousels/two-up-carousel-slick-ant.js","webpack://studio-prismic-starter/./src/pages/index_slick.js"],"sourcesContent":["import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport Slider from \"@ant-design/react-slick\";\n// import \"../../../slick/slick.css\";\n// import \"../../../slick/slick-theme.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\nconst TwoUpCarouselCounterNextCon = styled.div`\n  margin-bottom: 8px;\n`;\nconst TwoUpCarouselCon = styled.div`\n  margin-left: 12.5px;\n  // cursor: e-resize;\n  // background-color: green;\n`;\nconst TwoUpCarouselCounterOneCon = styled.div`\n  grid-column: span 8;\n`;\nconst TwoUpCarouselCounterTwoCon = styled.div`\n  grid-column: span 6;\n`;\nconst TwoUpCarouselNextButtonCon = styled.div`\n  grid-column: span 2;\n  p {\n    color: #878787;\n  }\n`;\n\nconst CarouselButtonCon = styled.div`\n  width: 100%;\n  height: 100%;\n  // position: absolute;\n  // cursor: w-resize;\n\n  // background-color: red;\n  z-index: 1000;\n`;\nconst CarouselCon = styled.div`\n  z-index: 0;\n  // position: absolute;\n`;\nconst ForwardButton = styled.div`\n  width: 50%;\n  height: 100%;\n  cursor: e-resize;\n  float: right;\n  // background-color: blue;\n`;\nconst BackButton = styled.div`\n  width: 50%;\n  height: 100%;\n  cursor: e-resize;\n  float: left;\n  // background-color: orange;\n  // position: absolute\n`;\n\nexport const TwoUpProjectCarouselSlickAnt = ({\n  children,\n\n  projectLength,\n}) => {\n  // COUNTER\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [totalSlides, setTotalSlides] = useState(null);\n  useEffect(() => {\n    setCurrentSlide(0);\n  }, []);\n  useEffect(() => {\n    setTotalSlides(projectLength);\n  }, []);\n  const updateCurrentSlide = index => {\n    if (currentSlide !== index) {\n      setCurrentSlide(index);\n    }\n  };\n\n  // SLIDER SETTINGS\n  const settings = {\n    infinite: true,\n    // speed: 200,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    accessibility: true,\n    dots: false,\n    arrows: false,\n    swipe: false,\n    swipeToSlide: false,\n    adaptiveHeight: false,\n  };\n\n  // SLIDESHOW FUNCTION\n  const ProjectCarouselRef = React.useRef(null);\n\n  const [changedSlide, setChangedSlide] = useState(false);\n\n  function projectCarouselNextImg() {\n    ProjectCarouselRef.current.slickNext();\n    setChangedSlide(true);\n  }\n  return (\n    <>\n      <TwoUpCarouselCounterNextCon>\n        <Grid16>\n          <TwoUpCarouselCounterOneCon>\n            {/* <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p> */}\n            <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p>\n          </TwoUpCarouselCounterOneCon>\n          <TwoUpCarouselCounterTwoCon>\n            {/* <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p> */}\n            <p>{(\"0\" + (currentSlide + 2)).slice(-2)}</p>\n          </TwoUpCarouselCounterTwoCon>\n          <TwoUpCarouselNextButtonCon>\n            {projectLength > 1 ? (\n              <>\n                <p\n                  onClick={projectCarouselNextImg}\n                  style={{ display: \"inline-block\" }}\n                >\n                  Next\n                </p>\n                {/* <PVideoLoadingNext>&nbsp; (Video Loading)</PVideoLoadingNext> */}\n              </>\n            ) : (\n              \"\"\n            )}\n          </TwoUpCarouselNextButtonCon>\n        </Grid16>\n      </TwoUpCarouselCounterNextCon>\n\n      <TwoUpCarouselCon>\n        <CarouselButtonCon>\n          <CarouselCon onClick={projectCarouselNextImg}>\n            <Slider\n              {...settings}\n              ref={ProjectCarouselRef}\n              afterChange={index => updateCurrentSlide(index)}\n            >\n              {React.Children.map(children, child =>\n                React.cloneElement(child, {\n                  changedSlide: changedSlide,\n                })\n              )}\n            </Slider>\n            <BackButton></BackButton>\n            <ForwardButton></ForwardButton>\n          </CarouselCon>\n        </CarouselButtonCon>\n      </TwoUpCarouselCon>\n    </>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport { Helmet } from \"react-helmet\";\nimport \"../components/styles/index.css\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\nimport { Intro } from \"../components/tf/index/intro\";\nimport { ProjectInfo2 } from \"../components/tf/index/project-info2\";\n// import Slider from \"@ant-design/react-slick\";\nimport { TwoUpProjectCarouselSlickAnt } from \"../components/tf/index/two-up-carousels/two-up-carousel-slick-ant\";\nimport { ProjectCarousel } from \"../components/tf/index/one-up-carousel\";\nimport { SingleAssetProject } from \"../components/tf/index/single-asset-project1\";\nimport { FilmLeadCarousel2 } from \"../components/tf/index/film-carousel\";\nimport { VideoWithControlsImg2 } from \"../components/tf/index/video\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: white;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n  body {\n    // https://stackoverflow.com/questions/47095596/body-overflow-x-hidden-breaks-position-sticky\n    background-color: white;\n    overflow-x: clip;\n    max-width: 100vw;\n    @media (min-width: 666px) {\n      position: fixed;\n    }    \n  }\n`;\n\n/* - - - - - INTRO  - - - - -  */\nconst IntroConCon = styled.div``;\n\n/* NAV */\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\n\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\nconst LogoConMobile = styled.div`\n  display: none;\n  mix-blend-mode: exclusion;\n  @media (max-width: 666px) {\n    display: block;\n    width: calc(75% - 6.25px);\n    margin-top: 14vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\n\nconst NavSpacer = styled.div`\n  height: 25vh;\n  width: 100%;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* - - - - - PAGE  - - - - - */\nconst PageCon = styled.div`\n  margin-top: 30vh;\n`;\n\nconst ProjectCon = styled.div`\n  margin-bottom: 100px;\n  @media (max-width: 666px) {\n    margin-bottom: 200px;\n  }\n`;\n\n/* - - - - - INDEX AUTOPLAT VIDEO FORMATTING - - - - - */\n/* - - perhaps in the autoplay video component you put a conditional saying if page index apply this  - - */\nconst IndexAutoPlayVideoCon = styled.div`\n  position: relative;\n  width: calc(100% - 12.5px) !important;\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\n\n/* - - - - - - IMAGE - - - - - - - */\nconst SquareImg = styled.div`\n  width: calc(100% - 12.5px) !important;\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\n\nconst Index = ({ data }) => {\n  console.log(\"2023/10/17 15:22\");\n  const [pageLoad, setPageLoad] = useState(null);\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  const LogoConRef2 = useRef(null);\n\n  // page load useEffect\n  // https://stackoverflow.com/questions/57729504/is-there-a-way-to-tell-when-your-react-app-page-is-done-loading-the-page-asset\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n\n  const FourSeconds = setTimeout(overflowAllow, 4000);\n\n  function overflowAllow() {\n    document.body.style.position = \"relative\";\n  }\n\n  const NavIndexGridIndex = () => {\n    let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n    var [currentPage, setCurrentPage] = useState(null);\n    const LogoConRef = useRef(null);\n\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      // console.log(position);\n      if (position > 25) {\n        // console.log(\"greater than 100\");\n        LogoConRef.current.classList.add(\"shrink\");\n      } else if (position < 25) {\n        // console.log(\"less than 100\");\n        LogoConRef.current.classList.remove(\"shrink\");\n      }\n    };\n    // scroll use effect\n    useEffect(() => {\n      window.addEventListener(\"scroll\", handleScroll, {\n        passive: true,\n      });\n\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n\n    if (isPageWide) {\n      return (\n        <>\n          <LogoGridCon style={{ opacity: pageLoad ? 1 : 0 }}>\n            <LogoConCon>\n              <LogoCon ref={LogoConRef}>\n                <Link to=\"/\">\n                  <Icon />\n                </Link>\n              </LogoCon>\n            </LogoConCon>\n            <MenuCon style={{ opacity: pageLoad ? 1 : 0 }}>\n              <DesktopNavP>\n                <Link to=\"/\" className=\"selected\">\n                  Select,{\" \"}\n                </Link>\n                <Link to=\"/project_index\">Index, </Link>\n                <Link to=\"/office\">Office</Link>\n                {/* <br></br>Instagram, Twitter */}\n              </DesktopNavP>\n            </MenuCon>\n          </LogoGridCon>\n        </>\n      );\n    }\n    if (!isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <MobileLeftCol>\n              <Link to=\"/\">\n                <MobileNavP className=\"selected\">Selected</MobileNavP>\n              </Link>\n              <Link to=\"/project_index\">\n                <MobileNavP>Index</MobileNavP>\n              </Link>\n            </MobileLeftCol>\n\n            <MobileRightCol>\n              <Link to=\"/office\">\n                <MobileNavP>Office</MobileNavP>\n              </Link>\n              <MobileNavP>Instagram</MobileNavP>\n            </MobileRightCol>\n          </LogoGridCon>\n          <LogoConMobile ref={LogoConRef}>\n            <Icon />\n          </LogoConMobile>\n        </>\n      );\n    }\n  };\n\n  const overview = data.prismicFeaturedProjects.data.project_relationship_group.map(\n    (content, index) => {\n      if (\n        content.project_relationship_field.document.type == \"film_lead_project\"\n      ) {\n        const filmLeadProject = content.project_relationship_field.document.data.body.map(\n          (content_three, index) => {\n            if (content_three.slice_type == \"video_with_play_button\") {\n              const posterImage = content_three.primary.video_thumbnail;\n              return (\n                <VideoWithControlsImg2\n                  srcProps={content_three.primary.video_with_play_button.url}\n                  posterProps={posterImage}\n                  img={posterImage}\n                ></VideoWithControlsImg2>\n              );\n            }\n          }\n        );\n        return (\n          <>\n            {/* <ProjectCon>\n              <FilmLeadCarousel2>\n                {React.Children.map(filmLeadProject, child =>\n                  React.cloneElement(child, {})\n                )}\n              </FilmLeadCarousel2>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon> */}\n          </>\n        );\n      }\n      if (content.project_relationship_field.document.type == \"project\") {\n        const projectLength =\n          content.project_relationship_field.document.data.body.length;\n        const project = content.project_relationship_field.document.data.body.map(\n          (content_four, index) => {\n            if (content_four.slice_type == \"image\") {\n              // console.log(\"SQUARE IMAGE\");\n              const image = getImage(content_four.primary.image);\n              // console.log(image);\n              return (\n                // <ImgComponent\n                //   srcProps={content_four.primary.image.gatsbyImageData.images.sources.srcSet}\n                // />\n                <SquareImg>\n                  <GatsbyImage image={image} />\n                </SquareImg>\n              );\n            }\n            if (content_four.slice_type == \"video\") {\n              if (isPageWide) {\n                // postImage = getImage(content_four.primary.index_image)\n                const posterImg = content_four.primary.index_image;\n                return (\n                  <IndexAutoPlayVideoCon>\n                    <AutoPlayVideo\n                      srcProps={content_four.primary.video.url}\n                      posterProps={posterImg}\n                    />\n                  </IndexAutoPlayVideoCon>\n                );\n              } else {\n                const posterImg = content_four.primary.index_image;\n                return (\n                  <AutoPlayVideo\n                    srcProps={content_four.primary.sml_video.url}\n                    posterProps={posterImg}\n                  />\n                );\n              }\n            }\n          }\n        );\n        if (isPageWide && projectLength > 1) {\n          console.log(\"ANT DESIGN\");\n          return (\n            <ProjectCon>\n              <TwoUpProjectCarouselSlickAnt\n                projectLength={\n                  content.project_relationship_field.document.data.body.length\n                }\n              >\n                {React.Children.map(project, child =>\n                  React.cloneElement(child, {\n                    changedSlide: false,\n                  })\n                )}\n                {/* {project} */}\n              </TwoUpProjectCarouselSlickAnt>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          );\n        } else if (isPageWide && projectLength <= 1) {\n          return (\n            <>\n              <ProjectCon>\n                <SingleAssetProject>{project}</SingleAssetProject>\n                <ProjectInfo2\n                  data2={content.project_relationship_field.document.data}\n                  uid={content.project_relationship_field.document.uid}\n                ></ProjectInfo2>\n              </ProjectCon>\n            </>\n          );\n        } else if (isPageWide == false) {\n          return (\n            <ProjectCon>\n              {/* <ProjectCarousel projectLength={projectLength}>\n                {React.Children.map(project, child =>\n                  React.cloneElement(child, {\n                    changedSlide: false,\n                  })\n                )}\n              </ProjectCarousel>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2> */}\n            </ProjectCon>\n          );\n        }\n      }\n    }\n  );\n\n  return (\n    <>\n      <GlobalStyle />\n      <Helmet>\n        <head></head>\n        <title>(10) Pagination 1</title>\n      </Helmet>\n      <IntroConCon style={{ opacity: pageLoad ? 1 : 0 }}>\n        <Intro></Intro>\n      </IntroConCon>\n\n      <NavSpacer></NavSpacer>\n      <NavIndexGridIndex></NavIndexGridIndex>\n\n      <PageCon style={{ opacity: pageLoad ? 1 : 0 }}>{overview}</PageCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(Index);\n\nexport const query = graphql`\n  query IndexQuery45 {\n    prismicFeaturedProjects {\n      data {\n        project_relationship_group {\n          project_relationship_field {\n            document {\n              ... on PrismicProject {\n                id\n                type\n                uid\n                data {\n                  project_title {\n                    html\n                    text\n                  }\n                  location {\n                    html\n                    text\n                  }\n                  year {\n                    html\n                    text\n                  }\n                  homepage_intro {\n                    text\n                  }\n                  client {\n                    text\n                  }\n                  body {\n                    ... on PrismicProjectDataBodyImage {\n                      id\n                      slice_type\n                      primary {\n                        image {\n                          gatsbyImageData\n                        }\n                      }\n                    }\n                    ... on PrismicProjectDataBodyVideo {\n                      id\n                      slice_type\n                      primary {\n                        video {\n                          url\n                        }\n                        sml_video {\n                          url\n                        }\n                        index_image {\n                          gatsbyImageData\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                id\n                type\n                uid\n                data {\n                  project_title {\n                    html\n                    text\n                  }\n                  location {\n                    html\n                    text\n                  }\n                  year {\n                    html\n                    text\n                  }\n                  client {\n                    html\n                    text\n                  }\n                  homepage_intro {\n                    text\n                  }\n                  body {\n                    ... on PrismicFilmLeadProjectDataBodyVideoWithPlayButton {\n                      id\n                      slice_type\n                      primary {\n                        video_with_play_button {\n                          url\n                        }\n                        video_thumbnail {\n                          gatsbyImageData\n                          dimensions {\n                            height\n                            width\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Grid16","styled","div","withConfig","displayName","componentId","TwoUpCarouselCounterNextCon","TwoUpCarouselCon","TwoUpCarouselCounterOneCon","TwoUpCarouselCounterTwoCon","TwoUpCarouselNextButtonCon","CarouselButtonCon","CarouselCon","ForwardButton","BackButton","TwoUpProjectCarouselSlickAnt","_ref","children","projectLength","currentSlide","setCurrentSlide","useState","totalSlides","setTotalSlides","useEffect","ProjectCarouselRef","React","changedSlide","setChangedSlide","projectCarouselNextImg","current","slickNext","slice","onClick","style","display","Slider","Object","assign","infinite","slidesToShow","slidesToScroll","accessibility","dots","arrows","swipe","swipeToSlide","adaptiveHeight","ref","afterChange","index","updateCurrentSlide","map","child","GlobalStyle","createGlobalStyle","IntroConCon","LogoGridCon","LogoConCon","MenuCon","LogoCon","DesktopNavP","p","MobileLeftCol","MobileRightCol","MobileNavP","LogoConMobile","NavSpacer","PageCon","ProjectCon","IndexAutoPlayVideoCon","SquareImg","withPrismicPreview","data","console","log","pageLoad","setPageLoad","isPageWide","useMediaQuery","useRef","onPageLoad","document","readyState","window","addEventListener","removeEventListener","setTimeout","body","position","NavIndexGridIndex","currentPage","setCurrentPage","LogoConRef","handleScroll","pageYOffset","classList","add","remove","passive","opacity","Link","to","Icon","className","overview","prismicFeaturedProjects","project_relationship_group","content","project_relationship_field","type","content_three","slice_type","posterImage","primary","video_thumbnail","VideoWithControlsImg2","srcProps","video_with_play_button","url","posterProps","img","length","project","content_four","image","getImage","GatsbyImage","posterImg","index_image","AutoPlayVideo","video","sml_video","ProjectInfo2","data2","uid","SingleAssetProject","Helmet","Intro"],"sourceRoot":""}