{"version":3,"file":"component---src-pages-project-index-js-bfffaa8491cfe1292378.js","mappings":"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","sources":["webpack://studio-prismic-starter/../../../src/lib/getActiveRepositoryName.ts","webpack://studio-prismic-starter/../../../src/lib/getDocument.ts","webpack://studio-prismic-starter/../../../src/lib/getPreviewCookie.ts","webpack://studio-prismic-starter/../../../src/lib/hasOwnProperty.ts","webpack://studio-prismic-starter/../../src/useMergePrismicPreviewData.ts","webpack://studio-prismic-starter/../../src/withPrismicPreview.tsx","webpack://studio-prismic-starter/./src/components/tf/media-query.js","webpack://studio-prismic-starter/./src/components/tf/nav-grid/nav.js","webpack://studio-prismic-starter/./src/components/tf/page-load.js","webpack://studio-prismic-starter/./src/pages/project_index.js","webpack://studio-prismic-starter/./assets/WhiteLogo.svg"],"sourcesContent":["import { getPreviewCookie } from \"./getPreviewCookie\";\n\nexport const getActiveRepositoryName = (): string | undefined => {\n\tconst [, repositoryName] =\n\t\tdecodeURIComponent(getPreviewCookie() || \"\").match(\n\t\t\t/\"([a-zA-Z0-9][-a-zA-Z0-9]{2,}[a-zA-Z0-9]).prismic.io\"/,\n\t\t) || [];\n\n\treturn repositoryName;\n};\n","import type { NormalizedDocument } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getDocument = (\n\tprismicId: string,\n): NormalizedDocument | undefined => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\treturn state.documents[prismicId];\n};\n","const readValue = (value: string): string => {\n\treturn value.replace(/%3B/g, \";\");\n};\n\n/**\n * Returns the value of a cookie from a given cookie store.\n *\n * @returns The value of the cookie, if it exists.\n */\nexport const getPreviewCookie = (): string | undefined => {\n\tconst cookies = document.cookie.split(\"; \");\n\n\tfor (const cookie of cookies) {\n\t\tconst parts = cookie.split(\"=\");\n\t\tconst thisName = readValue(parts[0]).replace(/%3D/g, \"=\");\n\n\t\t// The Prismic preview cookie name is hardcoded here to prevent\n\t\t// including `@prismicio/client` in the main \"app.js\" bundle.\n\t\t// Unfortunately, the package is not tree-shaken when only the\n\t\t// cookie name is imported.\n\t\tif (thisName === \"io.prismic.preview\") {\n\t\t\tconst value = parts.slice(1).join(\"=\");\n\n\t\t\treturn readValue(value);\n\t\t}\n\t}\n};\n","/**\n * Determines if an object contains a given property. It augments the provided\n * object's type to include the property.\n *\n * @returns `true` if `obj` contains a `prop` property, `false` otherwise.\n */\nexport const hasOwnProperty = <X extends object, Y extends PropertyKey>(\n\tobj: X,\n\tprop: Y,\n): obj is X & Record<Y, unknown> => {\n\treturn obj.hasOwnProperty(prop);\n};\n","import * as React from \"react\";\n\nimport { getDocument } from \"./lib/getDocument\";\nimport { hasOwnProperty } from \"./lib/hasOwnProperty\";\n\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\ntype MergePreviewDataArgs<TStaticDataNode> = {\n\tstaticDataNode: TStaticDataNode;\n\tpublishedDocumentIDs: string[];\n};\n\nconst mergePreviewData = <TStaticDataNode>({\n\tstaticDataNode,\n\tpublishedDocumentIDs,\n}: MergePreviewDataArgs<TStaticDataNode>): TStaticDataNode => {\n\tconst castedData: unknown = staticDataNode;\n\n\tif (\n\t\ttypeof castedData === \"object\" &&\n\t\tcastedData !== null &&\n\t\t!Array.isArray(castedData)\n\t) {\n\t\tif (hasOwnProperty(castedData, \"_previewable\")) {\n\t\t\tconst replacement = getDocument(castedData._previewable as string);\n\n\t\t\tif (replacement) {\n\t\t\t\treturn replacement as unknown as typeof staticDataNode;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tpublishedDocumentIDs.length > 0 &&\n\t\t\t\t\t!publishedDocumentIDs.includes(castedData._previewable as string)\n\t\t\t\t) {\n\t\t\t\t\treturn null as unknown as typeof staticDataNode;\n\t\t\t\t} else {\n\t\t\t\t\treturn staticDataNode;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst newNode = {} as TStaticDataNode;\n\n\t\t\tfor (const key in castedData) {\n\t\t\t\tnewNode[key as keyof typeof newNode] = mergePreviewData({\n\t\t\t\t\tstaticDataNode: castedData[key as keyof typeof castedData],\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newNode;\n\t\t}\n\t} else if (Array.isArray(staticDataNode)) {\n\t\treturn staticDataNode.map((element) => {\n\t\t\treturn mergePreviewData({\n\t\t\t\tstaticDataNode: element,\n\t\t\t\tpublishedDocumentIDs,\n\t\t\t});\n\t\t}) as typeof staticDataNode;\n\t} else {\n\t\treturn staticDataNode;\n\t}\n};\n\nexport const useMergePrismicPreviewData = <\n\tTStaticData extends Record<string, unknown>,\n>(\n\tstaticData: TStaticData | undefined,\n): TStaticData | undefined => {\n\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t(state) => state.isBootstrapped,\n\t);\n\tconst publishedDocumentIDs = usePrismicPreviewStore(\n\t\t(state) => state.publishedDocumentIDs,\n\t);\n\tconst documents = usePrismicPreviewStore((state) => state.documents);\n\n\treturn React.useMemo(() => {\n\t\tif (staticData) {\n\t\t\tconst hasPreviewData =\n\t\t\t\tpublishedDocumentIDs.length > 0 || Object.keys(documents).length > 0;\n\n\t\t\tif (isBootstrapped && hasPreviewData) {\n\t\t\t\treturn mergePreviewData({\n\t\t\t\t\tstaticDataNode: staticData,\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn staticData;\n\t\t\t}\n\t\t}\n\t}, [documents, publishedDocumentIDs, isBootstrapped, staticData]);\n};\n","import * as React from \"react\";\n\nimport { getActiveRepositoryName } from \"./lib/getActiveRepositoryName\";\nimport { getComponentDisplayName } from \"./lib/getComponentDisplayName\";\n\nimport type { PagePropsLike } from \"./types\";\n\nimport { useMergePrismicPreviewData } from \"./useMergePrismicPreviewData\";\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\nexport type WithPrismicPreviewProps<TProps = Record<string, unknown>> = {\n\toriginalData: TProps;\n\tisPrismicPreview: boolean;\n};\n\nexport const withPrismicPreview = <TProps extends PagePropsLike>(\n\tWrappedComponent: React.ComponentType<TProps>,\n): React.ComponentType<TProps> => {\n\tconst WithPrismicPreview = (props: TProps): JSX.Element => {\n\t\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t\t(state) => state.isBootstrapped,\n\t\t);\n\n\t\tconst [isPrismicPreview, setIsPrismicPreview] = React.useState<\n\t\t\tboolean | null\n\t\t>(null);\n\t\tconst mergedData = useMergePrismicPreviewData(props.data);\n\n\t\tReact.useEffect(() => {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tif (!isBootstrapped) {\n\t\t\t\tconst repositoryName = getActiveRepositoryName();\n\t\t\t\tsetIsPrismicPreview(!!repositoryName);\n\n\t\t\t\tif (repositoryName) {\n\t\t\t\t\timport(\"./lib/bootstrapPrismicPreview\").then((mod) =>\n\t\t\t\t\t\tmod.default(repositoryName, abortController),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn () => abortController.abort();\n\t\t}, [isBootstrapped]);\n\n\t\treturn (\n\t\t\t<WrappedComponent\n\t\t\t\t{...props}\n\t\t\t\tdata={mergedData}\n\t\t\t\toriginalData={props.data}\n\t\t\t\tisPrismicPreview={isPrismicPreview}\n\t\t\t/>\n\t\t);\n\t};\n\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst wrappedComponentName = getComponentDisplayName(WrappedComponent);\n\t\tWithPrismicPreview.displayName = `withPrismicPreview(${wrappedComponentName})`;\n\t}\n\n\treturn WithPrismicPreview;\n};\n","import { useState, useEffect } from \"react\";\n\nexport function useMediaQuery(query) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { withPreview } from \"gatsby-source-prismic\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../media-query\";\nimport Icon from \"../../../../assets/WhiteLogo.svg\";\nimport { graphql, Link } from \"gatsby\";\nimport { PageLoad } from \"../page-load\";\n\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n    /* width: calc(100% - 2px);\n    margin-left: 12.5px;\n    top: 12.5px; */\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 1;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\n\nexport const NavGrid = () => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  var [currentPage, setCurrentPage] = useState(null);\n  const LogoConRef = useRef(null);\n\n  useEffect(() => {\n    var inputString = window.location.href;\n    var outputString = inputString.replace(/.*\\//, \"\");\n    if (outputString == \"project_index\") {\n      setCurrentPage(outputString);\n    } else if (outputString == \"office\") {\n      setCurrentPage(outputString);\n    } else {\n      setCurrentPage(null);\n    }\n  }, [setCurrentPage]);\n\n  if (isPageWide) {\n    return (\n      <>\n        <LogoGridCon style={{ opacity: PageLoad ? 1 : 0 }}>\n          <LogoConCon>\n            <LogoCon ref={LogoConRef}>\n              <Link to=\"/\">\n                <Icon />\n              </Link>\n            </LogoCon>\n          </LogoConCon>\n          <MenuCon>\n            <DesktopNavP>\n              <Link to=\"/\">Select, </Link>\n              <Link\n                to=\"/project_index\"\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index,{\" \"}\n              </Link>\n              <Link\n                to=\"/office\"\n                className={currentPage == \"office\" ? \"selected\" : \"\"}\n              >\n                Office\n              </Link>\n              {/* <br></br>Instagram, Twitter */}\n            </DesktopNavP>\n          </MenuCon>\n        </LogoGridCon>\n      </>\n    );\n  }\n  if (!isPageWide) {\n    return (\n      <>\n        <LogoGridCon>\n          <MobileLeftCol>\n            <Link to=\"/\">\n              <MobileNavP>Selected</MobileNavP>\n            </Link>\n            <Link to=\"/project_index\">\n              <MobileNavP\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index\n              </MobileNavP>\n            </Link>\n          </MobileLeftCol>\n\n          <MobileRightCol>\n            <Link to=\"/office\">\n              <MobileNavP className={currentPage == \"office\" ? \"selected\" : \"\"}>\n                Office\n              </MobileNavP>\n            </Link>\n            <MobileNavP>Instagram</MobileNavP>\n          </MobileRightCol>\n        </LogoGridCon>\n      </>\n    );\n  }\n};\n","import { useState, useEffect } from \"react\";\n\nexport function PageLoad(query) {\n  const [pageLoad, setPageLoad] = useState(null);\n\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport { Helmet } from \"react-helmet\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\n// import PlayButton from \"../../assets/Logo.jpg\";\n// import PlayButton from \"../../public/icons/logo.jpg\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: black;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n  body {\n    // https://stackoverflow.com/questions/47095596/body-overflow-x-hidden-breaks-position-sticky\n    background-color: black;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n`;\nconst PageCon = styled.div`\n  background-color: black;\n  /* min-height: 100vh; */\n  /* overflow: hidden; */\n  padding-bottom: 18vh;\n  @media (max-width: 666px) {\n    padding-bottom: 0vh;\n  }\n`;\nconst WhiteText = styled.p`\n  color: white;\n`;\nconst TableCon = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  /* background-color: blue; */\n`;\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    grid-gap: 10px;\n  }\n`;\n\nconst ImageBorderCon = styled.div`\n  height: 10px;\n`;\n\nconst IndexImgCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst IndexImg = styled.div`\n  width: 100%;\n  opacity: 0;\n  /* position: absolute; */\n  /* &:first-child {\n    opacity: 1;\n  } */\n`;\nconst ProjectCon = styled.div`\n  &:hover ${IndexImg} {\n    opacity: 1;\n  }\n  /* &:nth-child(1) .index_img {\n    opacity: 1;\n  } */\n`;\nconst Border = styled.div`\n  grid-column: span 14;\n  border-top: 1px solid white;\n  @media (max-width: 666px) {\n    grid-column: span 16;\n  }\n`;\nconst InformationCon = styled.div`\n  height: 20px;\n`;\nconst ImgSpacer = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst ProjectTitleCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    grid-column: span 8;\n  }\n`;\nconst ClientCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst SectorCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst CategoryCon = styled.div`\n  grid-column: span 4;\n  @media (max-width: 666px) {\n    grid-column: span 8;\n  }\n`;\nconst YearCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst LocationCon = styled.div`\n  grid-column: span 2;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst IndexBodyP = styled.p`\n  color: white;\n  font-size: 12px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\nconst TableHeaderCon = styled.div`\n  margin-top: 140px;\n`;\n\nconst IndexTitleP = styled.p`\n  font-size: 16px;\n  color: white;\n`;\nconst CategoryMenuConCon = styled.div`\n  width: calc(25% - 12.5px);\n  margin-left: calc(75% + 12.5px);\n  top: 12.5px;\n  position: absolute;\n  z-index: 1000000;\n\n  @media (max-width: 666px) {\n    margin-top: 70px;\n    width: calc(100% - 20px);\n    margin-left: calc(10px);\n\n    /* display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px; */\n  }\n`;\nconst CategoryMenuCon = styled.div`\n  /* grid-column: 2 / span 1; */\n`;\n\nconst CategoryItem = styled.span`\n  font-size: 16px;\n  color: #878787;\n  &.active {\n    color: white;\n  }\n`;\nconst TextImgToggleP = styled.p`\n  color: #878787;\n  span.active {\n    color: white;\n  }\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n  font-size: 12px;\n`;\nconst ProjectIndex = ({ data }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  const LogoConRef = useRef(null);\n  const [activeCategory, setCategory] = useState(null);\n  const [categoriesVisible, setCategoriesVisible] = useState(false);\n\n  const projectIndexSelectArray = data.prismicProjectIndexSelect.data.project_relationship_group.map(\n    (content, index) => {\n      return { content };\n    }\n  );\n\n  const organisedArray = projectIndexSelectArray.sort(function(a, b) {\n    return (\n      b.content.project_relationship_field.document.data.year.text -\n      a.content.project_relationship_field.document.data.year.text\n    );\n  });\n\n  const organisedArrayMap = organisedArray\n    .filter(project => {\n      if (activeCategory === null) {\n        return project;\n      } else {\n        return project.content.project_relationship_field.document.data.categories\n          .map(category => textTransfrom(category.category.slug))\n          .includes(activeCategory);\n      }\n    })\n    .map((content, index) => {\n      var index_image = getImage(\n        content.content.project_relationship_field.document.data\n          .index_preview_img\n      );\n      return (\n        <>\n          <Link\n            to={`/${content.content.project_relationship_field.document.uid}`}\n          >\n            <ProjectCon>\n              <ImageBorderCon>\n                <Grid16>\n                  <IndexImgCon>\n                    <IndexImg className=\"index_img\">\n                      <GatsbyImage image={index_image} />\n                    </IndexImg>\n                  </IndexImgCon>\n                  <Border></Border>\n                </Grid16>\n              </ImageBorderCon>\n\n              <InformationCon>\n                <Grid16>\n                  <ImgSpacer></ImgSpacer>\n                  <ProjectTitleCon>\n                    <IndexBodyP>\n                      {\n                        content.content.project_relationship_field.document.data\n                          .project_title.text\n                      }\n                    </IndexBodyP>\n                  </ProjectTitleCon>\n                  <ClientCon>\n                    <IndexBodyP>\n                      {\n                        content.content.project_relationship_field.document.data\n                          .client.text\n                      }\n                    </IndexBodyP>\n                  </ClientCon>\n                  <SectorCon>\n                    <IndexBodyP>\n                      {\n                        content.content.project_relationship_field.document.data\n                          .sector.text\n                      }\n                    </IndexBodyP>\n                  </SectorCon>\n                  <CategoryCon>\n                    <IndexBodyP>\n                      {\" \"}\n                      {content.content.project_relationship_field.document.data.categories.map(\n                        (category, index) => {\n                          return (\n                            <CategoryName key={index}>\n                              {(index ? \", \" : \"\") + category.category.slug}\n                            </CategoryName>\n                          );\n                        }\n                      )}\n                    </IndexBodyP>\n                  </CategoryCon>\n                  <YearCon>\n                    <IndexBodyP>\n                      {\" \"}\n                      {\n                        content.content.project_relationship_field.document.data\n                          .year.text\n                      }\n                    </IndexBodyP>\n                  </YearCon>\n                  <LocationCon>\n                    <IndexBodyP>\n                      {\n                        content.content.project_relationship_field.document.data\n                          .location.text\n                      }\n                    </IndexBodyP>\n                  </LocationCon>\n                </Grid16>\n              </InformationCon>\n            </ProjectCon>\n          </Link>\n        </>\n      );\n    });\n\n  function textTransfrom(y) {\n    return y.replace(\"-\", \" \").replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n  }\n\n  const Categories = () => {\n    return (\n      <>\n        <CategoryItem\n          onClick={() => setCategory(null)}\n          className={activeCategory === null ? `active` : ``}\n        >\n          All,{\" \"}\n        </CategoryItem>\n\n        {categoriesList}\n      </>\n    );\n  };\n\n  const categoriesList = data.allPrismicCategory.edges.map((content, index) => {\n    return (\n      <>\n        <CategoryItem>{index ? \", \" : \"\"}</CategoryItem>\n\n        <CategoryItem\n          className={activeCategory === content.node.data.name ? `active` : ``}\n          key={index}\n          onClick={() => {\n            setCategory(content.node.data.name);\n          }}\n        >\n          {content.node.data.name}\n        </CategoryItem>\n      </>\n    );\n  });\n\n  return (\n    <>\n      <GlobalStyle />\n      <Helmet>\n        <title>Theo Ford – Index</title>\n      </Helmet>\n      <PageCon>\n        <NavGrid></NavGrid>\n        <CategoryMenuConCon>\n          <CategoryMenuCon>\n            <Categories></Categories>\n          </CategoryMenuCon>\n        </CategoryMenuConCon>\n\n        <TableHeaderCon>\n          <Grid16>\n            <ImgSpacer></ImgSpacer>\n            <ProjectTitleCon>\n              <IndexTitleP>Project</IndexTitleP>\n            </ProjectTitleCon>\n            <ClientCon>\n              <IndexTitleP>Client</IndexTitleP>\n            </ClientCon>\n            <SectorCon>\n              <IndexTitleP>Sector</IndexTitleP>\n            </SectorCon>\n            <CategoryCon>\n              <IndexTitleP>Category</IndexTitleP>\n            </CategoryCon>\n            <YearCon>\n              <IndexTitleP>Year</IndexTitleP>\n            </YearCon>\n            <LocationCon>\n              <IndexTitleP>Location</IndexTitleP>\n            </LocationCon>\n          </Grid16>\n        </TableHeaderCon>\n        <TableCon>{organisedArrayMap}</TableCon>\n      </PageCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(ProjectIndex);\n\nexport const query = graphql`\n  query ProjectIndexSelectQuery {\n    prismicProjectIndexSelect {\n      data {\n        project_relationship_group {\n          project_relationship_field {\n            document {\n              ... on PrismicProject {\n                id\n                type\n                uid\n                data {\n                  categories {\n                    category {\n                      slug\n                      id\n                    }\n                  }\n                  project_title {\n                    text\n                  }\n                  year {\n                    text\n                  }\n                  client {\n                    text\n                  }\n                  location {\n                    text\n                  }\n                  sector {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                id\n                type\n                uid\n                data {\n                  categories {\n                    category {\n                      slug\n                      id\n                    }\n                  }\n                  project_title {\n                    text\n                  }\n                  year {\n                    text\n                  }\n                  client {\n                    text\n                  }\n                  location {\n                    text\n                  }\n                  sector {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allPrismicCategory {\n      edges {\n        node {\n          data {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction WhiteLogo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:#fff;}\")),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m-.62,1h254.56v52.03h-98.04v254.13h-58.48V53.03H-.62V1Z\",\"key\":1}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m382.51,80.12c24.08,0,43.07,6.95,56.98,20.85,13.9,13.91,20.85,33.61,20.85,59.12v147.06h-54.18v-138.03c0-28.09-13.91-42.14-41.71-42.14-13.76,0-25.44,4.94-35.04,14.83-9.61,9.89-14.41,23.58-14.41,41.07v124.27h-54.18V1h54.18v113.95c16.91-23.22,39.41-34.83,67.51-34.83Z\",\"key\":2}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m687.81,200.09v12.9h-165.98c2,18.92,7.96,33.18,17.85,42.79,9.89,9.61,23.15,14.4,39.77,14.4,24.65,0,41.56-10.6,50.74-31.82h52.03c-5.74,22.65-17.78,40.63-36.12,53.96-18.35,13.33-40.71,20-67.08,20-32.97,0-59.63-10.6-79.98-31.82-20.36-21.21-30.53-49.3-30.53-84.28s10.03-63.06,30.1-84.28c20.35-21.21,46.87-31.82,79.55-31.82s60.2,11.04,79.98,33.11c19.78,22.08,29.67,51.03,29.67,86.86Zm-110.08-77.83c-31.82,0-50.31,17.63-55.47,52.89h111.37c-2.3-16.34-8.32-29.24-18.06-38.7-9.75-9.46-22.36-14.19-37.84-14.19Z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m890.34,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":4}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1233.04,1v52.03h-158.24v72.24h144.05v49.88h-144.05v132.01h-58.05V1h216.29Z\",\"key\":5}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1423.96,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":6}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1581.77,81.84c4.87,0,9.31.29,13.33.86v49.88h-13.76c-20.64,0-36.48,5.23-47.51,15.7-11.04,10.47-16.55,25.87-16.55,46.22v112.66h-54.18V85.28h52.46v39.56c12.32-28.66,34.4-43,66.22-43Z\",\"key\":7}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1755.49,114.09V1h54.18v306.16h-52.46v-30.96c-16.34,24.08-39.71,36.12-70.09,36.12s-54.9-10.6-72.67-31.82c-18.06-21.21-27.09-49.3-27.09-84.28s9.03-63.78,27.09-84.71c17.48-20.92,41.71-31.39,72.67-31.39s52.6,11.33,68.37,33.97Zm-112.66,83.85c0,22.94,5.01,40.28,15.05,52.03,10.03,11.76,23.93,17.63,41.71,17.63s31.82-6.16,42.14-18.49c10.03-12.32,15.05-29.95,15.05-52.89s-5.02-40.56-15.05-52.89c-10.04-12.32-24.08-18.49-42.14-18.49s-31.32,6.45-41.49,19.35c-10.18,12.9-15.27,30.82-15.27,53.75Z\",\"key\":8})]);\n}\n\nWhiteLogo.defaultProps = {\"id\":\"Layer_1\",\"viewBox\":\"0 0 1810 322.5\"};\n\nmodule.exports = WhiteLogo;\n\nWhiteLogo.default = WhiteLogo;\n"],"names":["getActiveRepositoryName","repositoryName","decodeURIComponent","getPreviewCookie","match","getDocument","prismicId","usePrismicPreviewStore","getState","documents","readValue","value","replace","cookies","document","cookie","split","parts","slice","join","hasOwnProperty","obj","prop","mergePreviewData","_ref","staticDataNode","publishedDocumentIDs","castedData","Array","isArray","map","element","replacement","_previewable","length","includes","newNode","key","withPrismicPreview","WrappedComponent","props","isBootstrapped","state","isPrismicPreview","setIsPrismicPreview","React","mergedData","staticData","hasPreviewData","Object","keys","useMergePrismicPreviewData","data","abortController","AbortController","then","mod","default","abort","jsx","originalData","useMediaQuery","query","matches","setMatches","useState","useEffect","media","window","matchMedia","listener","addListener","removeListener","LogoGridCon","styled","div","withConfig","displayName","componentId","LogoConCon","MenuCon","LogoCon","DesktopNavP","p","MobileLeftCol","MobileRightCol","MobileNavP","NavGrid","isPageWide","currentPage","setCurrentPage","LogoConRef","useRef","outputString","location","href","style","opacity","PageLoad","ref","Link","to","Icon","className","pageLoad","setPageLoad","onPageLoad","console","log","readyState","addEventListener","removeEventListener","GlobalStyle","createGlobalStyle","PageCon","TableCon","Grid16","ImageBorderCon","IndexImgCon","IndexImg","ProjectCon","Border","InformationCon","ImgSpacer","ProjectTitleCon","ClientCon","SectorCon","CategoryCon","YearCon","LocationCon","IndexBodyP","TableHeaderCon","IndexTitleP","CategoryMenuConCon","CategoryMenuCon","CategoryItem","span","CategoryName","activeCategory","setCategory","categoriesVisible","setCategoriesVisible","organisedArrayMap","prismicProjectIndexSelect","project_relationship_group","content","index","sort","a","b","project_relationship_field","year","text","filter","project","categories","category","slug","toUpperCase","index_image","getImage","index_preview_img","uid","GatsbyImage","image","project_title","client","sector","Categories","onClick","categoriesList","allPrismicCategory","edges","node","name","Helmet","WhiteLogo","createElement","defaultProps","module","exports"],"sourceRoot":""}