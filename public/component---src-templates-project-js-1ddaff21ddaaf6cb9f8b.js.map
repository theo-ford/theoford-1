{"version":3,"file":"component---src-templates-project-js-1ddaff21ddaaf6cb9f8b.js","mappings":"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","sources":["webpack://studio-prismic-starter/../../../src/lib/getActiveRepositoryName.ts","webpack://studio-prismic-starter/../../../src/lib/getDocument.ts","webpack://studio-prismic-starter/../../../src/lib/getPreviewCookie.ts","webpack://studio-prismic-starter/../../../src/lib/hasOwnProperty.ts","webpack://studio-prismic-starter/../../src/useMergePrismicPreviewData.ts","webpack://studio-prismic-starter/../../src/withPrismicPreview.tsx","webpack://studio-prismic-starter/./src/components/hooks/useOnScreen.js","webpack://studio-prismic-starter/./src/components/tf/autoplay-video.js","webpack://studio-prismic-starter/./src/components/tf/media-query.js","webpack://studio-prismic-starter/./src/components/tf/nav-grid/nav.js","webpack://studio-prismic-starter/./src/components/tf/page-load.js","webpack://studio-prismic-starter/./src/templates/project.js","webpack://studio-prismic-starter/./assets/WhiteLogo.svg"],"sourcesContent":["import { getPreviewCookie } from \"./getPreviewCookie\";\n\nexport const getActiveRepositoryName = (): string | undefined => {\n\tconst [, repositoryName] =\n\t\tdecodeURIComponent(getPreviewCookie() || \"\").match(\n\t\t\t/\"([a-zA-Z0-9][-a-zA-Z0-9]{2,}[a-zA-Z0-9]).prismic.io\"/,\n\t\t) || [];\n\n\treturn repositoryName;\n};\n","import type { NormalizedDocument } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getDocument = (\n\tprismicId: string,\n): NormalizedDocument | undefined => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\treturn state.documents[prismicId];\n};\n","const readValue = (value: string): string => {\n\treturn value.replace(/%3B/g, \";\");\n};\n\n/**\n * Returns the value of a cookie from a given cookie store.\n *\n * @returns The value of the cookie, if it exists.\n */\nexport const getPreviewCookie = (): string | undefined => {\n\tconst cookies = document.cookie.split(\"; \");\n\n\tfor (const cookie of cookies) {\n\t\tconst parts = cookie.split(\"=\");\n\t\tconst thisName = readValue(parts[0]).replace(/%3D/g, \"=\");\n\n\t\t// The Prismic preview cookie name is hardcoded here to prevent\n\t\t// including `@prismicio/client` in the main \"app.js\" bundle.\n\t\t// Unfortunately, the package is not tree-shaken when only the\n\t\t// cookie name is imported.\n\t\tif (thisName === \"io.prismic.preview\") {\n\t\t\tconst value = parts.slice(1).join(\"=\");\n\n\t\t\treturn readValue(value);\n\t\t}\n\t}\n};\n","/**\n * Determines if an object contains a given property. It augments the provided\n * object's type to include the property.\n *\n * @returns `true` if `obj` contains a `prop` property, `false` otherwise.\n */\nexport const hasOwnProperty = <X extends object, Y extends PropertyKey>(\n\tobj: X,\n\tprop: Y,\n): obj is X & Record<Y, unknown> => {\n\treturn obj.hasOwnProperty(prop);\n};\n","import * as React from \"react\";\n\nimport { getDocument } from \"./lib/getDocument\";\nimport { hasOwnProperty } from \"./lib/hasOwnProperty\";\n\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\ntype MergePreviewDataArgs<TStaticDataNode> = {\n\tstaticDataNode: TStaticDataNode;\n\tpublishedDocumentIDs: string[];\n};\n\nconst mergePreviewData = <TStaticDataNode>({\n\tstaticDataNode,\n\tpublishedDocumentIDs,\n}: MergePreviewDataArgs<TStaticDataNode>): TStaticDataNode => {\n\tconst castedData: unknown = staticDataNode;\n\n\tif (\n\t\ttypeof castedData === \"object\" &&\n\t\tcastedData !== null &&\n\t\t!Array.isArray(castedData)\n\t) {\n\t\tif (hasOwnProperty(castedData, \"_previewable\")) {\n\t\t\tconst replacement = getDocument(castedData._previewable as string);\n\n\t\t\tif (replacement) {\n\t\t\t\treturn replacement as unknown as typeof staticDataNode;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tpublishedDocumentIDs.length > 0 &&\n\t\t\t\t\t!publishedDocumentIDs.includes(castedData._previewable as string)\n\t\t\t\t) {\n\t\t\t\t\treturn null as unknown as typeof staticDataNode;\n\t\t\t\t} else {\n\t\t\t\t\treturn staticDataNode;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst newNode = {} as TStaticDataNode;\n\n\t\t\tfor (const key in castedData) {\n\t\t\t\tnewNode[key as keyof typeof newNode] = mergePreviewData({\n\t\t\t\t\tstaticDataNode: castedData[key as keyof typeof castedData],\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newNode;\n\t\t}\n\t} else if (Array.isArray(staticDataNode)) {\n\t\treturn staticDataNode.map((element) => {\n\t\t\treturn mergePreviewData({\n\t\t\t\tstaticDataNode: element,\n\t\t\t\tpublishedDocumentIDs,\n\t\t\t});\n\t\t}) as typeof staticDataNode;\n\t} else {\n\t\treturn staticDataNode;\n\t}\n};\n\nexport const useMergePrismicPreviewData = <\n\tTStaticData extends Record<string, unknown>,\n>(\n\tstaticData: TStaticData | undefined,\n): TStaticData | undefined => {\n\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t(state) => state.isBootstrapped,\n\t);\n\tconst publishedDocumentIDs = usePrismicPreviewStore(\n\t\t(state) => state.publishedDocumentIDs,\n\t);\n\tconst documents = usePrismicPreviewStore((state) => state.documents);\n\n\treturn React.useMemo(() => {\n\t\tif (staticData) {\n\t\t\tconst hasPreviewData =\n\t\t\t\tpublishedDocumentIDs.length > 0 || Object.keys(documents).length > 0;\n\n\t\t\tif (isBootstrapped && hasPreviewData) {\n\t\t\t\treturn mergePreviewData({\n\t\t\t\t\tstaticDataNode: staticData,\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn staticData;\n\t\t\t}\n\t\t}\n\t}, [documents, publishedDocumentIDs, isBootstrapped, staticData]);\n};\n","import * as React from \"react\";\n\nimport { getActiveRepositoryName } from \"./lib/getActiveRepositoryName\";\nimport { getComponentDisplayName } from \"./lib/getComponentDisplayName\";\n\nimport type { PagePropsLike } from \"./types\";\n\nimport { useMergePrismicPreviewData } from \"./useMergePrismicPreviewData\";\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\nexport type WithPrismicPreviewProps<TProps = Record<string, unknown>> = {\n\toriginalData: TProps;\n\tisPrismicPreview: boolean;\n};\n\nexport const withPrismicPreview = <TProps extends PagePropsLike>(\n\tWrappedComponent: React.ComponentType<TProps>,\n): React.ComponentType<TProps> => {\n\tconst WithPrismicPreview = (props: TProps): JSX.Element => {\n\t\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t\t(state) => state.isBootstrapped,\n\t\t);\n\n\t\tconst [isPrismicPreview, setIsPrismicPreview] = React.useState<\n\t\t\tboolean | null\n\t\t>(null);\n\t\tconst mergedData = useMergePrismicPreviewData(props.data);\n\n\t\tReact.useEffect(() => {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tif (!isBootstrapped) {\n\t\t\t\tconst repositoryName = getActiveRepositoryName();\n\t\t\t\tsetIsPrismicPreview(!!repositoryName);\n\n\t\t\t\tif (repositoryName) {\n\t\t\t\t\timport(\"./lib/bootstrapPrismicPreview\").then((mod) =>\n\t\t\t\t\t\tmod.default(repositoryName, abortController),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn () => abortController.abort();\n\t\t}, [isBootstrapped]);\n\n\t\treturn (\n\t\t\t<WrappedComponent\n\t\t\t\t{...props}\n\t\t\t\tdata={mergedData}\n\t\t\t\toriginalData={props.data}\n\t\t\t\tisPrismicPreview={isPrismicPreview}\n\t\t\t/>\n\t\t);\n\t};\n\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst wrappedComponentName = getComponentDisplayName(WrappedComponent);\n\t\tWithPrismicPreview.displayName = `withPrismicPreview(${wrappedComponentName})`;\n\t}\n\n\treturn WithPrismicPreview;\n};\n","import { useEffect, useState, useRef } from \"react\";\n\nexport function useOnScreen(ref) {\n  // console.log(\"useOnSCreen\");\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  const observerRef = useRef(null);\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(([entry]) =>\n      setIsOnScreen(entry.isIntersecting)\n    );\n  }, []);\n  useEffect(() => {\n    observerRef.current.observe(ref.current);\n    return () => {\n      observerRef.current.disconnect();\n    };\n  }, [ref]);\n  return isOnScreen;\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../hooks/useOnScreen\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nconst AutoplayVideoCon = styled.div`\n  position: relative;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\nconst AutoplayVideoImg = styled.div`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoVideo = styled.video`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoImgCon = styled.div``;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: black;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: white;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const AutoPlayVideo = ({ srcProps, posterProps, changedSlide }) => {\n  // https://stackoverflow.com/questions/58341787/intersectionobserver-with-react-hooks\n  // https://frontend-digest.com/responsive-and-progressive-video-loading-in-react-e8753315af51\n  const autoplayVideoRef = useRef(null);\n  const isOnScreen = useOnScreen(autoplayVideoRef);\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  // console.log(\"autoplay Video Ref\");\n  // console.log(autoplayVideoRef);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n  };\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      // console.log(srcProps);\n      // console.log(\"on screen\");\n      setVideoSrcState(srcProps);\n      autoplayVideoRef.current.load();\n      autoplayVideoRef.current.play();\n    } else if (isOnScreen === false) {\n      // console.log(srcProps);\n      // console.log(\"off screen\");\n      // caches.delete();\n      // var x = srcProps;\n      // var y = x.replace(\"https://theoford-1.cdn.prismic.io/theoford-1/\", \"\");\n      // console.log(y);\n      // caches.delete(y);\n      // console.log(caches.keys());\n      // caches.keys().then(function(names) {\n      //   for (let name of names) caches.delete(name);\n      // });\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n    }\n  }, [isOnScreen]);\n  const getPosterImage = getImage(posterProps)\n  return (\n    <>\n      <AutoplayVideoCon>\n        <AutoplayVideoImgCon\n          style={{\n            opacity: isVideoLoaded ? 0 : 1,\n            position: isVideoLoaded ? \"absolute\" : \"relative\",\n            // opacity: 1,\n            // position: \"relative\",\n          }}\n        >\n          <AutoplayVideoTextCon>\n            <p>Video Loading</p>\n          </AutoplayVideoTextCon>\n\n          <AutoplayVideoImg\n            srcSet={posterProps}\n            style={{\n              opacity: isVideoLoaded ? 0 : 1,\n              position: isVideoLoaded ? \"absolute\" : \"relative\",\n              // opacity: 1,\n              // position: \"relative\",\n            }}\n          >\n            <GatsbyImage image={getPosterImage} />\n          </AutoplayVideoImg>\n        </AutoplayVideoImgCon>\n\n        <AutoplayVideoVideo\n          playsInline\n          autoPlay\n          muted\n          loop\n          ref={autoplayVideoRef}\n          // onCanPlayThrough={onLoadedData}\n          onLoadedData={onLoadedData}\n          style={{\n            opacity: isVideoLoaded ? 1 : 0,\n            position: isVideoLoaded ? \"relative\" : \"absolute\",\n            // display: isOnScreen ? \"block\" : \"none\",\n            // opacity: 0,\n            // position: \"absolute\",\n          }}\n        >\n          <source type=\"video/mp4\" src={videoSrcState} />\n        </AutoplayVideoVideo>\n      </AutoplayVideoCon>\n    </>\n  );\n};\n\n// export function autoplayVideo(query) {\n//   const [matches, setMatches] = useState(false);\n\n//   useEffect(() => {\n//     const media = window.matchMedia(query);\n//     if (media.matches !== matches) {\n//       setMatches(media.matches);\n//     }\n//     const listener = () => {\n//       setMatches(media.matches);\n//     };\n//     media.addListener(listener);\n//     return () => media.removeListener(listener);\n//   }, [matches, query]);\n\n//   return matches;\n// }\n","import { useState, useEffect } from \"react\";\n\nexport function useMediaQuery(query) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { withPreview } from \"gatsby-source-prismic\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../media-query\";\nimport Icon from \"../../../../assets/WhiteLogo.svg\";\nimport { graphql, Link } from \"gatsby\";\nimport { PageLoad } from \"../page-load\";\n\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 1;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\n\nexport const NavGrid = () => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  var [currentPage, setCurrentPage] = useState(null);\n  const LogoConRef = useRef(null);\n\n  useEffect(() => {\n    var inputString = window.location.href;\n    var outputString = inputString.replace(/.*\\//, \"\");\n    if (outputString == \"project_index\") {\n      setCurrentPage(outputString);\n    } else if (outputString == \"office\") {\n      setCurrentPage(outputString);\n    } else {\n      setCurrentPage(null);\n    }\n  }, [setCurrentPage]);\n\n  if (isPageWide) {\n    return (\n      <>\n        <LogoGridCon style={{ opacity: PageLoad ? 1 : 0 }}>\n          <LogoConCon>\n            <LogoCon ref={LogoConRef}>\n              <Link to=\"/\">\n                <Icon />\n              </Link>\n            </LogoCon>\n          </LogoConCon>\n          <MenuCon>\n            <DesktopNavP>\n              <Link to=\"/\">Select, </Link>\n              <Link\n                to=\"/project_index\"\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index,{\" \"}\n              </Link>\n              <Link\n                to=\"/office\"\n                className={currentPage == \"office\" ? \"selected\" : \"\"}\n              >\n                Office\n              </Link>\n              {/* <br></br>Instagram, Twitter */}\n            </DesktopNavP>\n          </MenuCon>\n        </LogoGridCon>\n      </>\n    );\n  }\n  if (!isPageWide) {\n    return (\n      <>\n        <LogoGridCon>\n          <MobileLeftCol>\n            <Link to=\"/\">\n              <MobileNavP>Selected</MobileNavP>\n            </Link>\n            <Link to=\"/project_index\">\n              <MobileNavP\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index\n              </MobileNavP>\n            </Link>\n          </MobileLeftCol>\n\n          <MobileRightCol>\n            <Link to=\"/office\">\n              <MobileNavP className={currentPage == \"office\" ? \"selected\" : \"\"}>\n                Office\n              </MobileNavP>\n            </Link>\n            <MobileNavP>Instagram</MobileNavP>\n          </MobileRightCol>\n        </LogoGridCon>\n      </>\n    );\n  }\n};\n","import { useState, useEffect } from \"react\";\n\nexport function PageLoad(query) {\n  const [pageLoad, setPageLoad] = useState(null);\n\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { Helmet } from \"react-helmet\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\nimport { PageLoad } from \"../components/tf/page-load\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n\n  @media (max-width: 666px) {\n    /* display: none; */\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 10px;\n    width: calc(100% - 20px);\n    margin-left: 10px;\n  }\n`;\nconst Grid2B = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 20px);\n  z-index: 20000;\n`;\nconst Col1 = styled.div`\n  grid-column: span 1;\n`;\nconst Col2 = styled.div`\n  grid-column: span 1;\n`;\nconst LogoCon = styled.div`\n  top: 12.5px;\n  mix-blend-mode: exclusion;\n  /* grid-column: span 6; */\n  /* width: calc(50% - 6.25px); // (8col) */\n  // width: calc(37.5% - 6.25px); // (6col)\n  // width: calc(25% - 6.25px); // (4col)\n  /* width: calc(62.5% - 6.25px); // (10col) */\n  /* width: calc(75% - 6.25px); // (12col) */\n  width: calc(50% - 6.25px);\n  display: inline-block;\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n  /* background-color: blue; */\n\n  .shrink {\n    width: calc(37.5% - 6.25px);\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    width: calc(75% - 6.25px);\n    margin-top: 14vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\nconst NavCon1 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  /* margin-left: 10px; */\n  margin-left: 11px;\n  /* margin-left: calc(50vw + 7px); */\n  /* margin-left: calc(25vw + 6.25px); */\n  /* margin-top: -118px; */\n  margin-top: -3px;\n  vertical-align: top;\n  mix-blend-mode: exclusion;\n  p {\n    color: #878787;\n    /* font-size: 12px; */\n  }\n  span.selected {\n    color: white;\n  }\n  span.navItem {\n    /* margin-left: 5px; */\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst NavCon2 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  margin-left: 12.5px;\n  margin-top: -3px;\n  mix-blend-mode: exclusion;\n  z-index: 300000;\n  p {\n    color: #878787;\n    /* font-size: 12px; */\n  }\n  p.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst Grid8 = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100%);\n`;\nconst Table = styled.div`\n  margin-bottom: 20px;\n  border-bottom: 1px solid black;\n`;\nconst TableRow = styled.div`\n  border-top: 1px solid black;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nconst TableTitle = styled.div`\n  grid-column: span 2;\n  p {\n    font-weight: bold;\n  }\n`;\nconst TableContent = styled.div`\n  grid-column: span 6;\n`;\nconst PageConCon = styled.div`\n  width: calc(100% - 25px);\n  margin: 12.5px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 1 */ 1fr 1fr 1fr 1fr /* 2 */ 1fr 1fr 1fr 1fr /* 3 */ 1fr 1fr 1fr 1fr /* 4 */;\n  grid-gap: 12.5px;\n`;\nconst PageCon = styled.div`\n  /* width: calc(50% - 12.5px);\n  margin-left: 25%; */\n  grid-column: 5 / span 8;\n  margin-top: 20vh;\n  @media (max-width: 666px) {\n    /* display: none; */\n    /* width: calc(100% - 20px);\n    margin-left: 10px; */\n    grid-column: span 16;\n    margin-top: 10vh;\n  }\n`;\nconst BodyTextCon = styled.div`\n  margin-bottom: 20px;\n  p {\n    line-height: 125%;\n  }\n  @media (max-width: 666px) {\n  }\n`;\nconst SquareImage = styled.div`\n  width: calc(100%);\n  margin-bottom: 12.5px;\n\n  @media (max-width: 666px) {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n`;\nconst ProjectPageAutoPlayVideoCon = styled.div`\n  margin-bottom: 12.5px;\n  @media (max-width: 666px) {\n    margin-bottom: 10px;\n  }\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n`;\nconst RelatedProjectsCon = styled.div`\n  margin-top: 100px;\n  margin-bottom: 100px;\n`;\nconst RelatedProjectsTitle = styled.p`\n  margin-bottom: 10px;\n`;\nconst RelatedProjectsProjectCon = styled.div`\n  grid-column: span 4;\n`;\nconst RelatedProjectProjectTitle = styled.p`\n  color: grey;\n  margin-top: 10px;\n`;\nconst RelatedProjectsImg = styled.div`\n  width: 100%;\n  /* filter: grayscale(100%);\n  &:hover {\n    filter: none;\n  } */\n`;\nconst Project = ({ data }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  // PageLoad;\n  const LogoConRef = useRef(null);\n  // const LogoNav = scrollPosition => {\n  //   if (isPageWide) {\n  //     return (\n  //       <>\n  //         <LogoGridCon>\n  //           <Grid2B>\n  //             <Col1>\n  //               <LogoCon ref={LogoConRef}>\n  //                 <Icon />\n  //               </LogoCon>\n  //             </Col1>\n  //             <Col2>\n  //               <NavCon1>\n  //                 <p>\n  //                   <Link to=\"/\">\n  //                     <span className=\"selected\">Select,</span>{\" \"}\n  //                   </Link>\n  //                   <Link to=\"/project_index\">\n  //                     <span className=\"navItem\">Index,</span>{\" \"}\n  //                   </Link>\n  //                   <Link to=\"/about17\">\n  //                     <span className=\"navItem\">Office</span>\n  //                   </Link>\n  //                   {/* <br></br>Instagram, Twitter */}\n  //                 </p>\n  //               </NavCon1>\n  //             </Col2>\n  //           </Grid2B>\n  //         </LogoGridCon>\n  //       </>\n  //     );\n  //   }\n  //   if (!isPageWide) {\n  //     return (\n  //       <>\n  //         <LogoGridCon>\n  //           <NavCon1>\n  //             <Link to=\"/\">\n  //               <p className=\"selected\">Selected</p>\n  //             </Link>\n  //             <Link to=\"/project_index\">\n  //               <p>\n  //                 <span className=\"navItem\">Index</span>{\" \"}\n  //               </p>\n  //             </Link>\n  //           </NavCon1>\n  //           <NavCon2>\n  //             <Link to=\"/about17\">\n  //               <p>Office</p>\n  //             </Link>\n  //             <p>Instagram</p>\n  //           </NavCon2>\n  //         </LogoGridCon>\n  //         {/* <LogoCon ref={LogoConRef}>\n  //           <Icon />\n  //         </LogoCon> */}\n  //       </>\n  //     );\n  //   }\n  // };\n  const ImgComponent = ({ srcProps, videoLoad }) => {\n    // console.log(srcProps);\n    var x = srcProps;\n    // console.log(\"x\");\n    // console.log(x);\n    var y = x.replace(\n      /\\?auto=&w=(800|1400|1600|2400|3600)&h=(800|1400|1600|2400|3600)/g,\n      \"\"\n    );\n    // console.log(\"y\");\n    // console.log(y);\n    return <SquareImage srcSet={y} />;\n    //return <SquareImage src={srcProps} />;\n  };\n  const projectBody = data.prismicProject.data.body1.map((content, index) => {\n    if (content.slice_type == \"image\") {\n      const image = getImage(content.primary.image)\n      return (\n        <>\n          {/* <Img src={content.primary.image.fluid.src} /> */}\n          <SquareImage>\n            <GatsbyImage image={image} />\n          </SquareImage>\n        </>\n      );\n    }\n    if (content.slice_type == \"text\") {\n      return (\n        <>\n          <BodyTextCon>\n            <p>{content.primary.text.text}</p>\n          </BodyTextCon>\n        </>\n      );\n    }\n    if (content.slice_type == \"video\") {\n      if (isPageWide) {\n        const posterImgProps = content.primary.index_image;\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      } else {\n        const posterImgProps = content.primary.index_image;\n        console.log(\"SMALL VIDEO\");\n        console.log(content.primary.sml_video.url);\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.sml_video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      }\n    }\n  });\n\n  // var testArray = [\"a\", \"b\", \"c\", \"d\"];\n  // var testArrayMap = testArray.map((content, index) => {\n  //   return content;\n  // });\n\n  // console.log(testArrayMap[1]);\n\n  var RelatedProjects = data.prismicProject.data.related_projects_group.map(\n    (content, index) => {\n      if (content.related_projects.document.type == \"project\") {\n        console.log(\"square project\");\n        // const project = content.related_projects.document.data.map(\n        //   (content3, index) => {\n        //     return (\n        //       //test\n        //       { content3 }\n        //     );\n        //   }\n        // );\n        const image = getImage(content.related_projects.document.data.index_preview_img);\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n                <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n\n            {/* {content.related_projects} */}\n          </>\n        );\n      } else if (\n        content.related_projects.document.type == \"film_lead_project\"\n      ) {\n        const image = getImage(content.related_projects.document.data.index_preview_img);\n        console.log(\"film project\");\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n              <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n\n            {/* {content.related_projects} */}\n          </>\n        );\n      }\n      // return (\n      //   // test\n      //   // test\n      //   { content }\n      // );\n    }\n  );\n\n  const RelatedProjects2 = () => {\n    return (\n      <Grid8>\n        {RelatedProjects[0]}\n        {RelatedProjects[1]}\n      </Grid8>\n    );\n  };\n\n  return (\n    <>\n      {/* <LogoNav></LogoNav> */}\n      <NavGrid></NavGrid>\n      <PageConCon>\n        <PageCon>\n          <Table>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Project</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.project_title.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Location</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.location.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Category</p>\n                </TableTitle>\n                <TableContent>\n                  <p>\n                    {data.prismicProject.data.categories.map(\n                      (category, index) => {\n                        return (\n                          <CategoryName key={index}>\n                            {(index ? \", \" : \"\") + category.category.slug}\n                          </CategoryName>\n                        );\n                      }\n                    )}\n                  </p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Client</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicProject.data.client.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Team</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.team.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n          </Table>\n          {projectBody}\n          <RelatedProjectsCon>\n            <RelatedProjectsTitle>Related Projects</RelatedProjectsTitle>\n            <RelatedProjects2 />\n          </RelatedProjectsCon>\n        </PageCon>\n      </PageConCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(Project);\n\nexport const query = graphql`\n  query Artists($uid: String!) {\n    prismicProject(uid: { eq: $uid }) {\n      uid\n      id\n      data {\n        project_title {\n          html\n          text\n        }\n        client {\n          html\n          text\n        }\n        location {\n          html\n          text\n        }\n        project_title {\n          html\n          text\n        }\n        team {\n          html\n          text\n        }\n        year {\n          html\n          text\n        }\n        categories {\n          category {\n            slug\n            id\n          }\n        }\n        body1 {\n          ... on PrismicProjectDataBody1Image {\n            id\n            slice_type\n            primary {\n              image {\n                gatsbyImageData\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1Text {\n            id\n            slice_type\n            primary {\n              text {\n                html\n                text\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1Video {\n            id\n            slice_type\n            primary {\n              index_image {\n                gatsbyImageData\n              }\n              sml_video {\n                url\n              }\n              video {\n                url\n              }\n            }\n          }\n        }\n        related_projects_group {\n          related_projects {\n            uid\n            document {\n              ... on PrismicProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction WhiteLogo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:#fff;}\")),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m-.62,1h254.56v52.03h-98.04v254.13h-58.48V53.03H-.62V1Z\",\"key\":1}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m382.51,80.12c24.08,0,43.07,6.95,56.98,20.85,13.9,13.91,20.85,33.61,20.85,59.12v147.06h-54.18v-138.03c0-28.09-13.91-42.14-41.71-42.14-13.76,0-25.44,4.94-35.04,14.83-9.61,9.89-14.41,23.58-14.41,41.07v124.27h-54.18V1h54.18v113.95c16.91-23.22,39.41-34.83,67.51-34.83Z\",\"key\":2}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m687.81,200.09v12.9h-165.98c2,18.92,7.96,33.18,17.85,42.79,9.89,9.61,23.15,14.4,39.77,14.4,24.65,0,41.56-10.6,50.74-31.82h52.03c-5.74,22.65-17.78,40.63-36.12,53.96-18.35,13.33-40.71,20-67.08,20-32.97,0-59.63-10.6-79.98-31.82-20.36-21.21-30.53-49.3-30.53-84.28s10.03-63.06,30.1-84.28c20.35-21.21,46.87-31.82,79.55-31.82s60.2,11.04,79.98,33.11c19.78,22.08,29.67,51.03,29.67,86.86Zm-110.08-77.83c-31.82,0-50.31,17.63-55.47,52.89h111.37c-2.3-16.34-8.32-29.24-18.06-38.7-9.75-9.46-22.36-14.19-37.84-14.19Z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m890.34,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":4}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1233.04,1v52.03h-158.24v72.24h144.05v49.88h-144.05v132.01h-58.05V1h216.29Z\",\"key\":5}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1423.96,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":6}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1581.77,81.84c4.87,0,9.31.29,13.33.86v49.88h-13.76c-20.64,0-36.48,5.23-47.51,15.7-11.04,10.47-16.55,25.87-16.55,46.22v112.66h-54.18V85.28h52.46v39.56c12.32-28.66,34.4-43,66.22-43Z\",\"key\":7}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1755.49,114.09V1h54.18v306.16h-52.46v-30.96c-16.34,24.08-39.71,36.12-70.09,36.12s-54.9-10.6-72.67-31.82c-18.06-21.21-27.09-49.3-27.09-84.28s9.03-63.78,27.09-84.71c17.48-20.92,41.71-31.39,72.67-31.39s52.6,11.33,68.37,33.97Zm-112.66,83.85c0,22.94,5.01,40.28,15.05,52.03,10.03,11.76,23.93,17.63,41.71,17.63s31.82-6.16,42.14-18.49c10.03-12.32,15.05-29.95,15.05-52.89s-5.02-40.56-15.05-52.89c-10.04-12.32-24.08-18.49-42.14-18.49s-31.32,6.45-41.49,19.35c-10.18,12.9-15.27,30.82-15.27,53.75Z\",\"key\":8})]);\n}\n\nWhiteLogo.defaultProps = {\"id\":\"Layer_1\",\"viewBox\":\"0 0 1810 322.5\"};\n\nmodule.exports = WhiteLogo;\n\nWhiteLogo.default = WhiteLogo;\n"],"names":["getActiveRepositoryName","repositoryName","decodeURIComponent","getPreviewCookie","match","getDocument","prismicId","usePrismicPreviewStore","getState","documents","readValue","value","replace","cookies","document","cookie","split","parts","slice","join","hasOwnProperty","obj","prop","mergePreviewData","_ref","staticDataNode","publishedDocumentIDs","castedData","Array","isArray","map","element","replacement","_previewable","length","includes","newNode","key","withPrismicPreview","WrappedComponent","props","isBootstrapped","state","isPrismicPreview","setIsPrismicPreview","React","mergedData","staticData","hasPreviewData","Object","keys","useMergePrismicPreviewData","data","abortController","AbortController","then","mod","default","abort","jsx","originalData","useOnScreen","ref","isOnScreen","setIsOnScreen","useState","observerRef","useRef","useEffect","current","IntersectionObserver","entry","isIntersecting","observe","disconnect","AutoplayVideoCon","styled","div","withConfig","displayName","componentId","AutoplayVideoImg","AutoplayVideoVideo","video","AutoplayVideoImgCon","breatheAnimation","keyframes","AutoplayVideoTextCon","AutoPlayVideo","srcProps","posterProps","changedSlide","autoplayVideoRef","videoSrcState","setVideoSrcState","isVideoLoaded","setIsVideoLoaded","load","play","getPosterImage","getImage","style","opacity","position","srcSet","GatsbyImage","image","playsInline","autoPlay","muted","loop","onLoadedData","type","src","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addListener","removeListener","LogoGridCon","LogoConCon","MenuCon","LogoCon","DesktopNavP","p","MobileLeftCol","MobileRightCol","MobileNavP","NavGrid","isPageWide","currentPage","setCurrentPage","LogoConRef","outputString","location","href","PageLoad","Link","to","Icon","className","pageLoad","setPageLoad","onPageLoad","console","log","readyState","addEventListener","removeEventListener","Grid8","Table","TableRow","TableTitle","TableContent","PageConCon","PageCon","BodyTextCon","SquareImage","ProjectPageAutoPlayVideoCon","CategoryName","span","RelatedProjectsCon","RelatedProjectsTitle","RelatedProjectsProjectCon","RelatedProjectProjectTitle","RelatedProjectsImg","projectBody","prismicProject","body1","content","index","slice_type","primary","text","posterImgProps","index_image","url","sml_video","RelatedProjects","related_projects_group","related_projects","index_preview_img","uid","project_title","RelatedProjects2","categories","category","slug","client","team","WhiteLogo","createElement","defaultProps","module","exports"],"sourceRoot":""}