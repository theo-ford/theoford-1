{"version":3,"file":"e50e9c162871c1d91fba5ce567a5656e16dc6783-a06778d4c00c5196e920.js","mappings":"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","sources":["webpack://studio-prismic-starter/./src/components/tf/autoplay-video.js","webpack://studio-prismic-starter/./src/components/utils/image-orientation2.js","webpack://studio-prismic-starter/./src/components/tf/index/intro.js","webpack://studio-prismic-starter/./src/components/tf/index/project-info2.js","webpack://studio-prismic-starter/./src/components/tf/index/project-info.js","webpack://studio-prismic-starter/./src/components/tf/index/two-up-carousel.js","webpack://studio-prismic-starter/./src/components/tf/img-component.js","webpack://studio-prismic-starter/./src/components/tf/index/one-up-carousel.js","webpack://studio-prismic-starter/./src/components/tf/index/single-asset-project1.js","webpack://studio-prismic-starter/./src/components/tf/index/length-context.js","webpack://studio-prismic-starter/./src/components/tf/index/slick-functions-context.js","webpack://studio-prismic-starter/./src/components/tf/index/film-carousel.js","webpack://studio-prismic-starter/./src/components/tf/index/video.js","webpack://studio-prismic-starter/./src/pages/index.js"],"sourcesContent":["import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../hooks/useOnScreen\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nconst AutoplayVideoCon = styled.div`\n  position: relative;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\nconst AutoplayVideoImg = styled.div`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoVideo = styled.video`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoImgCon = styled.div``;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: black;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: white;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const AutoPlayVideo = ({ srcProps, posterProps, changedSlide }) => {\n  // https://stackoverflow.com/questions/58341787/intersectionobserver-with-react-hooks\n  // https://frontend-digest.com/responsive-and-progressive-video-loading-in-react-e8753315af51\n  const autoplayVideoRef = useRef(null);\n  const isOnScreen = useOnScreen(autoplayVideoRef);\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  // console.log(\"autoplay Video Ref\");\n  // console.log(autoplayVideoRef);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n  };\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      // console.log(srcProps);\n      // console.log(\"on screen\");\n      setVideoSrcState(srcProps);\n      autoplayVideoRef.current.load();\n      autoplayVideoRef.current.play();\n    } else if (isOnScreen === false) {\n      // console.log(srcProps);\n      // console.log(\"off screen\");\n      // caches.delete();\n      // var x = srcProps;\n      // var y = x.replace(\"https://theoford-1.cdn.prismic.io/theoford-1/\", \"\");\n      // console.log(y);\n      // caches.delete(y);\n      // console.log(caches.keys());\n      // caches.keys().then(function(names) {\n      //   for (let name of names) caches.delete(name);\n      // });\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n    }\n  }, [isOnScreen]);\n  const getPosterImage = getImage(posterProps)\n  return (\n    <>\n      <AutoplayVideoCon>\n        <AutoplayVideoImgCon\n          style={{\n            opacity: isVideoLoaded ? 0 : 1,\n            position: isVideoLoaded ? \"absolute\" : \"relative\",\n            // opacity: 1,\n            // position: \"relative\",\n          }}\n        >\n          <AutoplayVideoTextCon>\n            <p>Video Loading</p>\n          </AutoplayVideoTextCon>\n\n          <AutoplayVideoImg\n            srcSet={posterProps}\n            style={{\n              opacity: isVideoLoaded ? 0 : 1,\n              position: isVideoLoaded ? \"absolute\" : \"relative\",\n              // opacity: 1,\n              // position: \"relative\",\n            }}\n          >\n            <GatsbyImage image={getPosterImage} />\n          </AutoplayVideoImg>\n        </AutoplayVideoImgCon>\n\n        <AutoplayVideoVideo\n          playsInline\n          autoPlay\n          muted\n          loop\n          ref={autoplayVideoRef}\n          // onCanPlayThrough={onLoadedData}\n          onLoadedData={onLoadedData}\n          style={{\n            opacity: isVideoLoaded ? 1 : 0,\n            position: isVideoLoaded ? \"relative\" : \"absolute\",\n            // display: isOnScreen ? \"block\" : \"none\",\n            // opacity: 0,\n            // position: \"absolute\",\n          }}\n        >\n          <source type=\"video/mp4\" src={videoSrcState} />\n        </AutoplayVideoVideo>\n      </AutoplayVideoCon>\n    </>\n  );\n};\n\n// export function autoplayVideo(query) {\n//   const [matches, setMatches] = useState(false);\n\n//   useEffect(() => {\n//     const media = window.matchMedia(query);\n//     if (media.matches !== matches) {\n//       setMatches(media.matches);\n//     }\n//     const listener = () => {\n//       setMatches(media.matches);\n//     };\n//     media.addListener(listener);\n//     return () => media.removeListener(listener);\n//   }, [matches, query]);\n\n//   return matches;\n// }\n","export const ImageOrientation2 = image => {\n  var x = image.dimensions.height / image.dimensions.width;\n  const isImageSmlPortrait = x > 1.2;\n  const isImageLrgPortrait = x > 1.7;\n  const isImageLandscape = image.dimensions.width > image.dimensions.height;\n  const isImageSquare = image.dimensions.width === image.dimensions.height;\n\n  if (isImageLrgPortrait === true) {\n    return \"lrg-portrait\";\n  } else if (isImageSmlPortrait === true) {\n    return \"sml-portrait\";\n  } else if (isImageSquare === true) {\n    // console.log(\"square\");\n    return \"square\";\n  } else {\n    // console.log(\"portrait\");\n    return \"landscape\";\n  }\n};\n","import styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\n\nconst IntroCon = styled.div`\n  margin-top: 10px;\n  /* transition: 1s ease; */\n  span.grey {\n    color: #878787;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\nconst AboutCon = styled.div`\n  grid-column: span 6;\n`;\nconst LocationCon = styled.div`\n  grid-column: 9 / span 5;\n  span.grey {\n    color: #878787;\n  }\n`;\nconst ContactCon = styled.div`\n  grid-column: 15 / span 2;\n`;\n\nexport const Intro = () => {\n  return (\n    <IntroCon>\n      <Grid16>\n        <AboutCon>\n          <p>\n            The design office of Theo Ford. Specialising in graphic design, art\n            direction, moving-image and web development. Recent commisions and\n            collaborations include identites for{\" \"}\n            <span className=\"grey\">Tesla</span>, adverts for{\" \"}\n            <span className=\"grey\">American Apparel</span>, and printed matter\n            for <span className=\"grey\">COS</span>.<br />\n          </p>\n        </AboutCon>\n        <LocationCon>\n          <p>\n            Current Location: <span className=\"grey\">New York,</span> London,\n            <span className=\"grey\">\n              {\" \"}\n              Los Angeles, Beijing, Stockholm, Gothenburg, Glasgow, Falmouth,\n              Philadelphia.\n            </span>{\" \"}\n            2023/03/23 21:32.\n          </p>\n        </LocationCon>\n        <ContactCon>\n          <p class=\"\">\n            <span>\n              info@theoford.com\n              <br />\n              +44 7599 759 529\n              <br />\n              @tf.public\n            </span>\n          </p>\n        </ContactCon>\n      </Grid16>\n    </IntroCon>\n  );\n};\n","import styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport { useMediaQuery } from \"../media-query\";\n\n/* - - - - - PROJECT INFO - - - - - */\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\nconst Grid2 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 10px;\n  margin-left: 10px;\n  grid-row-gap: 0;\n  width: calc(100% - 20px);\n  z-index: 20000;\n`;\n\nconst ProjectInfoCon = styled.div`\n  height: 80px;\n  margin-top: 8px;\n  @media (max-width: 666px) {\n    margin-top: 4px;\n  }\n`;\nconst ProjectTitleCon = styled.div`\n  grid-column: span 4;\n\n  @media (max-width: 666px) {\n    grid-column: span 1;\n    a {\n      color: #d4d4d4;\n    }\n  }\n`;\nconst ProjectLocationYearCon = styled.div`\n  grid-column: span 4;\n  @media (max-width: 666px) {\n    grid-column: span 1;\n  }\n`;\n\nconst ProjectIndexAbout = styled.div`\n  grid-column: span 4;\n  p {\n    font-size: 12px;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst ProjectLink = styled.div`\n  grid-column: 15 / span 2;\n  a {\n    color: #d4d4d4;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\nexport const ProjectInfo2 = ({ data2, uid }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  if (isPageWide) {\n    return (\n      <ProjectInfoCon>\n        <Grid16>\n          <ProjectTitleCon>\n            <Link to={uid}>{data2.project_title.text}</Link>\n          </ProjectTitleCon>\n          <ProjectLocationYearCon>\n            <p>{data2.location.text}</p>\n            <p>{data2.year.text}</p>\n          </ProjectLocationYearCon>\n          <ProjectIndexAbout>\n            <p>{data2.homepage_intro.text}</p>\n          </ProjectIndexAbout>\n          <ProjectLink>\n            <Link to={uid}>More Info</Link>\n          </ProjectLink>\n        </Grid16>\n      </ProjectInfoCon>\n    );\n  } else {\n    return (\n      <ProjectInfoCon>\n        <Grid2>\n          <ProjectTitleCon>\n            <Link to={uid}>{data2.project_title.text}</Link>\n          </ProjectTitleCon>\n          <ProjectLocationYearCon>\n            <p>{data2.location.text}</p>\n            <p>{data2.year.text}</p>\n          </ProjectLocationYearCon>\n        </Grid2>\n      </ProjectInfoCon>\n    );\n  }\n};\n","import styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport { useMediaQuery } from \"../media-query\";\n\n/* - - - - - PROJECT INFO - - - - - */\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\nconst Grid2 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 10px;\n  margin-left: 10px;\n  grid-row-gap: 0;\n  width: calc(100% - 20px);\n  z-index: 20000;\n`;\n\nconst ProjectInfoCon = styled.div`\n  height: 80px;\n  margin-top: 8px;\n  @media (max-width: 666px) {\n    margin-top: 4px;\n  }\n`;\nconst ProjectTitleCon = styled.div`\n  grid-column: span 4;\n\n  @media (max-width: 666px) {\n    grid-column: span 1;\n    a {\n      color: #d4d4d4;\n    }\n  }\n`;\nconst ProjectLocationYearCon = styled.div`\n  grid-column: span 4;\n  @media (max-width: 666px) {\n    grid-column: span 1;\n  }\n`;\n\nconst ProjectIndexAbout = styled.div`\n  grid-column: span 4;\n  p {\n    font-size: 12px;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\nconst ProjectLink = styled.div`\n  grid-column: 15 / span 2;\n  a {\n    color: #d4d4d4;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\nexport const ProjectInfo = ({\n  title,\n  year,\n  location,\n  uid,\n  homepage_intro,\n  client,\n}) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  if (isPageWide) {\n    return (\n      <ProjectInfoCon>\n        <Grid16>\n          <ProjectTitleCon>\n            <Link to={uid}>{title}</Link>\n          </ProjectTitleCon>\n          <ProjectLocationYearCon>\n            <p>{location}</p>\n            <p>{year}</p>\n          </ProjectLocationYearCon>\n          <ProjectIndexAbout>\n            <p>{homepage_intro}</p>\n          </ProjectIndexAbout>\n          <ProjectLink>\n            <Link to={uid}>More Info</Link>\n          </ProjectLink>\n        </Grid16>\n      </ProjectInfoCon>\n    );\n  } else {\n    return (\n      <ProjectInfoCon>\n        <Grid2>\n          <ProjectTitleCon>\n            <Link to={uid}>{title}</Link>\n          </ProjectTitleCon>\n          <ProjectLocationYearCon>\n            <p>{location}</p>\n            <p>{year}</p>\n          </ProjectLocationYearCon>\n        </Grid2>\n      </ProjectInfoCon>\n    );\n  }\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport Slider from \"react-slick\";\nimport \"../../slick/slick.css\";\nimport \"../../slick/slick-theme.css\";\n\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\nconst TwoUpCarouselCounterNextCon = styled.div`\n  margin-bottom: 8px;\n`;\nconst TwoUpCarouselCon = styled.div`\n  margin-left: 12.5px;\n  cursor: e-resize;\n`;\nconst TwoUpCarouselCounterOneCon = styled.div`\n  grid-column: span 8;\n`;\nconst TwoUpCarouselCounterTwoCon = styled.div`\n  grid-column: span 6;\n`;\nconst TwoUpCarouselNextButtonCon = styled.div`\n  grid-column: span 2;\n  p {\n    color: #cfcfcf;\n  }\n`;\n\nexport const TwoUpProjectCarousel = ({\n  children,\n\n  projectLength,\n}) => {\n  // COUNTER\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [totalSlides, setTotalSlides] = useState(null);\n  useEffect(() => {\n    setCurrentSlide(0);\n  }, []);\n  useEffect(() => {\n    setTotalSlides(projectLength);\n  }, []);\n  const updateCurrentSlide = index => {\n    if (currentSlide !== index) {\n      setCurrentSlide(index);\n    }\n  };\n\n  // SLIDER SETTINGS\n  const settings = {\n    infinite: true,\n    // speed: 200,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    accessibility: true,\n    dots: false,\n    arrows: false,\n    swipe: false,\n    swipeToSlide: false,\n    adaptiveHeight: false,\n  };\n\n  // SLIDESHOW FUNCTION\n  const ProjectCarouselRef = React.useRef(null);\n\n  const [changedSlide, setChangedSlide] = useState(false);\n\n  function projectCarouselNextImg() {\n    ProjectCarouselRef.current.slickNext();\n    setChangedSlide(true);\n  }\n  return (\n    <>\n      <TwoUpCarouselCounterNextCon>\n        <Grid16>\n          <TwoUpCarouselCounterOneCon>\n            {/* <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p> */}\n            <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p>\n          </TwoUpCarouselCounterOneCon>\n          <TwoUpCarouselCounterTwoCon>\n            {/* <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p> */}\n            <p>{(\"0\" + (currentSlide + 2)).slice(-2)}</p>\n          </TwoUpCarouselCounterTwoCon>\n          <TwoUpCarouselNextButtonCon>\n            {projectLength > 1 ? (\n              <>\n                <p\n                  onClick={projectCarouselNextImg}\n                  style={{ display: \"inline-block\" }}\n                >\n                  Next\n                </p>\n                {/* <PVideoLoadingNext>&nbsp; (Video Loading)</PVideoLoadingNext> */}\n              </>\n            ) : (\n              \"\"\n            )}\n          </TwoUpCarouselNextButtonCon>\n        </Grid16>\n      </TwoUpCarouselCounterNextCon>\n\n      <TwoUpCarouselCon onClick={projectCarouselNextImg}>\n        <Slider\n          {...settings}\n          ref={ProjectCarouselRef}\n          afterChange={index => updateCurrentSlide(index)}\n        >\n          {React.Children.map(children, child =>\n            React.cloneElement(child, {\n              changedSlide: changedSlide,\n            })\n          )}\n        </Slider>\n      </TwoUpCarouselCon>\n    </>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\n\nconst SquareImage = styled.img`\n  width: calc(100% - 12.5px);\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\n\nexport const ImgComponent = ({ srcProps, videoLoad }) => {\n    // console.log(srcProps);\n    var x = srcProps;\n    // console.log(\"x\");\n    // console.log(x);\n    var y = x.replace(\n      /\\?auto=&w=(800|1400|1600|2400|3600)&h=(800|1400|1600|2400|3600)/g,\n      \"\"\n    );\n    // console.log(\"y\");\n    // console.log(y);\n    return <SquareImage srcSet={y} />;\n    //return <SquareImage src={srcProps} />;\n  };","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport Slider from \"react-slick\";\nimport \"../../slick/slick.css\";\nimport \"../../slick/slick-theme.css\";\n\nconst Grid2 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 10px;\n  margin-left: 10px;\n  grid-row-gap: 0;\n  width: calc(100% - 20px);\n  z-index: 20000;\n`;\n\nconst CounterCon = styled.div`\n  grid-column: span 1;\n  margin-bottom: 5px;\n`;\n\nconst NextButtonCon = styled.div`\n  grid-column: span 1;\n  p {\n    color: #cfcfcfcf;\n  }\n`;\nconst SquareCarouselCon = styled.div`\n  grid-column: span 2;\n`;\n\nexport const ProjectCarousel = ({\n  children,\n\n  projectLength,\n  videoLoad,\n}) => {\n  // SWIPE GESTURE\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchEnd, setTouchEnd] = useState(null);\n  // the required distance between touchStart and touchEnd to be detected as a swipe\n  const minSwipeDistance = 50;\n  const onTouchStart = e => {\n    setTouchEnd(null); // otherwise the swipe is fired even with usual touch events\n    setTouchStart(e.targetTouches[0].clientX);\n  };\n  const onTouchMove = e => setTouchEnd(e.targetTouches[0].clientX);\n  const onTouchEnd = () => {\n    if (!touchStart || !touchEnd) return;\n    const distance = touchStart - touchEnd;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n    if (isLeftSwipe || isRightSwipe)\n      // console.log(\"swipe\", isLeftSwipe ? \"left\" : \"right\");\n      // add your conditional logic here\n      ProjectCarouselRef.current.slickNext();\n  };\n\n  // COUNTER\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [totalSlides, setTotalSlides] = useState(null);\n  useEffect(() => {\n    setCurrentSlide(0);\n  }, []);\n  useEffect(() => {\n    setTotalSlides(projectLength);\n  }, []);\n  const updateCurrentSlide = index => {\n    if (currentSlide !== index) {\n      setCurrentSlide(index);\n    }\n  };\n\n  // SLIDER SETTINGS\n  const settings = {\n    infinite: true,\n    speed: 0,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    accessibility: true,\n    dots: false,\n    arrows: false,\n    swipe: false,\n    swipeToSlide: false,\n  };\n\n  // SLIDESHOW FUNCTION\n  const ProjectCarouselRef = React.useRef(null);\n\n  const [changedSlide, setChangedSlide] = useState(false);\n\n  function projectCarouselNextImg() {\n    ProjectCarouselRef.current.slickNext();\n    setChangedSlide(true);\n  }\n  return (\n    <>\n      <Grid2>\n        <CounterCon>\n          <p>{(\"0\" + (currentSlide + 1)).slice(-2)}</p>\n        </CounterCon>\n        <NextButtonCon>\n          {projectLength > 1 ? (\n            <>\n              <p\n                onClick={projectCarouselNextImg}\n                style={{ display: \"inline-block\" }}\n              >\n                Next\n              </p>\n              {/* <PVideoLoadingNext>&nbsp; (Video Loading)</PVideoLoadingNext> */}\n            </>\n          ) : (\n            \"\"\n          )}\n        </NextButtonCon>\n      </Grid2>\n      <Grid2>\n        <SquareCarouselCon\n          onClick={projectCarouselNextImg}\n          onTouchStart={onTouchStart}\n          onTouchMove={onTouchMove}\n          onTouchEnd={onTouchEnd}\n        >\n          <Slider\n            {...settings}\n            ref={ProjectCarouselRef}\n            afterChange={index => updateCurrentSlide(index)}\n          >\n            {React.Children.map(children, child =>\n              React.cloneElement(child, {\n                changedSlide: changedSlide,\n              })\n            )}\n          </Slider>\n        </SquareCarouselCon>\n      </Grid2>\n    </>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\n\nconst Grid16 = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n`;\nconst SingleImgProjectAssetCon = styled.div`\n  grid-column: span 8;\n`;\n\nexport const SingleAssetProject = ({ children }) => {\n  return (\n    <Grid16>\n      <SingleImgProjectAssetCon>{children}</SingleImgProjectAssetCon>\n    </Grid16>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\n\nconst CarouselLengthContext = createContext();\nexport default CarouselLengthContext;\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\n\nconst CarouselIndexClicked = createContext({\n  slideGoTo: 0,\n  setSlideGoTo: () => {},\n});\nexport default CarouselIndexClicked;\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport Slider from \"react-slick\";\nimport \"../../slick/slick.css\";\nimport \"../../slick/slick-theme.css\";\nimport { ImageOrientation2 } from \"../../utils/image-orientation2\";\nimport { useOnScreen } from \"../../hooks/useOnScreen\";\nimport CarouselLengthContext from \"./length-context\";\nimport CarouselIndexClicked from \"./slick-functions-context.js\";\n\n/* - - - - - FILM LEAD CAROUSEL - - - - - */\nconst VideoProjectCon = styled.div``;\nconst VideoCarouselCon = styled.div`\n  width: 100%;\n  height: 110vh;\n  background-color: black;\n  @media (max-width: 666px) {\n  }\n`;\nconst PaginationControlP = styled.p`\n  display: inline-block;\n  color: #545454;\n  font-size: 12px;\n  &.active {\n    color: white;\n  }\n`;\n\n/* - - - - - VIDEO WITH CONTROLS IMG - - - - - */\n\nexport const FilmLeadCarousel2 = ({ children }) => {\n  const FilmsLeadCarouselRef = React.useRef(null);\n  const FilmsLeadCarouselRefCon = React.useRef(null);\n  const [carouselLength, setCarouselLength] = useState(children.length);\n  const [slideGoTo, setSlideGoTo] = useState(0);\n  const value = useMemo(() => ({ slideGoTo, setSlideGoTo }), [slideGoTo]);\n\n  const settings = {\n    infinite: true,\n    speed: 0,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    accessibility: true,\n    dots: false,\n    arrows: false,\n    swipe: false,\n    swipeToSlide: false,\n    className: \"films-slider\",\n  };\n\n  useEffect(() => {\n    FilmsLeadCarouselRef.current.slickGoTo(slideGoTo);\n  }, [slideGoTo]);\n\n  return (\n    <>\n      <CarouselLengthContext.Provider value={carouselLength}>\n        <CarouselIndexClicked.Provider value={value}>\n          {useMemo(\n            () => (\n              <>\n                <VideoProjectCon ref={FilmsLeadCarouselRefCon}>\n                  <VideoCarouselCon>\n                    <Slider {...settings} ref={FilmsLeadCarouselRef}>\n                      {children}\n                    </Slider>\n                  </VideoCarouselCon>\n                </VideoProjectCon>\n              </>\n            ),\n            []\n          )}\n        </CarouselIndexClicked.Provider>\n      </CarouselLengthContext.Provider>\n    </>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport CarouselLengthContext from \"./length-context\";\nimport CarouselIndexClicked from \"./slick-functions-context.js\";\n// import PauseButton from \"../../../../public/icons/Pause.png\";\n// import PlayButton from \"../../../../public/icons/Play.png\";\n// import PauseButton from \"../../../../Pause.png\";\n// import PlayButton from \"../../../../Play.png\";\n// import PauseButton from \"../../../../Pause.png\";\nimport { useOnScreen } from \"../../hooks/useOnScreen\";\nimport { ImageOrientation2 } from \"../../utils/image-orientation2\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\"\n/* - - - - - VIDEO WITH CONTROLS IMG - - - - - */\n\nconst VideoCon = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  margin-left: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 25px);\n  z-index: 20000;\n  align-items: center;\n  height: 110vh;\n  @media (max-width: 666px) {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n    grid-column-gap: 10px;\n    margin-left: 10px;\n    grid-row-gap: 0;\n    width: calc(100% - 20px);\n    z-index: 20000;\n    align-items: center;\n    height: 110vh;\n  }\n`;\nconst VideoConInner = styled.div`\n  &.sml-portrait {\n    grid-column: 10 / span 6;\n  }\n  &.lrg-portrait {\n    grid-column: 10 / span 6;\n  }\n  &.square {\n    grid-column: 9 / span 8;\n  }\n  &.landscape {\n    grid-column: 7 / span 12;\n  }\n  @media (max-width: 666px) {\n    &.sml-portrait {\n      grid-column: 5 / span 16;\n    }\n    &.lrg-portrait {\n      grid-column: 6 / span 14;\n    }\n    &.square {\n      grid-column: 4 / span 18;\n    }\n    &.landscape {\n      grid-column: span 24;\n    }\n  }\n`;\nconst VideoWithContolsSC = styled.video`\n  width: 100%;\n`;\nconst ControlsCon = styled.div`\n  z-index: 1;\n  &.landscape {\n    width: 50%;\n  }\n`;\nconst PlayButtonCon = styled.div`\n  margin-top: 5px;\n  width: calc(50%);\n  display: inline-block;\n  p {\n    color: #d4d4d4;\n    font-size: 12px;\n  }\n`;\nconst PaginationCon = styled.div`\n  margin-top: 5px;\n  width: calc(50%);\n  display: inline-block;\n`;\nconst PaginationControlP = styled.p`\n  display: inline-block;\n  color: #545454;\n  font-size: 12px;\n  &.active {\n    color: white;\n  }\n`;\nconst PauseButtonImg = styled.div`\n  width: 8px;\n  display: inline-block !important;\n  margin-right: 5px;\n`;\nconst PlayButtonImg = styled.div`\n  width: 8px;\n  margin-right:5px;\n  display: inline-block !important;\n`;\nconst VideoControlsImgCon = styled.div``;\nconst VideoControlsImg = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const VideoWithControlsImg2 = ({ srcProps, posterProps, img }) => {\n  const videoWithControlsRef = useRef(null);\n  const imgRef = useRef(null);\n  const isOnScreen = useOnScreen(videoWithControlsRef);\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n  const [isPlaying, setPlayingStatus] = useState(false);\n  const [hasStartedPlaying, setHasStartedPlaying] = useState(false);\n  const carouselLength = useContext(CarouselLengthContext);\n  // const carouselLength = 4;\n  const { slideGoTo, setSlideGoTo } = useContext(CarouselIndexClicked);\n  const value = useMemo(() => ({ slideGoTo, setSlideGoTo }), [slideGoTo]);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n  };\n\n  const Pagination = ({ carouselLength }) => {\n    const array = [...Array(carouselLength)];\n    const handleClick = index => {\n      setSlideGoTo(index);\n    };\n    const items = array.map((child, index) => {\n      return (\n        <>\n          <CarouselLengthContext.Provider value={carouselLength}>\n            <CarouselIndexClicked.Provider value={value}>\n              <PaginationControlP\n                className={slideGoTo == index ? \"active\" : \"\"}\n                onClick={() => handleClick(index)}\n              >\n                {(\"0\" + (index + 1)).slice(-2)}\n              </PaginationControlP>\n              {\"    \"}\n            </CarouselIndexClicked.Provider>\n          </CarouselLengthContext.Provider>\n        </>\n      );\n    });\n    return <div>{items}</div>;\n  };\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      // console.log(srcProps);\n      // console.log(\"on screen\");\n      // to load the video on scroll\n      // comment out below two lines to make it load on click, test hosted\n      setVideoSrcState(srcProps);\n      videoWithControlsRef.current.load();\n    } else if (isOnScreen === false) {\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n    }\n  }, [isOnScreen, videoSrcState]);\n\n  const playVideo = () => {\n    // to load the video on play\n    // setVideoSrcState(srcProps);\n    // videoWithControlsRef.current.load();\n    videoWithControlsRef.current.play();\n\n    setPlayingStatus(true);\n    setHasStartedPlaying(true);\n  };\n  const pauseVideo = () => {\n    videoWithControlsRef.current.pause();\n    setPlayingStatus(false);\n  };\n  // console.log(\"POSTER PROPS\");\n  // console.log(posterProps);\n  const getPosterImg = getImage(posterProps)\n  return (\n    <>\n      {/* <CarouselLengthContext.Provider> */}\n      <VideoCon>\n        <VideoConInner className={ImageOrientation2(img)}>\n          <VideoControlsImgCon\n            style={{\n              opacity: hasStartedPlaying ? 0 : 1,\n              position: hasStartedPlaying ? \"absolute\" : \"relative\",\n            }}\n          >\n            <VideoControlsImg\n              ref={imgRef}\n              style={{\n                opacity: hasStartedPlaying ? 0 : 1,\n                position: hasStartedPlaying ? \"absolute\" : \"relative\",\n              }}\n            >\n              <GatsbyImage image={getPosterImg} />\n            </VideoControlsImg>\n          </VideoControlsImgCon>\n          <VideoWithContolsSC\n            playsInline\n            muted\n            loop\n            preload=\"auto\"\n            ref={videoWithControlsRef}\n            onLoadedData={onLoadedData}\n            style={{\n              zIndex: 0,\n              opacity: hasStartedPlaying ? 1 : 0,\n              position: hasStartedPlaying ? \"relative\" : \"absolute\",\n              // https://stackoverflow.com/questions/3680429/click-through-div-to-underlying-elements\n              // click through video to controls\n              pointerEvents: \"none\",\n            }}\n          >\n            <source type=\"video/mp4\" src={videoSrcState} />\n          </VideoWithContolsSC>\n          <ControlsCon>\n            <PaginationCon>\n              <Pagination carouselLength={carouselLength}></Pagination>\n            </PaginationCon>\n            <PlayButtonCon\n              style={{\n                zIndex: 1,\n              }}\n            >\n              {isPlaying ? (\n                <p onClick={pauseVideo}>\n                  {/* <PauseButtonImg src={PauseButton} /> */}\n                  <PauseButtonImg>\n                  <StaticImage src={\"../../../img/pause.png\"} />  \n                  </PauseButtonImg>                  \n                  Pause\n                </p>\n              ) : (\n                <p onClick={playVideo}>\n                  <PlayButtonImg>\n                  <StaticImage src={\"../../../img/play.png\"} />  \n                  </PlayButtonImg>\n                   Play\n                </p>\n              )}\n            </PlayButtonCon>\n          </ControlsCon>\n        </VideoConInner>\n      </VideoCon>\n      {/* </CarouselLengthContext.Provider> */}\n    </>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { graphql, Link, useScrollRestoration } from \"gatsby\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport { Helmet } from \"react-helmet\";\nimport \"../components/styles/index.css\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\n// import Icon from \"../../assets/White Logo No TF.svg\";\nimport Slider from \"react-slick\";\nimport \"../components/slick/slick.css\";\nimport \"../components/slick/slick-theme.css\";\nimport { useOnScreen } from \"../components/hooks/useOnScreen\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\nimport { ImageOrientation2 } from \"../components/utils/image-orientation2\";\nimport { PageLoad } from \"../components/tf/page-load\";\nimport { Intro } from \"../components/tf/index/intro\";\nimport { ProjectInfo } from \"../components/tf/index/project-info\";\nimport { ProjectInfo2 } from \"../components/tf/index/project-info2\";\nimport { ImgComponent } from \"../components/tf/img-component\";\nimport { TwoUpProjectCarousel } from \"../components/tf/index/two-up-carousel\";\nimport { ProjectCarousel } from \"../components/tf/index/one-up-carousel\";\nimport { SingleAssetProject } from \"../components/tf/index/single-asset-project1\";\nimport { FilmLeadCarousel2 } from \"../components/tf/index/film-carousel\";\nimport { VideoWithControlsImg2 } from \"../components/tf/index/video\";\nimport CarouselLengthContext from \"../components/tf/index/length-context\";\nimport CarouselIndexClicked from \"../components/tf/index/slick-functions-context.js\";\n// import { SingleAssetProject2 } from \"../components/tf/index/single-asset-project2\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: white;\n    overflow-x: clip;\n    max-width: 100vw;\n  }\n  body {\n    // https://stackoverflow.com/questions/47095596/body-overflow-x-hidden-breaks-position-sticky\n    background-color: white;\n    overflow-x: clip;\n    max-width: 100vw;\n    @media (min-width: 666px) {\n      position: fixed;\n    }    \n  }\n`;\n\n/* - - - - - INTRO  - - - - -  */\nconst IntroConCon = styled.div``;\n\n/* NAV */\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\n\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\nconst LogoConMobile = styled.div`\n  display: none;\n  mix-blend-mode: exclusion;\n  @media (max-width: 666px) {\n    display: block;\n    width: calc(75% - 6.25px);\n    margin-top: 14vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\n\nconst NavSpacer = styled.div`\n  height: 25vh;\n  width: 100%;\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* - - - - - PAGE  - - - - - */\nconst PageCon = styled.div`\n  margin-top: 30vh;\n`;\n\nconst ProjectCon = styled.div`\n  margin-bottom: 100px;\n  @media (max-width: 666px) {\n    margin-bottom: 200px;\n  }\n`;\n\n/* - - - - - INDEX AUTOPLAT VIDEO FORMATTING - - - - - */\n/* - - perhaps in the autoplay video component you put a conditional saying if page index apply this  - - */\nconst IndexAutoPlayVideoCon = styled.div`\n  position: relative;\n  width: calc(100% - 12.5px) !important;\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\n\n/* - - - - - - IMAGE - - - - - - - */\nconst SquareImg = styled.div`\n  width: calc(100% - 12.5px) !important;\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\n\nconst Index = ({ data }) => {\n  const [pageLoad, setPageLoad] = useState(null);\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  const LogoConRef2 = useRef(null);\n\n  // page load useEffect\n  // https://stackoverflow.com/questions/57729504/is-there-a-way-to-tell-when-your-react-app-page-is-done-loading-the-page-asset\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n\n  const FourSeconds = setTimeout(overflowAllow, 4000);\n\n  function overflowAllow() {\n    document.body.style.position = \"relative\";\n  }\n\n  const NavIndexGridIndex = () => {\n    let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n    var [currentPage, setCurrentPage] = useState(null);\n    const LogoConRef = useRef(null);\n\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      // console.log(position);\n      if (position > 25) {\n        // console.log(\"greater than 100\");\n        LogoConRef.current.classList.add(\"shrink\");\n      } else if (position < 25) {\n        // console.log(\"less than 100\");\n        LogoConRef.current.classList.remove(\"shrink\");\n      }\n    };\n    // scroll use effect\n    useEffect(() => {\n      window.addEventListener(\"scroll\", handleScroll, {\n        passive: true,\n      });\n\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n\n    if (isPageWide) {\n      return (\n        <>\n          <LogoGridCon style={{ opacity: pageLoad ? 1 : 0 }}>\n            <LogoConCon>\n              <LogoCon ref={LogoConRef}>\n                <Link to=\"/\">\n                  <Icon />\n                </Link>\n              </LogoCon>\n            </LogoConCon>\n            <MenuCon style={{ opacity: pageLoad ? 1 : 0 }}>\n              <DesktopNavP>\n                <Link to=\"/\" className=\"selected\">\n                  Select,{\" \"}\n                </Link>\n                <Link to=\"/project_index\">Index, </Link>\n                <Link to=\"/office\">Office</Link>\n                {/* <br></br>Instagram, Twitter */}\n              </DesktopNavP>\n            </MenuCon>\n          </LogoGridCon>\n        </>\n      );\n    }\n    if (!isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <MobileLeftCol>\n              <Link to=\"/\">\n                <MobileNavP className=\"selected\">Selected</MobileNavP>\n              </Link>\n              <Link to=\"/project_index\">\n                <MobileNavP>Index</MobileNavP>\n              </Link>\n            </MobileLeftCol>\n\n            <MobileRightCol>\n              <Link to=\"/office\">\n                <MobileNavP>Office</MobileNavP>\n              </Link>\n              <MobileNavP>Instagram</MobileNavP>\n            </MobileRightCol>\n          </LogoGridCon>\n          <LogoConMobile ref={LogoConRef}>\n            <Icon />\n          </LogoConMobile>\n        </>\n      );\n    }\n  };\n\n  const overview = data.prismicFeaturedProjects.data.project_relationship_group.map(\n    (content, index) => {\n      if (\n        content.project_relationship_field.document.type == \"film_lead_project\"\n      ) {\n        const filmLeadProject = content.project_relationship_field.document.data.body.map(\n          (content_three, index) => {\n            if (content_three.slice_type == \"video_with_play_button\") {\n              const posterImage = content_three.primary.video_thumbnail;\n              return (\n                <VideoWithControlsImg2\n                  srcProps={content_three.primary.video_with_play_button.url}\n                  posterProps={posterImage}\n                  img={posterImage}\n                ></VideoWithControlsImg2>\n              );\n            }\n          }\n        );\n        return (\n          <>\n            <ProjectCon>\n              <FilmLeadCarousel2>\n                {React.Children.map(filmLeadProject, child =>\n                  React.cloneElement(child, {})\n                )}\n              </FilmLeadCarousel2>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          </>\n        );\n      }\n      if (content.project_relationship_field.document.type == \"project\") {\n        const projectLength =\n          content.project_relationship_field.document.data.body.length;\n        const project = content.project_relationship_field.document.data.body.map(\n          (content_four, index) => {\n            if (content_four.slice_type == \"image\") {\n              // console.log(\"SQUARE IMAGE\");\n              const image = getImage(content_four.primary.image)\n              // console.log(image);\n              return (\n                // <ImgComponent\n                //   srcProps={content_four.primary.image.gatsbyImageData.images.sources.srcSet}\n                // />\n                <SquareImg>\n                  <GatsbyImage image={image} />\n                </SquareImg>\n                \n              );\n            }\n            if (content_four.slice_type == \"video\") {\n              if (isPageWide) {\n                // postImage = getImage(content_four.primary.index_image)\n                const posterImg = content_four.primary.index_image;\n                return (\n                  <IndexAutoPlayVideoCon>\n                    <AutoPlayVideo\n                      srcProps={content_four.primary.video.url}\n                      posterProps={posterImg}\n                    />\n                  </IndexAutoPlayVideoCon>\n                );\n              } else {\n                const posterImg = content_four.primary.index_image;\n                return (\n                  <AutoPlayVideo\n                    srcProps={content_four.primary.sml_video.url}\n                    posterProps={posterImg}\n                  />\n                );\n              }\n            }\n          }\n        );\n        if (isPageWide && projectLength > 1) {\n          return (\n            <ProjectCon>\n              <TwoUpProjectCarousel\n                projectLength={\n                  content.project_relationship_field.document.data.body.length\n                }\n              >\n                {React.Children.map(project, child =>\n                  React.cloneElement(child, {\n                    changedSlide: false,\n                  })\n                )}\n                {/* {project} */}\n              </TwoUpProjectCarousel>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          );\n        } else if (isPageWide && projectLength <= 1) {\n          return (\n            <>\n              <ProjectCon>\n                <SingleAssetProject>{project}</SingleAssetProject>\n                <ProjectInfo2\n                  data2={content.project_relationship_field.document.data}\n                  uid={content.project_relationship_field.document.uid}\n                ></ProjectInfo2>\n              </ProjectCon>\n            </>\n          );\n        } else if (isPageWide == false) {\n          return (\n            <ProjectCon>\n              <ProjectCarousel projectLength={projectLength}>\n                {React.Children.map(project, child =>\n                  React.cloneElement(child, {\n                    changedSlide: false,\n                  })\n                )}\n                {/* {project} */}\n              </ProjectCarousel>\n              <ProjectInfo2\n                data2={content.project_relationship_field.document.data}\n                uid={content.project_relationship_field.document.uid}\n              ></ProjectInfo2>\n            </ProjectCon>\n          );\n        }\n      }\n    }\n  );\n\n  return (\n    <>\n      <GlobalStyle />\n      <Helmet>\n        <head></head>\n        <title>(10) Pagination 1</title>\n      </Helmet>\n      <IntroConCon style={{ opacity: pageLoad ? 1 : 0 }}>\n        <Intro></Intro>\n      </IntroConCon>\n\n      <NavSpacer></NavSpacer>\n      <NavIndexGridIndex></NavIndexGridIndex>\n\n      <PageCon style={{ opacity: pageLoad ? 1 : 0 }}>{overview}</PageCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(Index);\n\nexport const query = graphql`\n  query IndexQuery40 {\n    prismicFeaturedProjects {\n      data {\n        project_relationship_group {\n          project_relationship_field {\n            document {\n              ... on PrismicProject {\n                id\n                type\n                uid\n                data {\n                  project_title {\n                    html\n                    text\n                  }\n                  location {\n                    html\n                    text\n                  }\n                  year {\n                    html\n                    text\n                  }\n                  homepage_intro {\n                    text\n                  }\n                  client {\n                    text\n                  }\n                  body {\n                    ... on PrismicProjectDataBodyImage {\n                      id\n                      slice_type\n                      primary {\n                        image {\n                          gatsbyImageData\n                        }\n                      }\n                    }\n                    ... on PrismicProjectDataBodyVideo {\n                      id\n                      slice_type\n                      primary {\n                        video {\n                          url\n                        }\n                        sml_video {\n                          url\n                        }\n                        index_image {\n                          gatsbyImageData\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                id\n                type\n                uid\n                data {\n                  project_title {\n                    html\n                    text\n                  }\n                  location {\n                    html\n                    text\n                  }\n                  year {\n                    html\n                    text\n                  }\n                  client {\n                    html\n                    text\n                  }\n                  homepage_intro {\n                    text\n                  }\n                  body {\n                    ... on PrismicFilmLeadProjectDataBodyVideoWithPlayButton {\n                      id\n                      slice_type\n                      primary {\n                        video_with_play_button {\n                          url\n                        }\n                        video_thumbnail {\n                          gatsbyImageData\n                          dimensions {\n                            height\n                            width\n                          }                          \n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["AutoplayVideoCon","styled","div","withConfig","displayName","componentId","AutoplayVideoImg","AutoplayVideoVideo","video","AutoplayVideoImgCon","breatheAnimation","keyframes","AutoplayVideoTextCon","AutoPlayVideo","_ref","srcProps","posterProps","changedSlide","autoplayVideoRef","useRef","isOnScreen","useOnScreen","videoSrcState","setVideoSrcState","useState","isVideoLoaded","setIsVideoLoaded","React","useEffect","current","load","play","getPosterImage","getImage","style","opacity","position","srcSet","GatsbyImage","image","playsInline","autoPlay","muted","loop","ref","onLoadedData","type","src","ImageOrientation2","x","dimensions","height","width","isImageSmlPortrait","isImageLrgPortrait","isImageSquare","IntroCon","Grid16","AboutCon","LocationCon","ContactCon","Intro","className","class","Grid2","ProjectInfoCon","ProjectTitleCon","ProjectLocationYearCon","ProjectIndexAbout","ProjectLink","ProjectInfo2","data2","uid","useMediaQuery","Link","to","project_title","text","location","year","homepage_intro","img","TwoUpCarouselCounterNextCon","TwoUpCarouselCon","TwoUpCarouselCounterOneCon","TwoUpCarouselCounterTwoCon","TwoUpCarouselNextButtonCon","TwoUpProjectCarousel","children","projectLength","currentSlide","setCurrentSlide","totalSlides","setTotalSlides","ProjectCarouselRef","setChangedSlide","projectCarouselNextImg","slickNext","slice","onClick","display","Slider","Object","assign","infinite","slidesToShow","slidesToScroll","accessibility","dots","arrows","swipe","swipeToSlide","adaptiveHeight","afterChange","index","updateCurrentSlide","map","child","CounterCon","NextButtonCon","SquareCarouselCon","ProjectCarousel","videoLoad","touchStart","setTouchStart","touchEnd","setTouchEnd","onTouchStart","e","targetTouches","clientX","onTouchMove","onTouchEnd","distance","speed","SingleImgProjectAssetCon","SingleAssetProject","createContext","slideGoTo","setSlideGoTo","VideoProjectCon","VideoCarouselCon","FilmLeadCarousel2","p","FilmsLeadCarouselRef","FilmsLeadCarouselRefCon","carouselLength","setCarouselLength","length","value","useMemo","settings","slickGoTo","CarouselLengthContext","Provider","CarouselIndexClicked","VideoCon","VideoConInner","VideoWithContolsSC","ControlsCon","PlayButtonCon","PaginationCon","PaginationControlP","PauseButtonImg","PlayButtonImg","VideoControlsImgCon","VideoControlsImg","VideoWithControlsImg2","videoWithControlsRef","imgRef","isPlaying","setPlayingStatus","hasStartedPlaying","setHasStartedPlaying","useContext","Pagination","_ref2","array","_toConsumableArray","Array","items","handleClick","getPosterImg","preload","zIndex","pointerEvents","pauseVideo","pause","StaticImage","__imageData","require","playVideo","GlobalStyle","createGlobalStyle","IntroConCon","LogoGridCon","LogoConCon","MenuCon","LogoCon","DesktopNavP","MobileLeftCol","MobileRightCol","MobileNavP","LogoConMobile","NavSpacer","PageCon","ProjectCon","IndexAutoPlayVideoCon","SquareImg","withPrismicPreview","data","pageLoad","setPageLoad","isPageWide","onPageLoad","console","log","document","readyState","window","addEventListener","removeEventListener","setTimeout","body","NavIndexGridIndex","currentPage","setCurrentPage","LogoConRef","handleScroll","pageYOffset","classList","add","remove","passive","Icon","overview","prismicFeaturedProjects","project_relationship_group","content","project_relationship_field","filmLeadProject","content_three","slice_type","posterImage","primary","video_thumbnail","video_with_play_button","url","project","content_four","posterImg","index_image","sml_video","Helmet"],"sourceRoot":""}