{"version":3,"file":"component---src-templates-film-lead-project-js-aa6d562543dc2395e48c.js","mappings":"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","sources":["webpack://studio-prismic-starter/../../../src/lib/getActiveRepositoryName.ts","webpack://studio-prismic-starter/../../../src/lib/getDocument.ts","webpack://studio-prismic-starter/../../../src/lib/getPreviewCookie.ts","webpack://studio-prismic-starter/../../../src/lib/hasOwnProperty.ts","webpack://studio-prismic-starter/../../src/useMergePrismicPreviewData.ts","webpack://studio-prismic-starter/../../src/withPrismicPreview.tsx","webpack://studio-prismic-starter/./src/components/hooks/useOnScreen.js","webpack://studio-prismic-starter/./src/components/tf/media-query.js","webpack://studio-prismic-starter/./src/components/tf/page-load.js","webpack://studio-prismic-starter/./src/components/utils/image-orientation2.js","webpack://studio-prismic-starter/./src/components/tf/project/video-project-page.js","webpack://studio-prismic-starter/./src/templates/film_lead_project.js","webpack://studio-prismic-starter/./assets/WhiteLogo.svg"],"sourcesContent":["import { getPreviewCookie } from \"./getPreviewCookie\";\n\nexport const getActiveRepositoryName = (): string | undefined => {\n\tconst [, repositoryName] =\n\t\tdecodeURIComponent(getPreviewCookie() || \"\").match(\n\t\t\t/\"([a-zA-Z0-9][-a-zA-Z0-9]{2,}[a-zA-Z0-9]).prismic.io\"/,\n\t\t) || [];\n\n\treturn repositoryName;\n};\n","import type { NormalizedDocument } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getDocument = (\n\tprismicId: string,\n): NormalizedDocument | undefined => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\treturn state.documents[prismicId];\n};\n","const readValue = (value: string): string => {\n\treturn value.replace(/%3B/g, \";\");\n};\n\n/**\n * Returns the value of a cookie from a given cookie store.\n *\n * @returns The value of the cookie, if it exists.\n */\nexport const getPreviewCookie = (): string | undefined => {\n\tconst cookies = document.cookie.split(\"; \");\n\n\tfor (const cookie of cookies) {\n\t\tconst parts = cookie.split(\"=\");\n\t\tconst thisName = readValue(parts[0]).replace(/%3D/g, \"=\");\n\n\t\t// The Prismic preview cookie name is hardcoded here to prevent\n\t\t// including `@prismicio/client` in the main \"app.js\" bundle.\n\t\t// Unfortunately, the package is not tree-shaken when only the\n\t\t// cookie name is imported.\n\t\tif (thisName === \"io.prismic.preview\") {\n\t\t\tconst value = parts.slice(1).join(\"=\");\n\n\t\t\treturn readValue(value);\n\t\t}\n\t}\n};\n","/**\n * Determines if an object contains a given property. It augments the provided\n * object's type to include the property.\n *\n * @returns `true` if `obj` contains a `prop` property, `false` otherwise.\n */\nexport const hasOwnProperty = <X extends object, Y extends PropertyKey>(\n\tobj: X,\n\tprop: Y,\n): obj is X & Record<Y, unknown> => {\n\treturn obj.hasOwnProperty(prop);\n};\n","import * as React from \"react\";\n\nimport { getDocument } from \"./lib/getDocument\";\nimport { hasOwnProperty } from \"./lib/hasOwnProperty\";\n\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\ntype MergePreviewDataArgs<TStaticDataNode> = {\n\tstaticDataNode: TStaticDataNode;\n\tpublishedDocumentIDs: string[];\n};\n\nconst mergePreviewData = <TStaticDataNode>({\n\tstaticDataNode,\n\tpublishedDocumentIDs,\n}: MergePreviewDataArgs<TStaticDataNode>): TStaticDataNode => {\n\tconst castedData: unknown = staticDataNode;\n\n\tif (\n\t\ttypeof castedData === \"object\" &&\n\t\tcastedData !== null &&\n\t\t!Array.isArray(castedData)\n\t) {\n\t\tif (hasOwnProperty(castedData, \"_previewable\")) {\n\t\t\tconst replacement = getDocument(castedData._previewable as string);\n\n\t\t\tif (replacement) {\n\t\t\t\treturn replacement as unknown as typeof staticDataNode;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tpublishedDocumentIDs.length > 0 &&\n\t\t\t\t\t!publishedDocumentIDs.includes(castedData._previewable as string)\n\t\t\t\t) {\n\t\t\t\t\treturn null as unknown as typeof staticDataNode;\n\t\t\t\t} else {\n\t\t\t\t\treturn staticDataNode;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst newNode = {} as TStaticDataNode;\n\n\t\t\tfor (const key in castedData) {\n\t\t\t\tnewNode[key as keyof typeof newNode] = mergePreviewData({\n\t\t\t\t\tstaticDataNode: castedData[key as keyof typeof castedData],\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newNode;\n\t\t}\n\t} else if (Array.isArray(staticDataNode)) {\n\t\treturn staticDataNode.map((element) => {\n\t\t\treturn mergePreviewData({\n\t\t\t\tstaticDataNode: element,\n\t\t\t\tpublishedDocumentIDs,\n\t\t\t});\n\t\t}) as typeof staticDataNode;\n\t} else {\n\t\treturn staticDataNode;\n\t}\n};\n\nexport const useMergePrismicPreviewData = <\n\tTStaticData extends Record<string, unknown>,\n>(\n\tstaticData: TStaticData | undefined,\n): TStaticData | undefined => {\n\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t(state) => state.isBootstrapped,\n\t);\n\tconst publishedDocumentIDs = usePrismicPreviewStore(\n\t\t(state) => state.publishedDocumentIDs,\n\t);\n\tconst documents = usePrismicPreviewStore((state) => state.documents);\n\n\treturn React.useMemo(() => {\n\t\tif (staticData) {\n\t\t\tconst hasPreviewData =\n\t\t\t\tpublishedDocumentIDs.length > 0 || Object.keys(documents).length > 0;\n\n\t\t\tif (isBootstrapped && hasPreviewData) {\n\t\t\t\treturn mergePreviewData({\n\t\t\t\t\tstaticDataNode: staticData,\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn staticData;\n\t\t\t}\n\t\t}\n\t}, [documents, publishedDocumentIDs, isBootstrapped, staticData]);\n};\n","import * as React from \"react\";\n\nimport { getActiveRepositoryName } from \"./lib/getActiveRepositoryName\";\nimport { getComponentDisplayName } from \"./lib/getComponentDisplayName\";\n\nimport type { PagePropsLike } from \"./types\";\n\nimport { useMergePrismicPreviewData } from \"./useMergePrismicPreviewData\";\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\nexport type WithPrismicPreviewProps<TProps = Record<string, unknown>> = {\n\toriginalData: TProps;\n\tisPrismicPreview: boolean;\n};\n\nexport const withPrismicPreview = <TProps extends PagePropsLike>(\n\tWrappedComponent: React.ComponentType<TProps>,\n): React.ComponentType<TProps> => {\n\tconst WithPrismicPreview = (props: TProps): JSX.Element => {\n\t\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t\t(state) => state.isBootstrapped,\n\t\t);\n\n\t\tconst [isPrismicPreview, setIsPrismicPreview] = React.useState<\n\t\t\tboolean | null\n\t\t>(null);\n\t\tconst mergedData = useMergePrismicPreviewData(props.data);\n\n\t\tReact.useEffect(() => {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tif (!isBootstrapped) {\n\t\t\t\tconst repositoryName = getActiveRepositoryName();\n\t\t\t\tsetIsPrismicPreview(!!repositoryName);\n\n\t\t\t\tif (repositoryName) {\n\t\t\t\t\timport(\"./lib/bootstrapPrismicPreview\").then((mod) =>\n\t\t\t\t\t\tmod.default(repositoryName, abortController),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn () => abortController.abort();\n\t\t}, [isBootstrapped]);\n\n\t\treturn (\n\t\t\t<WrappedComponent\n\t\t\t\t{...props}\n\t\t\t\tdata={mergedData}\n\t\t\t\toriginalData={props.data}\n\t\t\t\tisPrismicPreview={isPrismicPreview}\n\t\t\t/>\n\t\t);\n\t};\n\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst wrappedComponentName = getComponentDisplayName(WrappedComponent);\n\t\tWithPrismicPreview.displayName = `withPrismicPreview(${wrappedComponentName})`;\n\t}\n\n\treturn WithPrismicPreview;\n};\n","import { useEffect, useState, useRef } from \"react\";\n\nexport function useOnScreen(ref) {\n  // console.log(\"useOnSCreen\");\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  const observerRef = useRef(null);\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(([entry]) =>\n      setIsOnScreen(entry.isIntersecting)\n    );\n  }, []);\n  useEffect(() => {\n    observerRef.current.observe(ref.current);\n    return () => {\n      observerRef.current.disconnect();\n    };\n  }, [ref]);\n  return isOnScreen;\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useMediaQuery(query) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import { useState, useEffect } from \"react\";\n\nexport function PageLoad(query) {\n  const [pageLoad, setPageLoad] = useState(null);\n\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n}\n","export const ImageOrientation2 = image => {\n  var x = image.dimensions.height / image.dimensions.width;\n  const isImageSmlPortrait = x > 1.2;\n  const isImageLrgPortrait = x > 1.7;\n  const isImageLandscape = image.dimensions.width > image.dimensions.height;\n  const isImageSquare = image.dimensions.width === image.dimensions.height;\n\n  if (isImageLrgPortrait === true) {\n    return \"lrg-portrait\";\n  } else if (isImageSmlPortrait === true) {\n    return \"sml-portrait\";\n  } else if (isImageSquare === true) {\n    // console.log(\"square\");\n    return \"square\";\n  } else {\n    // console.log(\"portrait\");\n    return \"landscape\";\n  }\n};\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../../hooks/useOnScreen\";\nimport { ImageOrientation } from \"../../utils/image-orientation\";\nimport { ImageOrientation2 } from \"../../utils/image-orientation2\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\"\n\n\n\nconst VideoCon = styled.div`\n  margin-bottom: 200px;\n  /* margin-top: 100px; */\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  width: 100%;\n`;\nconst VideoConInner = styled.div`\n  /* &.portrait {\n    grid-column: 4 / span 6;\n  } */\n  &.lrg-portrait {\n    grid-column: 5 / span 4;\n  }\n  &.sml-portrait {\n    grid-column: 4 / span 6;\n  }\n\n  &.square {\n    grid-column: 3 / span 8;\n  }\n  &.landscape {\n    grid-column: span 12;\n  }\n\n  @media (max-width: 666px) {\n    &.sml-portrait {\n      grid-column: 3 / span 8;\n    }\n    &.lrg-portrait {\n      grid-column: 4 / span 6;\n    }\n    &.square {\n      grid-column: 3 / span 8;\n    }\n    &.landscape {\n      grid-column: span 12;\n    }\n  }\n`;\nconst ControlsCon = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 12.5px;\n  width: 100%;\n  margin-top: 5px;\n`;\nconst LengthCon = styled.div`\n  grid-column: span 1;\n  p {\n    font-size: 12px;\n    color: #545454;\n  }\n`;\nconst PlayCon = styled.div`\n  grid-column: span 1;\n  p {\n    font-size: 12px;\n    color: white;\n  }\n`;\nconst PauseButtonImg = styled.div`\n  width: 8px;\n  display: inline-block !important;\n  margin-right: 5px;\n`;\nconst PlayButtonImg = styled.div`\n  width: 8px;\n  display: inline-block !important;\n`;\nconst Poster = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nexport const VideoProjectPage = ({ srcProps, posterProps, img }) => {\n  const VideoRef = useRef(null);\n  const imgRef = useRef(null);\n  const [isPlaying, setPlayingStatus] = useState(false);\n  const [hasStartedPlaying, setHasStartedPlaying] = useState(false);\n  const [imgOrientation, setOrientationState] = useState(\"\");\n  const [vidDuration, setVidDuration] = useState(\"\");\n\n  // useEffect(() => {\n  //   // Update the document title using the browser API\n  //   console.log(VideoRef.current.duration);\n  //   console.log(format(VideoRef.current.duration));\n  //   setVidDuration(format(VideoRef.current.duration));\n  // }, [VideoRef, vidDuration]);\n  // function y(seconds) {\n  //   const minutes = Math.floor(time / 60);\n  //   const seconds = time - minutes * 60;\n\n  //   function str_pad_left(string, pad, length) {\n  //     return (new Array(length + 1).join(pad) + string).slice(-length);\n  //   }\n\n  //   const finalTime =\n  //     str_pad_left(minutes, \"0\", 2) + \":\" + str_pad_left(seconds, \"0\", 2);\n  //   return finalTime;\n  // }\n\n  // console.log(y(VideoRef.current.duration));\n\n  function format(time) {\n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~((time % 3600) / 60);\n    var secs = ~~time % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n    if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n    ret += \"\" + String(mins).padStart(2, \"0\") + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n  }\n\n  // console.log(format(VideoRef.current.duration));\n\n  const handleLoadedMetadata = () => {\n    console.log(VideoRef.current.duration);\n    console.log(format(VideoRef.current.duration));\n    setVidDuration(format(VideoRef.current.duration));\n  };\n  const playVideo = () => {\n    VideoRef.current.play();\n    setPlayingStatus(true);\n    setHasStartedPlaying(true);\n  };\n  const pauseVideo = () => {\n    VideoRef.current.pause();\n    setPlayingStatus(false);\n  };\n  const getImageVal = getImage(posterProps)\n  return (\n    <>\n      <VideoCon>\n        <VideoConInner className={ImageOrientation2(img)}>\n          <Poster\n            ref={imgRef}\n            style={{\n              opacity: hasStartedPlaying ? 0 : 1,\n              position: hasStartedPlaying ? \"absolute\" : \"relative\",\n              zIndex: hasStartedPlaying ? -100 : 0,\n              display: hasStartedPlaying ? \"none\" : \"block\",\n            }}\n          >\n            <GatsbyImage image={getImageVal} />\n          </Poster>\n          <video\n            playsInline\n            loop\n            ref={VideoRef}\n            style={{\n              zIndex: 0,\n\n              opacity: hasStartedPlaying ? 1 : 0,\n              position: hasStartedPlaying ? \"relative\" : \"absolute\",\n              display: hasStartedPlaying ? \"block\" : \"none\",\n              // https://stackoverflow.com/questions/3680429/click-through-div-to-underlying-elements\n              // click through video to controls\n              pointerEvents: \"none\",\n            }}\n            onLoadedMetadata={handleLoadedMetadata}\n          >\n            <source src={srcProps}></source>\n          </video>\n          <ControlsCon>\n            <LengthCon>\n              <p>{vidDuration}</p>\n              {/* <p>TEST</p> */}\n            </LengthCon>\n            <PlayCon>\n            {isPlaying ? (\n                <p onClick={pauseVideo}>\n                  {/* <PauseButtonImg src={PauseButton} /> */}\n                  <PauseButtonImg>\n                  <StaticImage src={\"../../../img/pause.png\"} />  \n                  </PauseButtonImg>                  \n                  Pause\n                </p>\n              ) : (\n                <p onClick={playVideo}>\n                  <PlayButtonImg>\n                  <StaticImage src={\"../../../img/play.png\"} />  \n                  </PlayButtonImg>\n                   Play\n                </p>\n              )}\n            </PlayCon>\n          </ControlsCon>\n        </VideoConInner>\n      </VideoCon>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { Helmet } from \"react-helmet\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport ReactPlayer from \"react-player\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { VideoProjectPage } from \"../components/tf/project/video-project-page\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: black;\n  }\n  body {\n    background-color: black;\n    /* overflow-y: clip; */\n  }\n  p {\n    color: white;\n  }\n`;\n\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n\n  @media (max-width: 666px) {\n    /* display: none; */\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 10px;\n    width: calc(100% - 20px);\n    margin-left: 10px;\n  }\n`;\nconst Grid2B = styled.div`\n  display: grid;\n  top: 12.5px;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100% - 20px);\n  z-index: 20000;\n`;\nconst Col1 = styled.div`\n  grid-column: span 1;\n`;\nconst Col2 = styled.div`\n  grid-column: span 1;\n`;\nconst LogoCon = styled.div`\n  top: 12.5px;\n  mix-blend-mode: exclusion;\n  width: calc(50% - 6.25px);\n  display: inline-block;\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n  .shrink {\n    width: calc(37.5% - 6.25px);\n  }\n  @media (max-width: 666px) {\n    width: calc(75% - 6.25px);\n    margin-top: 14vh;\n    margin-left: 10px;\n    .shrink {\n      width: calc(75% - 6.25px);\n    }\n  }\n`;\nconst NavCon1 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  margin-left: 11px;\n  margin-top: -3px;\n  vertical-align: top;\n  mix-blend-mode: exclusion;\n  p {\n    color: #878787;\n  }\n  span.selected {\n    color: white;\n  }\n  span.navItem {\n  }\n  @media (max-width: 666px) {\n    /* display: none; */\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst NavCon2 = styled.div`\n  display: inline-block;\n  position: sticky;\n  top: 12.5px;\n  margin-left: 12.5px;\n  margin-top: -3px;\n  mix-blend-mode: exclusion;\n  z-index: 300000;\n  p {\n    color: #878787;\n  }\n  p.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    margin-left: 0px;\n    grid-column: span 1;\n  }\n`;\nconst PageConCon = styled.div`\n  width: calc(100% - 25px);\n  margin: 12.5px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 1 */ 1fr 1fr 1fr 1fr /* 2 */ 1fr 1fr 1fr 1fr /* 3 */ 1fr 1fr 1fr 1fr /* 4 */;\n  grid-gap: 12.5px;\n`;\nconst PageCon = styled.div`\n  /* width: calc(50% - 12.5px);\n  margin-left: 25%; */\n  grid-column: 5 / span 8;\n  margin-top: 20vh;\n  @media (max-width: 666px) {\n    /* display: none; */\n    /* width: calc(100% - 20px);\n    margin-left: 10px; */\n    grid-column: span 16;\n    margin-top: 10vh;\n  }\n`;\nconst Grid8 = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100%);\n`;\nconst Table = styled.div`\n  margin-bottom: 20px;\n  border-bottom: 1px solid white;\n`;\nconst TableRow = styled.div`\n  border-top: 1px solid white;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nconst TableTitle = styled.div`\n  grid-column: span 2;\n  p {\n    font-weight: bold;\n  }\n`;\nconst TableContent = styled.div`\n  grid-column: span 6;\n`;\nconst BodyTextCon = styled.div`\n  margin-bottom: 20px;\n  p {\n    line-height: 125%;\n  }\n  @media (max-width: 666px) {\n  }\n`;\nconst Footer = styled.div`\n  width: 100%;\n  background-color: white;\n  height: 400px;\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n`;\nconst RelatedProjectsCon = styled.div`\n  margin-top: 100px;\n  margin-bottom: 100px;\n`;\nconst RelatedProjectsTitle = styled.p`\n  margin-bottom: 10px;\n`;\nconst RelatedProjectsProjectCon = styled.div`\n  grid-column: span 4;\n`;\nconst RelatedProjectProjectTitle = styled.p`\n  color: grey;\n  margin-top: 10px;\n`;\nconst RelatedProjectsImg = styled.div`\n  width: 100%;\n  /* filter: grayscale(100%);\n  &:hover {\n    filter: none;\n  } */\n`;\nconst FilmLeadProject = ({ data }) => {\n  // test\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  const LogoConRef = useRef(null);\n  const LogoNav = scrollPosition => {\n    if (isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <Grid2B>\n              <Col1>\n                <LogoCon ref={LogoConRef}>\n                  <Icon />\n                </LogoCon>\n              </Col1>\n              <Col2>\n                <NavCon1>\n                  <p>\n                    <Link to=\"/\">\n                      <span className=\"selected\">Select,</span>{\" \"}\n                    </Link>\n                    <Link to=\"/project_index\">\n                      <span className=\"navItem\">Index,</span>{\" \"}\n                    </Link>\n                    <Link to=\"/about17\">\n                      <span className=\"navItem\">Office</span>\n                    </Link>\n                    {/* <br></br>Instagram, Twitter */}\n                  </p>\n                </NavCon1>\n              </Col2>\n            </Grid2B>\n          </LogoGridCon>\n        </>\n      );\n    }\n    if (!isPageWide) {\n      return (\n        <>\n          <LogoGridCon>\n            <NavCon1>\n              <Link to=\"/\">\n                <p className=\"selected\">Selected</p>\n              </Link>\n              <Link to=\"/project_index\">\n                <p>\n                  <span className=\"navItem\">Index</span>\n                </p>\n              </Link>\n            </NavCon1>\n            <NavCon2>\n              <Link to=\"/about17\">\n                <p>Office</p>\n              </Link>\n              <p>Instagram</p>\n            </NavCon2>\n          </LogoGridCon>\n          {/* <LogoCon ref={LogoConRef}>\n            <Icon />\n          </LogoCon> */}\n        </>\n      );\n    }\n  };\n\n  const work = data.prismicFilmLeadProject.data.body1.map((content, index) => {\n    if (content.slice_type == \"video_with_play_button\") {\n      // console.log(content);\n      // console.log(content.primary.video_thumbnail.fluid.srcSetWebp);\n      return (\n        <>\n          <VideoProjectPage\n            srcProps={content.primary.video_with_play_button.url}\n            posterProps={content.primary.video_thumbnail}\n            img={content.primary.video_thumbnail}\n          ></VideoProjectPage>\n        </>\n      );\n    }\n    if (content.slice_type == \"text\") {\n      return (\n        <BodyTextCon>\n          <p>{content.primary.text.text}</p>\n        </BodyTextCon>\n      );\n    }\n  });\n  var RelatedProjects = data.prismicFilmLeadProject.data.related_projects_group.map(\n    (content, index) => {\n      if (content.related_projects.document.type == \"project\") {\n        console.log(\"square project\");\n        // const project = content.related_projects.document.data.map(\n        //   (content3, index) => {\n        //     return (\n        //       //test\n        //       { content3 }\n        //     );\n        //   }\n        // );\n        const image = getImage(content.related_projects.document.data.index_preview_img)\n\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n              <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n\n            {/* {content.related_projects} */}\n          </>\n        );\n      } else if (\n        content.related_projects.document.type == \"film_lead_project\"\n      ) {\n        console.log(\"film project\");\n        const image = getImage(content.related_projects.document.data.index_preview_img)\n\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n              <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n\n            {/* {content.related_projects} */}\n          </>\n        );\n      }\n      // return (\n      //   // test\n      //   // test\n      //   { content }\n      // );\n    }\n  );\n\n  const RelatedProjects2 = () => {\n    return (\n      <Grid8>\n        {RelatedProjects[0]}\n        {RelatedProjects[1]}\n      </Grid8>\n    );\n  };\n  return (\n    <>\n      <GlobalStyle />\n      {/* <LogoNav></LogoNav> */}\n      <NavGrid></NavGrid>\n      <PageConCon>\n        <PageCon>\n          <Table>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Project</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicFilmLeadProject.data.project_title.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Location</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicFilmLeadProject.data.location.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Categories</p>\n                </TableTitle>\n                <TableContent>\n                  <p>\n                    {data.prismicFilmLeadProject.data.categories.map(\n                      (category, index) => {\n                        return (\n                          <CategoryName key={index}>\n                            {(index ? \", \" : \"\") + category.category.slug}\n                          </CategoryName>\n                        );\n                      }\n                    )}\n                  </p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Client</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicFilmLeadProject.data.client.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Team</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicFilmLeadProject.data.team.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n          </Table>\n          {work}\n          <RelatedProjectsCon>\n            <RelatedProjectsTitle>Related Projects</RelatedProjectsTitle>\n            <RelatedProjects2 />\n          </RelatedProjectsCon>\n          {/* <Footer></Footer> */}\n        </PageCon>\n      </PageConCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(FilmLeadProject);\n\nexport const query = graphql`\n  query FilmLeadArtists($uid: String!) {\n    prismicFilmLeadProject(uid: { eq: $uid }) {\n      uid\n      id\n      data {\n        project_title {\n          html\n          text\n        }\n        client {\n          html\n          text\n        }\n        location {\n          html\n          text\n        }\n        project_title {\n          html\n          text\n        }\n        team {\n          html\n          text\n        }\n        year {\n          html\n          text\n        }\n        categories {\n          category {\n            slug\n            id\n          }\n        }\n        body1 {\n          ... on PrismicFilmLeadProjectDataBody1VideoWithPlayButton {\n            id\n            slice_type\n            primary {\n              video_thumbnail {\n                gatsbyImageData\n                dimensions {\n                  width\n                  height\n                }\n              }\n              video_with_play_button {\n                url\n              }\n            }\n          }\n          ... on PrismicFilmLeadProjectDataBody1Image {\n            id\n            slice_type\n            primary {\n              image {\n                gatsbyImageData\n              }\n            }\n          }\n          ... on PrismicFilmLeadProjectDataBody1Text {\n            id\n            slice_type\n            primary {\n              text {\n                html\n                text\n              }\n            }\n          }\n          ... on PrismicFilmLeadProjectDataBody1Video {\n            id\n            slice_type\n            primary {\n              index_image {\n                gatsbyImageData\n              }\n              sml_video {\n                url\n              }\n              video {\n                url\n              }\n            }\n          }\n        }\n        related_projects_group {\n          related_projects {\n            uid\n            document {\n              ... on PrismicProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction WhiteLogo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:#fff;}\")),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m-.62,1h254.56v52.03h-98.04v254.13h-58.48V53.03H-.62V1Z\",\"key\":1}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m382.51,80.12c24.08,0,43.07,6.95,56.98,20.85,13.9,13.91,20.85,33.61,20.85,59.12v147.06h-54.18v-138.03c0-28.09-13.91-42.14-41.71-42.14-13.76,0-25.44,4.94-35.04,14.83-9.61,9.89-14.41,23.58-14.41,41.07v124.27h-54.18V1h54.18v113.95c16.91-23.22,39.41-34.83,67.51-34.83Z\",\"key\":2}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m687.81,200.09v12.9h-165.98c2,18.92,7.96,33.18,17.85,42.79,9.89,9.61,23.15,14.4,39.77,14.4,24.65,0,41.56-10.6,50.74-31.82h52.03c-5.74,22.65-17.78,40.63-36.12,53.96-18.35,13.33-40.71,20-67.08,20-32.97,0-59.63-10.6-79.98-31.82-20.36-21.21-30.53-49.3-30.53-84.28s10.03-63.06,30.1-84.28c20.35-21.21,46.87-31.82,79.55-31.82s60.2,11.04,79.98,33.11c19.78,22.08,29.67,51.03,29.67,86.86Zm-110.08-77.83c-31.82,0-50.31,17.63-55.47,52.89h111.37c-2.3-16.34-8.32-29.24-18.06-38.7-9.75-9.46-22.36-14.19-37.84-14.19Z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m890.34,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":4}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1233.04,1v52.03h-158.24v72.24h144.05v49.88h-144.05v132.01h-58.05V1h216.29Z\",\"key\":5}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1423.96,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":6}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1581.77,81.84c4.87,0,9.31.29,13.33.86v49.88h-13.76c-20.64,0-36.48,5.23-47.51,15.7-11.04,10.47-16.55,25.87-16.55,46.22v112.66h-54.18V85.28h52.46v39.56c12.32-28.66,34.4-43,66.22-43Z\",\"key\":7}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1755.49,114.09V1h54.18v306.16h-52.46v-30.96c-16.34,24.08-39.71,36.12-70.09,36.12s-54.9-10.6-72.67-31.82c-18.06-21.21-27.09-49.3-27.09-84.28s9.03-63.78,27.09-84.71c17.48-20.92,41.71-31.39,72.67-31.39s52.6,11.33,68.37,33.97Zm-112.66,83.85c0,22.94,5.01,40.28,15.05,52.03,10.03,11.76,23.93,17.63,41.71,17.63s31.82-6.16,42.14-18.49c10.03-12.32,15.05-29.95,15.05-52.89s-5.02-40.56-15.05-52.89c-10.04-12.32-24.08-18.49-42.14-18.49s-31.32,6.45-41.49,19.35c-10.18,12.9-15.27,30.82-15.27,53.75Z\",\"key\":8})]);\n}\n\nWhiteLogo.defaultProps = {\"id\":\"Layer_1\",\"viewBox\":\"0 0 1810 322.5\"};\n\nmodule.exports = WhiteLogo;\n\nWhiteLogo.default = WhiteLogo;\n"],"names":["getActiveRepositoryName","repositoryName","decodeURIComponent","getPreviewCookie","match","getDocument","prismicId","usePrismicPreviewStore","getState","documents","readValue","value","replace","cookies","document","cookie","split","parts","slice","join","hasOwnProperty","obj","prop","mergePreviewData","_ref","staticDataNode","publishedDocumentIDs","castedData","Array","isArray","map","element","replacement","_previewable","length","includes","newNode","key","withPrismicPreview","WrappedComponent","props","isBootstrapped","state","isPrismicPreview","setIsPrismicPreview","React","mergedData","staticData","hasPreviewData","Object","keys","useMergePrismicPreviewData","data","abortController","AbortController","then","mod","default","abort","jsx","originalData","useOnScreen","ref","isOnScreen","setIsOnScreen","useState","observerRef","useRef","useEffect","current","IntersectionObserver","entry","isIntersecting","observe","disconnect","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addListener","removeListener","PageLoad","pageLoad","setPageLoad","onPageLoad","console","log","readyState","addEventListener","removeEventListener","ImageOrientation2","image","x","dimensions","height","width","isImageSmlPortrait","isImageLrgPortrait","isImageSquare","VideoCon","styled","div","withConfig","displayName","componentId","VideoConInner","ControlsCon","LengthCon","PlayCon","PauseButtonImg","PlayButtonImg","Poster","VideoProjectPage","srcProps","posterProps","img","VideoRef","imgRef","isPlaying","setPlayingStatus","hasStartedPlaying","setHasStartedPlaying","imgOrientation","setOrientationState","vidDuration","setVidDuration","format","time","hrs","mins","secs","ret","String","padStart","getImageVal","getImage","className","style","opacity","position","zIndex","display","GatsbyImage","playsInline","loop","pointerEvents","onLoadedMetadata","handleLoadedMetadata","duration","src","onClick","pauseVideo","pause","StaticImage","__imageData","require","playVideo","play","GlobalStyle","createGlobalStyle","PageConCon","PageCon","Grid8","Table","TableRow","TableTitle","TableContent","BodyTextCon","CategoryName","span","RelatedProjectsCon","RelatedProjectsTitle","p","RelatedProjectsProjectCon","RelatedProjectProjectTitle","RelatedProjectsImg","work","prismicFilmLeadProject","body1","content","index","slice_type","primary","video_with_play_button","url","video_thumbnail","text","RelatedProjects","related_projects_group","related_projects","type","index_preview_img","Link","to","uid","project_title","RelatedProjects2","NavGrid","location","categories","category","slug","client","team","WhiteLogo","createElement","defaultProps","module","exports"],"sourceRoot":""}