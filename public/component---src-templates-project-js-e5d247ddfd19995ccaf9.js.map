{"version":3,"file":"component---src-templates-project-js-e5d247ddfd19995ccaf9.js","mappings":"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","sources":["webpack://studio-prismic-starter/../../../src/lib/getActiveRepositoryName.ts","webpack://studio-prismic-starter/../../../src/lib/getDocument.ts","webpack://studio-prismic-starter/../../../src/lib/getPreviewCookie.ts","webpack://studio-prismic-starter/../../../src/lib/hasOwnProperty.ts","webpack://studio-prismic-starter/../../src/useMergePrismicPreviewData.ts","webpack://studio-prismic-starter/../../src/withPrismicPreview.tsx","webpack://studio-prismic-starter/./src/components/hooks/useOnScreen.js","webpack://studio-prismic-starter/./src/components/tf/autoplay-video.js","webpack://studio-prismic-starter/./src/components/tf/media-query.js","webpack://studio-prismic-starter/./src/components/tf/nav-grid/nav.js","webpack://studio-prismic-starter/./src/components/tf/page-load.js","webpack://studio-prismic-starter/./src/components/tf/project/video-project-page.js","webpack://studio-prismic-starter/./src/components/utils/image-orientation2.js","webpack://studio-prismic-starter/./src/templates/project.js","webpack://studio-prismic-starter/./assets/WhiteLogo.svg"],"sourcesContent":["import { getPreviewCookie } from \"./getPreviewCookie\";\n\nexport const getActiveRepositoryName = (): string | undefined => {\n\tconst [, repositoryName] =\n\t\tdecodeURIComponent(getPreviewCookie() || \"\").match(\n\t\t\t/\"([a-zA-Z0-9][-a-zA-Z0-9]{2,}[a-zA-Z0-9]).prismic.io\"/,\n\t\t) || [];\n\n\treturn repositoryName;\n};\n","import type { NormalizedDocument } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getDocument = (\n\tprismicId: string,\n): NormalizedDocument | undefined => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\treturn state.documents[prismicId];\n};\n","const readValue = (value: string): string => {\n\treturn value.replace(/%3B/g, \";\");\n};\n\n/**\n * Returns the value of a cookie from a given cookie store.\n *\n * @returns The value of the cookie, if it exists.\n */\nexport const getPreviewCookie = (): string | undefined => {\n\tconst cookies = document.cookie.split(\"; \");\n\n\tfor (const cookie of cookies) {\n\t\tconst parts = cookie.split(\"=\");\n\t\tconst thisName = readValue(parts[0]).replace(/%3D/g, \"=\");\n\n\t\t// The Prismic preview cookie name is hardcoded here to prevent\n\t\t// including `@prismicio/client` in the main \"app.js\" bundle.\n\t\t// Unfortunately, the package is not tree-shaken when only the\n\t\t// cookie name is imported.\n\t\tif (thisName === \"io.prismic.preview\") {\n\t\t\tconst value = parts.slice(1).join(\"=\");\n\n\t\t\treturn readValue(value);\n\t\t}\n\t}\n};\n","/**\n * Determines if an object contains a given property. It augments the provided\n * object's type to include the property.\n *\n * @returns `true` if `obj` contains a `prop` property, `false` otherwise.\n */\nexport const hasOwnProperty = <X extends object, Y extends PropertyKey>(\n\tobj: X,\n\tprop: Y,\n): obj is X & Record<Y, unknown> => {\n\treturn obj.hasOwnProperty(prop);\n};\n","import * as React from \"react\";\n\nimport { getDocument } from \"./lib/getDocument\";\nimport { hasOwnProperty } from \"./lib/hasOwnProperty\";\n\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\ntype MergePreviewDataArgs<TStaticDataNode> = {\n\tstaticDataNode: TStaticDataNode;\n\tpublishedDocumentIDs: string[];\n};\n\nconst mergePreviewData = <TStaticDataNode>({\n\tstaticDataNode,\n\tpublishedDocumentIDs,\n}: MergePreviewDataArgs<TStaticDataNode>): TStaticDataNode => {\n\tconst castedData: unknown = staticDataNode;\n\n\tif (\n\t\ttypeof castedData === \"object\" &&\n\t\tcastedData !== null &&\n\t\t!Array.isArray(castedData)\n\t) {\n\t\tif (hasOwnProperty(castedData, \"_previewable\")) {\n\t\t\tconst replacement = getDocument(castedData._previewable as string);\n\n\t\t\tif (replacement) {\n\t\t\t\treturn replacement as unknown as typeof staticDataNode;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tpublishedDocumentIDs.length > 0 &&\n\t\t\t\t\t!publishedDocumentIDs.includes(castedData._previewable as string)\n\t\t\t\t) {\n\t\t\t\t\treturn null as unknown as typeof staticDataNode;\n\t\t\t\t} else {\n\t\t\t\t\treturn staticDataNode;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst newNode = {} as TStaticDataNode;\n\n\t\t\tfor (const key in castedData) {\n\t\t\t\tnewNode[key as keyof typeof newNode] = mergePreviewData({\n\t\t\t\t\tstaticDataNode: castedData[key as keyof typeof castedData],\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newNode;\n\t\t}\n\t} else if (Array.isArray(staticDataNode)) {\n\t\treturn staticDataNode.map((element) => {\n\t\t\treturn mergePreviewData({\n\t\t\t\tstaticDataNode: element,\n\t\t\t\tpublishedDocumentIDs,\n\t\t\t});\n\t\t}) as typeof staticDataNode;\n\t} else {\n\t\treturn staticDataNode;\n\t}\n};\n\nexport const useMergePrismicPreviewData = <\n\tTStaticData extends Record<string, unknown>,\n>(\n\tstaticData: TStaticData | undefined,\n): TStaticData | undefined => {\n\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t(state) => state.isBootstrapped,\n\t);\n\tconst publishedDocumentIDs = usePrismicPreviewStore(\n\t\t(state) => state.publishedDocumentIDs,\n\t);\n\tconst documents = usePrismicPreviewStore((state) => state.documents);\n\n\treturn React.useMemo(() => {\n\t\tif (staticData) {\n\t\t\tconst hasPreviewData =\n\t\t\t\tpublishedDocumentIDs.length > 0 || Object.keys(documents).length > 0;\n\n\t\t\tif (isBootstrapped && hasPreviewData) {\n\t\t\t\treturn mergePreviewData({\n\t\t\t\t\tstaticDataNode: staticData,\n\t\t\t\t\tpublishedDocumentIDs,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn staticData;\n\t\t\t}\n\t\t}\n\t}, [documents, publishedDocumentIDs, isBootstrapped, staticData]);\n};\n","import * as React from \"react\";\n\nimport { getActiveRepositoryName } from \"./lib/getActiveRepositoryName\";\nimport { getComponentDisplayName } from \"./lib/getComponentDisplayName\";\n\nimport type { PagePropsLike } from \"./types\";\n\nimport { useMergePrismicPreviewData } from \"./useMergePrismicPreviewData\";\nimport { usePrismicPreviewStore } from \"./usePrismicPreviewStore\";\n\nexport type WithPrismicPreviewProps<TProps = Record<string, unknown>> = {\n\toriginalData: TProps;\n\tisPrismicPreview: boolean;\n};\n\nexport const withPrismicPreview = <TProps extends PagePropsLike>(\n\tWrappedComponent: React.ComponentType<TProps>,\n): React.ComponentType<TProps> => {\n\tconst WithPrismicPreview = (props: TProps): JSX.Element => {\n\t\tconst isBootstrapped = usePrismicPreviewStore(\n\t\t\t(state) => state.isBootstrapped,\n\t\t);\n\n\t\tconst [isPrismicPreview, setIsPrismicPreview] = React.useState<\n\t\t\tboolean | null\n\t\t>(null);\n\t\tconst mergedData = useMergePrismicPreviewData(props.data);\n\n\t\tReact.useEffect(() => {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tif (!isBootstrapped) {\n\t\t\t\tconst repositoryName = getActiveRepositoryName();\n\t\t\t\tsetIsPrismicPreview(!!repositoryName);\n\n\t\t\t\tif (repositoryName) {\n\t\t\t\t\timport(\"./lib/bootstrapPrismicPreview\").then((mod) =>\n\t\t\t\t\t\tmod.default(repositoryName, abortController),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn () => abortController.abort();\n\t\t}, [isBootstrapped]);\n\n\t\treturn (\n\t\t\t<WrappedComponent\n\t\t\t\t{...props}\n\t\t\t\tdata={mergedData}\n\t\t\t\toriginalData={props.data}\n\t\t\t\tisPrismicPreview={isPrismicPreview}\n\t\t\t/>\n\t\t);\n\t};\n\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst wrappedComponentName = getComponentDisplayName(WrappedComponent);\n\t\tWithPrismicPreview.displayName = `withPrismicPreview(${wrappedComponentName})`;\n\t}\n\n\treturn WithPrismicPreview;\n};\n","import { useEffect, useState, useRef } from \"react\";\n\nexport function useOnScreen(ref) {\n  // console.log(\"useOnSCreen\");\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  const observerRef = useRef(null);\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(([entry]) =>\n      setIsOnScreen(entry.isIntersecting)\n    );\n  }, []);\n  useEffect(() => {\n    observerRef.current.observe(ref.current);\n    return () => {\n      observerRef.current.disconnect();\n    };\n  }, [ref]);\n  return isOnScreen;\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../hooks/useOnScreen\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst AutoplayVideoCon = styled.div`\n  position: relative;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    width: 100%;\n  }\n`;\nconst AutoplayVideoImg = styled.div`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoVideo = styled.video`\n  /* position: absolute; */\n  width: 100%;\n  height: 100%;\n`;\nconst AutoplayVideoImgCon = styled.div``;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: black;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: white;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const AutoPlayVideo = ({ srcProps, posterProps, changedSlide }) => {\n  // https://stackoverflow.com/questions/58341787/intersectionobserver-with-react-hooks\n  // https://frontend-digest.com/responsive-and-progressive-video-loading-in-react-e8753315af51\n  const autoplayVideoRef = useRef(null);\n  const isOnScreen = useOnScreen(autoplayVideoRef);\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n  };\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      setVideoSrcState(srcProps);\n      autoplayVideoRef.current.load();\n      autoplayVideoRef.current.play();\n    } else if (isOnScreen === false) {\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n    }\n  }, [isOnScreen]);\n  const getPosterImage = getImage(posterProps);\n  return (\n    <>\n      <AutoplayVideoCon>\n        <AutoplayVideoImgCon\n          style={{\n            opacity: isVideoLoaded ? 0 : 1,\n            position: isVideoLoaded ? \"absolute\" : \"relative\",\n          }}\n        >\n          <AutoplayVideoTextCon>\n            <p>Video Loading</p>\n          </AutoplayVideoTextCon>\n\n          <AutoplayVideoImg\n            srcSet={posterProps}\n            style={{\n              opacity: isVideoLoaded ? 0 : 1,\n              position: isVideoLoaded ? \"absolute\" : \"relative\",\n            }}\n          >\n            <GatsbyImage image={getPosterImage} />\n          </AutoplayVideoImg>\n        </AutoplayVideoImgCon>\n\n        <AutoplayVideoVideo\n          playsInline\n          autoPlay\n          muted\n          loop\n          ref={autoplayVideoRef}\n          // onCanPlayThrough={onLoadedData}\n          onLoadedData={onLoadedData}\n          style={{\n            opacity: isVideoLoaded ? 1 : 0,\n            position: isVideoLoaded ? \"relative\" : \"absolute\",\n          }}\n        >\n          <source type=\"video/mp4\" src={videoSrcState} />\n        </AutoplayVideoVideo>\n      </AutoplayVideoCon>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport function useMediaQuery(query) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { withPreview } from \"gatsby-source-prismic\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../media-query\";\nimport Icon from \"../../../../assets/WhiteLogo.svg\";\nimport { graphql, Link } from \"gatsby\";\nimport { PageLoad } from \"../page-load\";\n\n/* BOTH */\nconst LogoGridCon = styled.div`\n  width: calc(100% - 25px);\n  margin-left: 12.5px;\n  position: sticky;\n  top: 12.5px;\n  z-index: 300000;\n  mix-blend-mode: exclusion;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n    /* width: calc(100% - 2px);\n    margin-left: 12.5px;\n    top: 12.5px; */\n  }\n`;\n/* DESKTOP */\nconst LogoConCon = styled.div`\n  grid-column: span 1;\n  mix-blend-mode: exclusion;\n`;\nconst MenuCon = styled.div`\n  grid-column: 3 / span 2;\n  mix-blend-mode: exclusion;\n`;\nconst LogoCon = styled.div`\n  mix-blend-mode: exclusion;\n  width: calc(100%);\n  vertical-align: top;\n  transition: all 2s;\n  vertical-align: top;\n`;\nconst DesktopNavP = styled.p`\n  color: #878787;\n  mix-blend-mode: exclusion;\n  a.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: none;\n  }\n`;\n\n/* MOBILE */\nconst MobileLeftCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileRightCol = styled.div`\n  grid-column: span 2;\n  mix-blend-mode: exclusion;\n`;\nconst MobileNavP = styled.p`\n  display: none;\n  color: #878787;\n  mix-blend-mode: exclusion;\n  &.selected {\n    color: white;\n  }\n  @media (max-width: 666px) {\n    display: block;\n  }\n`;\n\nexport const NavGrid = () => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n  var [currentPage, setCurrentPage] = useState(null);\n  const LogoConRef = useRef(null);\n\n  useEffect(() => {\n    var inputString = window.location.href;\n    var outputString = inputString.replace(/.*\\//, \"\");\n    if (outputString == \"project_index\") {\n      setCurrentPage(outputString);\n    } else if (outputString == \"office\") {\n      setCurrentPage(outputString);\n    } else {\n      setCurrentPage(null);\n    }\n  }, [setCurrentPage]);\n\n  if (isPageWide) {\n    return (\n      <>\n        <LogoGridCon style={{ opacity: PageLoad ? 1 : 0 }}>\n          <LogoConCon>\n            <LogoCon ref={LogoConRef}>\n              <Link to=\"/\">\n                <Icon />\n              </Link>\n            </LogoCon>\n          </LogoConCon>\n          <MenuCon>\n            <DesktopNavP>\n              <Link to=\"/\">Select, </Link>\n              <Link\n                to=\"/project_index\"\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index,{\" \"}\n              </Link>\n              <Link\n                to=\"/office\"\n                className={currentPage == \"office\" ? \"selected\" : \"\"}\n              >\n                Office\n              </Link>\n              {/* <br></br>Instagram, Twitter */}\n            </DesktopNavP>\n          </MenuCon>\n        </LogoGridCon>\n      </>\n    );\n  }\n  if (!isPageWide) {\n    return (\n      <>\n        <LogoGridCon>\n          <MobileLeftCol>\n            <Link to=\"/\">\n              <MobileNavP>Selected</MobileNavP>\n            </Link>\n            <Link to=\"/project_index\">\n              <MobileNavP\n                className={currentPage == \"project_index\" ? \"selected\" : \"\"}\n              >\n                Index\n              </MobileNavP>\n            </Link>\n          </MobileLeftCol>\n\n          <MobileRightCol>\n            <Link to=\"/office\">\n              <MobileNavP className={currentPage == \"office\" ? \"selected\" : \"\"}>\n                Office\n              </MobileNavP>\n            </Link>\n            <MobileNavP>Instagram</MobileNavP>\n          </MobileRightCol>\n        </LogoGridCon>\n      </>\n    );\n  }\n};\n","import { useState, useEffect } from \"react\";\n\nexport function PageLoad(query) {\n  const [pageLoad, setPageLoad] = useState(null);\n\n  useEffect(() => {\n    // callback function to call when event triggers\n    const onPageLoad = () => {\n      console.log(\"page loaded\");\n      setPageLoad(true);\n      // do something else\n    };\n\n    // Check if the page has already loaded\n    if (document.readyState === \"complete\") {\n      onPageLoad();\n    } else {\n      window.addEventListener(\"load\", onPageLoad, false);\n      // Remove the event listener when component unmounts\n      return () => window.removeEventListener(\"load\", onPageLoad);\n    }\n  }, []);\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport { useOnScreen } from \"../../hooks/useOnScreen\";\nimport { ImageOrientation } from \"../../utils/image-orientation\";\nimport { ImageOrientation2 } from \"../../utils/image-orientation2\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\nimport { playWhite } from \"../../../img/Play_White.svg\";\n\nconst VideoCon = styled.div`\n  /* margin-bottom: 200px; */\n  /* margin-bottom: 12.5px; */\n  /* margin-top: 25px;\n  margin-bottom: 25px; */\n  margin-top: 100px;\n  margin-bottom: 100px;\n  position: relative;\n  float: left;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 4 */ 1fr 1fr 1fr 1fr /* 8 */ 1fr 1fr 1fr 1fr /* 12 */ 1fr 1fr 1fr 1fr /* 16 */ 1fr 1fr 1fr 1fr /* 20 */ 1fr 1fr 1fr 1fr /* 24 */;\n  grid-gap: 12.5px;\n  width: 100%;\n  /* background-color: red; */\n  /* background-color: red; */\n  @media (max-width: 666px) {\n    grid-column-gap: 10px;\n    grid-template-columns: 1fr 1fr 1fr 1fr /* 4 */ 1fr 1fr 1fr 1fr /* 8 */ 1fr 1fr 1fr 1fr /* 12 */ 1fr 1fr 1fr 1fr /* 16 */ 1fr 1fr 1fr 1fr /* 20 */ 1fr 1fr 1fr 1fr /* 24 */ 1fr 1fr 1fr 1fr /* 28 */ 1fr 1fr 1fr 1fr /* 32 */ 1fr 1fr 1fr 1fr /* 36 */;\n    grid-column-gap: 10px;\n    grid-row-gap: 0;\n    margin-top: 50px;\n    margin-bottom: 50px;\n    /* width: calc(100% - 20px); */\n  }\n`;\nconst VideoConInner = styled.div`\n  /* &.portrait {\n    grid-column: 4 / span 6;\n  } */\n  &.sml-portrait {\n    grid-column: 7 / span 12;\n  }\n  &.lrg-portrait {\n    grid-column: 8 / span 10;\n  }\n  &.square {\n    grid-column: 6 / span 14;\n  }\n  &.landscape {\n    grid-column: 1 / span 24;\n  }\n  @media (max-width: 666px) {\n    &.sml-portrait {\n      /* grid-column: 5 / span 16; */\n      /* grid-column: 4 / span 30; */\n      /* grid-column: 6 / span 26; */\n      grid-column: span 36;\n    }\n    &.lrg-portrait {\n      /* grid-column: 5 / span 16; */\n      /* grid-column: 7 / span 24; */\n      grid-column: span 36;\n    }\n    &.square {\n      /* grid-column: 4 / span 18; */\n      /* grid-column: 3 / span 32; */\n      /* grid-column: span 36; */\n      /* grid-column: 5 / span 28; */\n      grid-column: span 36;\n    }\n    &.landscape {\n      /* grid-column: span 24; */\n      grid-column: span 36;\n    }\n  }\n`;\nconst ControlsCon = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 12.5px;\n  width: 100%;\n  margin-top: 5px;\n`;\nconst LengthCon = styled.div`\n  grid-column: span 1;\n  p {\n    font-size: 12px;\n    color: #545454;\n    color: ${props => (props.pageColour == \"black\" ? \"#545454\" : \"#878787\")};\n  }\n`;\nconst PlayPauseButtonCon = styled.div`\n  height: 12px;\n`;\nconst PlayCon = styled.div`\n  grid-column: span 1;\n  /* background-color: red; */\n`;\nconst PauseButtonImgCon = styled.div`\n  width: 8px;\n  display: inline-block !important;\n  /* margin-right: 5px; */\n  margin-top: 2px;\n  img {\n    fill: #ff0000;\n  }\n`;\nconst PlayButtonText = styled.p`\n  font-size: 12px;\n  color: #545454;\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n  position: absolute;\n  margin-left: 5px;\n  color: ${props => (props.pageColour == \"black\" ? \"#545454\" : \"#878787\")};\n`;\n\nconst PlayButtonImgCon = styled.div`\n  width: 8px;\n  /* margin-right: 5px; */\n  margin-top: 2px;\n  display: inline-block !important;\n  /* background-color: blue; */\n`;\n// const Poster = styled.div`\n//   width: 100%;\n//   /* height: 100%; */\n// `;\nconst VideoWithContolsSC = styled.video`\n  width: 100%;\n`;\nconst VideoControlsImgCon = styled.div``;\nconst VideoControlsImg = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst breatheAnimation = keyframes`\n  0% {opacity: 0} \n  50% {opacity: 1}\n  100% {opacity:0}\n`;\nconst AutoplayVideoTextCon = styled.div`\n  position: absolute;\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    color: white;\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 10px;\n    background-color: black;\n    margin-top: -1px;\n    animation-name: ${breatheAnimation};\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  @media (min-width: 666px) {\n    display: none;\n  }\n`;\n\nexport const VideoProjectPage = ({\n  srcProps,\n  posterProps,\n  img,\n  pageColour,\n}) => {\n  function format(time) {\n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~((time % 3600) / 60);\n    var secs = ~~time % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n    if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n    ret += \"\" + String(mins).padStart(2, \"0\") + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n  }\n\n  const handleLoadedMetadata = () => {\n    console.log(VideoRef.current.duration);\n    console.log(format(VideoRef.current.duration));\n    setVidDuration(format(VideoRef.current.duration));\n  };\n\n  const PlayButtonImg = pageColour => {\n    if (pageColour.pageColour === \"white\") {\n      return <StaticImage src={\"../../../img/Play_87.svg\"} />;\n    } else if (pageColour.pageColour === \"black\") {\n      return <StaticImage src={\"../../../img/Play_54.svg\"} />;\n    }\n  };\n\n  const PauseButtonImg = pageColour => {\n    if (pageColour.pageColour === \"white\") {\n      return <StaticImage src={\"../../../img/Pause_87.svg\"} />;\n    } else if (pageColour.pageColour === \"black\") {\n      return <StaticImage src={\"../../../img/Pause_54.svg\"} />;\n    }\n  };\n\n  const VideoRef = useRef(null);\n  const isOnScreen = useOnScreen(VideoRef);\n  const imgRef = useRef(null);\n  const [isPlaying, setPlayingStatus] = useState(false);\n  const [hasStartedPlaying, setHasStartedPlaying] = useState(false);\n  const [vidDuration, setVidDuration] = useState(\"\");\n  const [videoSrcState, setVideoSrcState] = useState(\"\");\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (isOnScreen == true) {\n      setVideoSrcState(srcProps);\n      VideoRef.current.load();\n      // if (!isVideoLoaded) {\n      //   VideoRef.current.load();\n      // }\n    } else if (isOnScreen === false) {\n      setIsVideoLoaded(false);\n      setVideoSrcState(\"\");\n      setPlayingStatus(false);\n      setHasStartedPlaying(false);\n    }\n  }, [isOnScreen, videoSrcState]);\n\n  const onLoadedData = () => {\n    setIsVideoLoaded(true);\n    if (isPlaying) {\n      setHasStartedPlaying(true);\n    }\n  };\n\n  const playVideo = () => {\n    VideoRef.current.play();\n    setPlayingStatus(true);\n    if (isVideoLoaded) {\n      setHasStartedPlaying(true);\n    }\n  };\n  const pauseVideo = () => {\n    VideoRef.current.pause();\n    setPlayingStatus(false);\n  };\n  const getImageVal = getImage(posterProps);\n\n  const playPause = () => {\n    if (isPlaying) {\n      VideoRef.current.pause();\n      setPlayingStatus(false);\n    } else {\n      VideoRef.current.play();\n      setPlayingStatus(true);\n    }\n  };\n  return (\n    <>\n      <VideoCon>\n        <VideoConInner className={ImageOrientation2(img)} onClick={playPause}>\n          <VideoControlsImgCon\n            style={{\n              opacity: hasStartedPlaying ? 0 : 1,\n              position: hasStartedPlaying ? \"absolute\" : \"relative\",\n            }}\n          >\n            {!isVideoLoaded && isPlaying ? (\n              <AutoplayVideoTextCon>\n                <p>Video Loading</p>\n              </AutoplayVideoTextCon>\n            ) : (\n              \" \"\n            )}\n            <VideoControlsImgCon\n              style={{\n                opacity: hasStartedPlaying ? 0 : 1,\n                position: hasStartedPlaying ? \"absolute\" : \"relative\",\n              }}\n            >\n              {!isVideoLoaded && isPlaying ? (\n                <AutoplayVideoTextCon>\n                  <p>Video Loading</p>\n                </AutoplayVideoTextCon>\n              ) : (\n                \" \"\n              )}\n              <GatsbyImage image={getImageVal} />\n              {/* <Poster\n            ref={imgRef}\n            style={{\n              opacity: hasStartedPlaying ? 0 : 1,\n              position: hasStartedPlaying ? \"absolute\" : \"relative\",\n              zIndex: hasStartedPlaying ? -100 : 0,\n              display: hasStartedPlaying ? \"none\" : \"block\",\n            }}\n            onClick={playVideo}\n          > \n            \n          </Poster> */}\n            </VideoControlsImgCon>\n          </VideoControlsImgCon>\n          <VideoWithContolsSC\n            playsInline\n            // muted\n            loop\n            preload=\"auto\"\n            ref={VideoRef}\n            // onLoadedData={onLoadedData}\n            onCanPlayThrough={onLoadedData}\n            style={{\n              zIndex: 0,\n              opacity: hasStartedPlaying ? 1 : 0,\n              position: hasStartedPlaying ? \"relative\" : \"absolute\",\n              // https://stackoverflow.com/questions/3680429/click-through-div-to-underlying-elements\n              // click through video to controls\n              pointerEvents: \"none\",\n            }}\n            onLoadedMetadata={handleLoadedMetadata}\n          >\n            <source type=\"video/mp4\" src={videoSrcState} />\n          </VideoWithContolsSC>\n          <ControlsCon>\n            <LengthCon pageColour={pageColour}>\n              <p>{vidDuration}</p>\n              {/* <p>TEST</p> */}\n            </LengthCon>\n            <PlayCon>\n              {isPlaying ? (\n                <PlayPauseButtonCon onClick={pauseVideo}>\n                  <PauseButtonImgCon>\n                    <PauseButtonImg pageColour={pageColour} />\n                  </PauseButtonImgCon>\n\n                  <PlayButtonText pageColour={pageColour}>Pause</PlayButtonText>\n                </PlayPauseButtonCon>\n              ) : (\n                <PlayPauseButtonCon onClick={playVideo}>\n                  <PlayButtonImgCon>\n                    <PlayButtonImg pageColour={pageColour} />\n                  </PlayButtonImgCon>\n                  <PlayButtonText pageColour={pageColour}>Play</PlayButtonText>\n                </PlayPauseButtonCon>\n              )}\n            </PlayCon>\n          </ControlsCon>\n        </VideoConInner>\n      </VideoCon>\n    </>\n  );\n};\n","export const ImageOrientation2 = image => {\n  var x = image.dimensions.height / image.dimensions.width;\n  const isImageSmlPortrait = x > 1.2;\n  const isImageLrgPortrait = x > 1.7;\n  const isImageLandscape = image.dimensions.width > image.dimensions.height;\n  const isImageSquare = image.dimensions.width === image.dimensions.height;\n\n  if (isImageLrgPortrait === true) {\n    return \"lrg-portrait\";\n  } else if (isImageSmlPortrait === true) {\n    return \"sml-portrait\";\n  } else if (isImageSquare === true) {\n    // console.log(\"square\");\n    return \"square\";\n  } else {\n    // console.log(\"portrait\");\n    return \"landscape\";\n  }\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { withPrismicPreview } from \"gatsby-plugin-prismic-previews\";\nimport { Helmet } from \"react-helmet\";\nimport { ImageOrientation } from \"../components/utils/image-orientation\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { useMediaQuery } from \"../components/tf/media-query\";\nimport Icon from \"../../assets/WhiteLogo.svg\";\nimport { AutoPlayVideo } from \"../components/tf/autoplay-video\";\nimport { NavGrid } from \"../components/tf/nav-grid/nav\";\nimport { PageLoad } from \"../components/tf/page-load\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { VideoProjectPage } from \"../components/tf/project/video-project-page\";\n\nconst PageConCon = styled.div`\n  width: calc(100% - 25px);\n  margin: 12.5px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr /* 1 */ 1fr 1fr 1fr 1fr /* 2 */ 1fr 1fr 1fr 1fr /* 3 */ 1fr 1fr 1fr 1fr /* 4 */;\n  grid-gap: 12.5px;\n  @media (max-width: 666px) {\n    /* width: calc(100% - 25px);\n    margin-left: 12.5px;\n    top: 10px; */\n    width: calc(100% - 20px);\n    margin-left: 10px;\n    top: 10px;\n    grid-gap: 10px;\n  }\n`;\nconst PageCon = styled.div`\n  grid-column: 5 / span 8;\n  margin-top: 20vh;\n  @media (max-width: 666px) {\n    grid-column: span 16;\n    margin-top: 10vh;\n  }\n`;\nconst Grid8 = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 12.5px;\n  grid-row-gap: 0;\n  width: calc(100%);\n  @media (max-width: 666px) {\n    grid-gap: 10px;\n  }\n`;\nconst Table = styled.div`\n  margin-bottom: 0px;\n  position: relative;\n  float: left;\n  width: 100%;\n  border-bottom: 1px solid black;\n  @media (max-width: 666px) {\n    /* margin-bottom: 10px; */\n  }\n`;\nconst TableRow = styled.div`\n  border-top: 1px solid black;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nconst TableTitle = styled.div`\n  grid-column: span 2;\n  p {\n    font-weight: bold;\n    font-family: \"HelveticaNowText\";\n    line-height: 110%;\n    letter-spacing: -0.5px;\n  }\n`;\nconst TableContent = styled.div`\n  grid-column: span 6;\n  p {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n`;\n\nconst BodyTextCon = styled.div`\n  position: relative;\n  float: left;\n  p {\n    line-height: 125%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\nconst SquareImage = styled.div`\n  width: calc(100%);\n  margin-top: 6.25px;\n  margin-bottom: 6.25px;\n  position: relative;\n  float: left;\n\n  @media (max-width: 666px) {\n    width: 100%;\n    margin-top: 5px;\n    margin-bottom: 5px;\n  }\n`;\nconst ProjectPageAutoPlayVideoCon = styled.div`\n  margin-top: 6.25px;\n  margin-bottom: 6.25px;\n  position: relative;\n  float: left;\n  @media (max-width: 666px) {\n    margin-top: 5px;\n    margin-bottom: 5px;\n  }\n`;\nconst CategoryName = styled.span`\n  text-transform: capitalize;\n`;\nconst RelatedProjectsCon = styled.div`\n  margin-top: 100px;\n  margin-bottom: 100px;\n  position: relative;\n  float: left;\n`;\nconst RelatedProjectsTitle = styled.p`\n  margin-bottom: 10px;\n`;\nconst RelatedProjectsProjectCon = styled.div`\n  grid-column: span 4;\n`;\nconst RelatedProjectProjectTitle = styled.p`\n  color: grey;\n  margin-top: 10px;\n`;\nconst RelatedProjectsImg = styled.div`\n  width: 100%;\n`;\nconst Project = ({ data }) => {\n  let isPageWide = useMediaQuery(\"(min-width: 667px)\");\n\n  const projectBody = data.prismicProject.data.body1.map((content, index) => {\n    if (content.slice_type == \"image\") {\n      const image = getImage(content.primary.image);\n      return (\n        <>\n          <SquareImage>\n            <GatsbyImage image={image} />\n          </SquareImage>\n        </>\n      );\n    }\n    if (content.slice_type == \"text\") {\n      return (\n        <>\n          <BodyTextCon>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: content.primary.text.html,\n              }}\n            />\n          </BodyTextCon>\n        </>\n      );\n    }\n    if (content.slice_type == \"video\") {\n      if (isPageWide) {\n        const posterImgProps = content.primary.index_image;\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      } else {\n        const posterImgProps = content.primary.index_image;\n        return (\n          <ProjectPageAutoPlayVideoCon>\n            <AutoPlayVideo\n              srcProps={content.primary.sml_video.url}\n              posterProps={posterImgProps}\n            />\n          </ProjectPageAutoPlayVideoCon>\n        );\n      }\n    } else if (content.slice_type == \"video_with_play_button\") {\n      if (isPageWide) {\n        return (\n          <>\n            <VideoProjectPage\n              pageColour={\"white\"}\n              srcProps={content.primary.video_with_play_button.url}\n              posterProps={content.primary.video_thumbnail}\n              img={content.primary.video_thumbnail}\n            ></VideoProjectPage>\n          </>\n        );\n      } else {\n        return (\n          <>\n            <VideoProjectPage\n              pageColour={\"white\"}\n              srcProps={content.primary.small_video_with_play_button.url}\n              posterProps={content.primary.video_thumbnail}\n              img={content.primary.video_thumbnail}\n            ></VideoProjectPage>\n          </>\n        );\n      }\n    }\n  });\n\n  var RelatedProjects = data.prismicProject.data.related_projects_group.map(\n    (content, index) => {\n      if (content.related_projects.document.type == \"project\") {\n        const image = getImage(\n          content.related_projects.document.data.index_preview_img\n        );\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n                <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n          </>\n        );\n      } else if (\n        content.related_projects.document.type == \"film_lead_project\"\n      ) {\n        const image = getImage(\n          content.related_projects.document.data.index_preview_img\n        );\n        console.log(\"film project\");\n        return (\n          <>\n            <RelatedProjectsProjectCon>\n              <Link to={`/${content.related_projects.document.uid}`}>\n                <RelatedProjectsImg>\n                  <GatsbyImage image={image} />\n                </RelatedProjectsImg>\n                <RelatedProjectProjectTitle>\n                  {content.related_projects.document.data.project_title.text}\n                </RelatedProjectProjectTitle>\n              </Link>\n            </RelatedProjectsProjectCon>\n          </>\n        );\n      }\n    }\n  );\n\n  const RelatedProjects2 = () => {\n    return (\n      <Grid8>\n        {RelatedProjects[0]}\n        {RelatedProjects[1]}\n      </Grid8>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Theo Ford – {data.prismicProject.data.project_title.text}</title>\n      </Helmet>\n      <NavGrid></NavGrid>\n      <PageConCon>\n        <PageCon>\n          <Table>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Project</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.project_title.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Client</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicProject.data.client.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Location</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.location.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Category</p>\n                </TableTitle>\n                <TableContent>\n                  <p>\n                    {data.prismicProject.data.categories.map(\n                      (category, index) => {\n                        return (\n                          <CategoryName key={index}>\n                            {(index ? \", \" : \"\") + category.category.slug}\n                          </CategoryName>\n                        );\n                      }\n                    )}\n                  </p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Year</p>\n                </TableTitle>\n                <TableContent>\n                  <p> {data.prismicProject.data.year.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n            <TableRow>\n              <Grid8>\n                <TableTitle>\n                  <p>Team</p>\n                </TableTitle>\n                <TableContent>\n                  <p>{data.prismicProject.data.team.text}</p>\n                </TableContent>\n              </Grid8>\n            </TableRow>\n          </Table>\n          {projectBody}\n          <RelatedProjectsCon>\n            <RelatedProjectsTitle>Related Projects</RelatedProjectsTitle>\n            <RelatedProjects2 />\n          </RelatedProjectsCon>\n        </PageCon>\n      </PageConCon>\n    </>\n  );\n};\n\nexport default withPrismicPreview(Project);\n\nexport const query = graphql`\n  query Artists($uid: String!) {\n    prismicProject(uid: { eq: $uid }) {\n      uid\n      id\n      data {\n        project_title {\n          html\n          text\n        }\n        client {\n          html\n          text\n        }\n        location {\n          html\n          text\n        }\n        project_title {\n          html\n          text\n        }\n        team {\n          html\n          text\n        }\n        year {\n          html\n          text\n        }\n        categories {\n          category {\n            slug\n            id\n          }\n        }\n        body1 {\n          ... on PrismicProjectDataBody1Image {\n            id\n            slice_type\n            primary {\n              image {\n                gatsbyImageData\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1Text {\n            id\n            slice_type\n            primary {\n              text {\n                html\n                text\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1Video {\n            id\n            slice_type\n            primary {\n              index_image {\n                gatsbyImageData\n              }\n              sml_video {\n                url\n              }\n              video {\n                url\n              }\n            }\n          }\n          ... on PrismicProjectDataBody1VideoWithPlayButton {\n            id\n            slice_type\n            primary {\n              small_video_with_play_button {\n                url\n              }\n              video_with_play_button {\n                url\n              }\n              video_thumbnail {\n                gatsbyImageData\n                dimensions {\n                  height\n                  width\n                }\n              }\n            }\n          }\n        }\n\n        related_projects_group {\n          related_projects {\n            uid\n            document {\n              ... on PrismicProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n              ... on PrismicFilmLeadProject {\n                uid\n                id\n                type\n                data {\n                  project_title {\n                    text\n                  }\n                  index_preview_img {\n                    gatsbyImageData\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction WhiteLogo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:#fff;}\")),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m-.62,1h254.56v52.03h-98.04v254.13h-58.48V53.03H-.62V1Z\",\"key\":1}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m382.51,80.12c24.08,0,43.07,6.95,56.98,20.85,13.9,13.91,20.85,33.61,20.85,59.12v147.06h-54.18v-138.03c0-28.09-13.91-42.14-41.71-42.14-13.76,0-25.44,4.94-35.04,14.83-9.61,9.89-14.41,23.58-14.41,41.07v124.27h-54.18V1h54.18v113.95c16.91-23.22,39.41-34.83,67.51-34.83Z\",\"key\":2}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m687.81,200.09v12.9h-165.98c2,18.92,7.96,33.18,17.85,42.79,9.89,9.61,23.15,14.4,39.77,14.4,24.65,0,41.56-10.6,50.74-31.82h52.03c-5.74,22.65-17.78,40.63-36.12,53.96-18.35,13.33-40.71,20-67.08,20-32.97,0-59.63-10.6-79.98-31.82-20.36-21.21-30.53-49.3-30.53-84.28s10.03-63.06,30.1-84.28c20.35-21.21,46.87-31.82,79.55-31.82s60.2,11.04,79.98,33.11c19.78,22.08,29.67,51.03,29.67,86.86Zm-110.08-77.83c-31.82,0-50.31,17.63-55.47,52.89h111.37c-2.3-16.34-8.32-29.24-18.06-38.7-9.75-9.46-22.36-14.19-37.84-14.19Z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m890.34,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":4}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1233.04,1v52.03h-158.24v72.24h144.05v49.88h-144.05v132.01h-58.05V1h216.29Z\",\"key\":5}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1423.96,280.5c-20.64,21.22-47.88,31.82-81.7,31.82s-61.06-10.6-81.7-31.82c-20.93-20.92-31.39-49.02-31.39-84.28s10.46-63.35,31.39-84.28c20.64-21.21,47.87-31.82,81.7-31.82s61.06,10.47,81.7,31.39c20.64,20.93,30.96,49.17,30.96,84.71s-10.32,63.07-30.96,84.28Zm-124.05-31.39c10.17,12.33,24.29,18.49,42.35,18.49s32.18-6.24,42.36-18.71c10.17-12.47,15.26-30.03,15.26-52.68s-5.09-40.2-15.26-52.67c-10.18-12.47-24.29-18.7-42.36-18.7s-32.18,6.17-42.35,18.49c-10.18,12.33-15.27,29.96-15.27,52.89s5.09,40.57,15.27,52.89Z\",\"key\":6}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1581.77,81.84c4.87,0,9.31.29,13.33.86v49.88h-13.76c-20.64,0-36.48,5.23-47.51,15.7-11.04,10.47-16.55,25.87-16.55,46.22v112.66h-54.18V85.28h52.46v39.56c12.32-28.66,34.4-43,66.22-43Z\",\"key\":7}),React.createElement(\"path\",{\"className\":\"cls-1\",\"d\":\"m1755.49,114.09V1h54.18v306.16h-52.46v-30.96c-16.34,24.08-39.71,36.12-70.09,36.12s-54.9-10.6-72.67-31.82c-18.06-21.21-27.09-49.3-27.09-84.28s9.03-63.78,27.09-84.71c17.48-20.92,41.71-31.39,72.67-31.39s52.6,11.33,68.37,33.97Zm-112.66,83.85c0,22.94,5.01,40.28,15.05,52.03,10.03,11.76,23.93,17.63,41.71,17.63s31.82-6.16,42.14-18.49c10.03-12.32,15.05-29.95,15.05-52.89s-5.02-40.56-15.05-52.89c-10.04-12.32-24.08-18.49-42.14-18.49s-31.32,6.45-41.49,19.35c-10.18,12.9-15.27,30.82-15.27,53.75Z\",\"key\":8})]);\n}\n\nWhiteLogo.defaultProps = {\"id\":\"Layer_1\",\"viewBox\":\"0 0 1810 322.5\"};\n\nmodule.exports = WhiteLogo;\n\nWhiteLogo.default = WhiteLogo;\n"],"names":["getActiveRepositoryName","repositoryName","decodeURIComponent","getPreviewCookie","match","getDocument","prismicId","usePrismicPreviewStore","getState","documents","readValue","value","replace","cookies","document","cookie","split","parts","slice","join","hasOwnProperty","obj","prop","mergePreviewData","_ref","staticDataNode","publishedDocumentIDs","castedData","Array","isArray","map","element","replacement","_previewable","length","includes","newNode","key","withPrismicPreview","WrappedComponent","props","isBootstrapped","state","isPrismicPreview","setIsPrismicPreview","React","mergedData","staticData","hasPreviewData","Object","keys","useMergePrismicPreviewData","data","abortController","AbortController","then","mod","default","abort","jsx","originalData","useOnScreen","ref","isOnScreen","setIsOnScreen","useState","observerRef","useRef","useEffect","current","IntersectionObserver","entry","isIntersecting","observe","disconnect","AutoplayVideoCon","styled","div","withConfig","displayName","componentId","AutoplayVideoImg","AutoplayVideoVideo","video","AutoplayVideoImgCon","breatheAnimation","keyframes","AutoplayVideoTextCon","AutoPlayVideo","srcProps","posterProps","changedSlide","autoplayVideoRef","videoSrcState","setVideoSrcState","isVideoLoaded","setIsVideoLoaded","load","play","getPosterImage","getImage","style","opacity","position","srcSet","GatsbyImage","image","playsInline","autoPlay","muted","loop","onLoadedData","type","src","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addListener","removeListener","LogoGridCon","LogoConCon","MenuCon","LogoCon","DesktopNavP","p","MobileLeftCol","MobileRightCol","MobileNavP","NavGrid","isPageWide","currentPage","setCurrentPage","LogoConRef","outputString","location","href","PageLoad","Link","to","Icon","className","pageLoad","setPageLoad","onPageLoad","console","log","readyState","addEventListener","removeEventListener","VideoCon","VideoConInner","ControlsCon","LengthCon","pageColour","PlayPauseButtonCon","PlayCon","PauseButtonImgCon","PlayButtonText","PlayButtonImgCon","VideoWithContolsSC","VideoControlsImgCon","VideoProjectPage","img","format","time","hrs","mins","secs","ret","String","padStart","PlayButtonImg","StaticImage","__imageData","require","PauseButtonImg","VideoRef","isPlaying","setPlayingStatus","hasStartedPlaying","setHasStartedPlaying","vidDuration","setVidDuration","getImageVal","ImageOrientation2","onClick","playPause","pause","preload","onCanPlayThrough","zIndex","pointerEvents","onLoadedMetadata","handleLoadedMetadata","duration","pauseVideo","playVideo","x","dimensions","height","width","isImageSmlPortrait","isImageLrgPortrait","isImageSquare","PageConCon","PageCon","Grid8","Table","TableRow","TableTitle","TableContent","BodyTextCon","SquareImage","ProjectPageAutoPlayVideoCon","CategoryName","span","RelatedProjectsCon","RelatedProjectsTitle","RelatedProjectsProjectCon","RelatedProjectProjectTitle","RelatedProjectsImg","projectBody","prismicProject","body1","content","index","slice_type","primary","dangerouslySetInnerHTML","__html","text","html","posterImgProps","index_image","url","sml_video","video_with_play_button","video_thumbnail","small_video_with_play_button","RelatedProjects","related_projects_group","related_projects","index_preview_img","uid","project_title","RelatedProjects2","Helmet","client","categories","category","slug","year","team","WhiteLogo","createElement","defaultProps","module","exports"],"sourceRoot":""}