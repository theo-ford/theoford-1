import e from"fs";import r from"path";import{GraphQLInputObjectType as t,GraphQLInt as a,GraphQLFloat as i,GraphQLBoolean as s,GraphQLString as o,GraphQLNonNull as n,GraphQLObjectType as l,GraphQLList as m}from"gatsby/graphql";import{of as c}from"fp-ts/lib/Task";import{chain as p,rightTask as d,right as u,tryCatch as g,taskEither as f,fold as h,map as y,getOrElseW as x}from"fp-ts/lib/TaskEither";import{pipe as b}from"fp-ts/lib/pipeable";import{cons as P,map as v,uniq as w,sort as U}from"fp-ts/lib/Array";import{fromNullable as S,fold as I,some as T}from"fp-ts/lib/Option";import{reduceWithIndex as W,filter as k,filterMap as R}from"fp-ts/lib/Record";import{eqNumber as A}from"fp-ts/lib/Eq";import{ordNumber as $}from"fp-ts/lib/Ord";import j from"node-fetch";import L from"md5";import{getObjectSemigroup as H}from"fp-ts/lib/Semigroup";import{flow as F}from"fp-ts/lib/function";import M from"imgix-url-params/dist/parameters.json";import{camelCase as V}from"camel-case";import{sequenceT as z}from"fp-ts/lib/Apply";function E(e,r,t){e||t.panic("Invariant failed: "+r)}const _=()=>{},B=(e,r)=>{const t=new URL("https://"+r);return t.pathname=encodeURIComponent(e),t.toString()},O=(e="",r)=>`${e}${r}`,q=(e,r,t)=>b(((e,r)=>()=>r.get(e).then(e=>S(e)))(e,r),d,p(I(F(t,p(F(((e,r)=>t=>()=>r.set(e,t).then(()=>t))(e,r),e=>d(e)))),u))),N=e=>g(()=>j(e),e=>new Error(String(e))),C=(F(N,p(e=>d(()=>e.buffer())),p(e=>u(e.toString("base64")))),H()),D=e=>r=>r.join(e),G=(e,r)=>t=>g(()=>Promise.resolve(e(t)).then(e=>null==e?Promise.reject("Resolved data is null or undefined"):r?r(e)?e:Promise.reject("Resolved data is invalid."):e),e=>new Error(String(e))),J=[1,1.5,2],K=[.25,.5,1.5,2],Q={w:100,blur:15,q:20},X=(e,r)=>t=>b(t,R(e=>T(void 0===e?void 0:String(e))),(e=>r=>{const t=new URL(e),a=b(r,W([],(e,r,t)=>void 0===t?P(e,r):r)),i=b(r,k(e=>void 0!==e)),s=((e,r)=>{const t=new URLSearchParams(e.toString());return r.forEach((e,r)=>{null==e?t.delete(r):t.set(r,e)}),t})(t.searchParams,new URLSearchParams(i));return s.forEach((e,r)=>{a.includes(r)&&s.delete(r)}),t.search=s.toString(),t.toString()})(e),(e=>r=>b(e,I(()=>r,e=>{return b(r,e=>{const r=new URL(e);return r.searchParams.delete("s"),r.toString()},(t=(e=>r=>b(new URL(r),r=>e+r.pathname+r.search,L))(e)(r),e=>{const r=new URL(e);return r.searchParams.append("s",String(t)),r.toString()}));var t})))(S(r))),Y=(e,r)=>t=>b(C.concat(Q,t),X(e,r)),Z=new t({name:"ImgixUrlParamsInput",fields:Object.keys(M.parameters).reduce((e,r)=>{const t=M.parameters[r],n=V(r),l=Array.from(new Set(t.expects.map(e=>e.type))),m=l.every(e=>"integer"===e||"unit_scalar"===e)?a:l.every(e=>"integer"===e||"unit_scalar"===e||"number"===e)?i:l.every(e=>"boolean"===e)?s:o;if(e[n]={type:m,description:t.short_description+("."===t.short_description.slice(-1)?"":".")},"default"in t&&(e[n].description=e[n].description+` Default: \`${t.default}\`.`),"url"in t&&(e[n].description=e[n].description+` [See docs](${t.url}).`),"aliases"in t)for(const r of t.aliases)e[V(r)]={...e[n],description:`Alias for \`${n}\`.`};return e},{})}),ee=z(f),re=(e,r,t,a,i)=>s=>b(ee(G(r)(e),G(t)(e)),h(()=>b(s,((e,r)=>t=>q("gatsby-plugin-imgix-metadata-"+t,e,()=>b({fm:"json"},X(t,r),e=>(e=>b(e,N,p(e=>d(()=>e.json()))))(e))))(a,i),y(({PixelWidth:e,PixelHeight:r})=>[e,r])),u)),te=({resolveUrl:e=(e=>e.base64),cache:r})=>({type:new n(o),resolve:t=>b(t,G(e),p((e=>r=>q("gatsby-plugin-imgix-base64-url-"+r,e,()=>b(r,N,p(e=>b(d(()=>e.buffer()),p(e=>u(e.toString("base64"))),p(r=>u(((e,r)=>`data:${e};base64,${r}`)(String(e.headers.get("content-type")),r))))))))(r)),h(()=>c(void 0),c))()}),ae=e=>(({type:e,resolveUrl:r,resolveWidth:t=_,resolveHeight:i=_,secureUrlToken:s,cache:o,defaultImgixParams:n,defaultPlaceholderImgixParams:l})=>({type:e,args:{width:{type:a,defaultValue:400},height:{type:a},imgixParams:{type:Z,defaultValue:{}},placeholderImgixParams:{type:Z,defaultValue:{}}},resolve:(e,a)=>b(e,G(r,e=>"string"==typeof e),p(r=>b(r,re(e,t,i,o,s),y(([e,t])=>(({url:e,sourceWidth:r,sourceHeight:t,secureUrlToken:a,args:i={}})=>{const s=r/t;let o,n;null!=i.width&&null!=i.height?(o=i.width,n=i.height):null!=i.width?(o=i.width,n=Math.round(o/s)):null!=i.height?(o=Math.round(i.height*s),n=i.height):(o=400,n=Math.round(o/s));const l=Y(e,a)({...i.imgixParams,...i.placeholderImgixParams}),m=X(e,a)({...i.imgixParams,w:o,h:n}),c=((e,r)=>t=>b(J,v(a=>b(C.concat(t,{dpr:a}),X(e,r),e=>`${e} ${a}x`)),D(", ")))(e,a)({...i.imgixParams,w:o,h:n});return{base64:l,width:o,height:n,src:m,srcWebp:m,srcSet:c,srcSetWebp:c}})({url:r,sourceWidth:e,sourceHeight:t,secureUrlToken:s,args:{...a,imgixParams:{...n,...a.imgixParams},placeholderImgixParams:{...l,...a.placeholderImgixParams}}})))),x(()=>c(void 0)))()}))(e),ie=e=>(({type:e,resolveUrl:r,resolveWidth:t=_,resolveHeight:i=_,secureUrlToken:s,cache:o,defaultImgixParams:n,defaultPlaceholderImgixParams:l})=>({type:e,args:{maxWidth:{type:a,defaultValue:800},maxHeight:{type:a},srcSetBreakpoints:{type:new m(a)},imgixParams:{type:Z,defaultValue:{}},placeholderImgixParams:{type:Z,defaultValue:{}}},resolve:(e,a)=>b(e,G(r,e=>"string"==typeof e),p(r=>b(r,re(e,t,i,o,s),y(([e,t])=>(({url:e,sourceWidth:r,sourceHeight:t,secureUrlToken:a,args:i={}})=>{var s,o;const n=r/t,l=null!==(s=i.maxWidth)&&void 0!==s?s:800,m=Y(e,a)({...i.imgixParams,...i.placeholderImgixParams}),c=X(e,a)({...i.imgixParams,w:l,h:i.maxHeight}),p=((e,r)=>t=>({aspectRatio:a,maxWidth:i,srcSetBreakpoints:s=K.map(e=>i*e)})=>b(P(i,s),w(A),U($),v(i=>b(C.concat(t,{w:Math.round(i),h:Math.round(i/a)}),X(e,r),e=>`${e} ${Math.round(i)}w`)),D(", ")))(e,a)(null!==(o=i.imgixParams)&&void 0!==o?o:{})({aspectRatio:n,maxWidth:l,srcSetBreakpoints:i.srcSetBreakpoints});return{base64:m,aspectRatio:n,src:c,srcWebp:c,srcSet:p,srcSetWebp:p,sizes:""}})({url:r,sourceWidth:e,sourceHeight:t,secureUrlToken:s,args:{...a,imgixParams:{...n,...a.imgixParams},placeholderImgixParams:{...l,...a.placeholderImgixParams}}})))),x(()=>c(void 0)))()}))(e);var se;!function(e){e.AmazonS3="s3",e.GoogleCloudStorange="gcs",e.MicrosoftAzure="azure",e.WebFolder="webFolder",e.WebProxy="webProxy"}(se||(se={}));const oe=async(e,r)=>{const{node:t,actions:a,reporter:i}=e,{createNodeField:s}=a,{domain:o,secureUrlToken:n,sourceType:l,fields:m=[]}=r;E(Array.isArray(m),"fields must be an array of field options",i);const c=m.filter(e=>e.nodeType===t.internal.type);if(!(c.length<1))for(const e of c){let r=void 0;"getUrl"in e?(r=e.getUrl(t),E(null==r||"string"==typeof r,"getUrl must return a URL string",i)):"getUrls"in e&&(r=e.getUrls(t),E(Array.isArray(r),"getUrls must return an array of URLs",i)),r&&(l===se.WebProxy&&(E(void 0!==o,"an Imgix domain must be provided if sourceType is webProxy",i),E(void 0!==n,"a secure URL token must be provided if sourceType is webProxy",i),r=Array.isArray(r)?r.map(e=>B(e,o)):B(r,o)),s({node:t,name:e.fieldName,value:r}))}},ne=async(e,r)=>{const{actions:t,cache:s,schema:m,reporter:p}=e,{createTypes:d}=t,{secureUrlToken:u,sourceType:g,namespace:f,defaultImgixParams:x,defaultPlaceholderImgixParams:P,fields:v=[]}=r;E(Array.isArray(v),"fields must be an array of field options",p),E(g!==se.WebProxy||Boolean(u),"a secure URL token must be provided if sourceType is webProxy",p);const w=(({name:e,cache:r})=>new l({name:e,fields:{base64:te({cache:r}),src:{type:new n(o)},srcSet:{type:new n(o)},srcWebp:{type:new n(o)},srcSetWebp:{type:new n(o)},sizes:{type:new n(o)},width:{type:new n(a)},height:{type:new n(a)}}}))({name:O(f,"ImgixFixed"),cache:s}),U=(({name:e,cache:r})=>new l({name:e,fields:{base64:te({cache:r}),src:{type:new n(o)},srcSet:{type:new n(o)},srcWebp:{type:new n(o)},srcSetWebp:{type:new n(o)},sizes:{type:new n(o)},aspectRatio:{type:new n(i)}}}))({name:O(f,"ImgixFluid"),cache:s}),S=m.buildObjectType({name:O(f,"ImgixImage"),fields:{url:(T={resolveUrl:e=>e,secureUrlToken:u,defaultImgixParams:x},(({resolveUrl:e,secureUrlToken:r,defaultImgixParams:t={}})=>({type:o,args:{imgixParams:{type:Z,defaultValue:{}}},resolve:(a,i)=>b(a,G(e),y(e=>{var a;return b(C.concat(t,null!==(a=i.imgixParams)&&void 0!==a?a:{}),X(e,r))}),h(()=>c(void 0),c))()}))(T)),fixed:ae({type:w,resolveUrl:e=>e,secureUrlToken:u,defaultImgixParams:x,defaultPlaceholderImgixParams:P,cache:s}),fluid:ie({type:U,resolveUrl:e=>e,secureUrlToken:u,defaultImgixParams:x,defaultPlaceholderImgixParams:P,cache:s})}}),I=v.map(e=>m.buildObjectType({name:e.nodeType+"Fields",fields:{[e.fieldName]:{type:"getUrls"in e?`[${S.config.name}]`:S.config.name}}}));var T;d([w,U]),d(S),d(I)},le=t=>{const{store:a}=t,{program:i}=a.getState();e.copyFileSync(r.resolve(__dirname,"../fragments.js"),r.resolve(i.directory,".cache/fragments/gatsby-plugin-imgix-fragments.js"))};export{ne as createSchemaCustomization,oe as onCreateNode,le as onPreExtractQueries};
//# sourceMappingURL=gatsby-node.modern.js.map
