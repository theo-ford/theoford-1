import{cons as r,map as t,uniq as e,sort as i}from"fp-ts/lib/Array";import{fold as o,some as a,fromNullable as s}from"fp-ts/lib/Option";import{reduceWithIndex as n,filter as m,filterMap as c}from"fp-ts/lib/Record";import{eqNumber as h}from"fp-ts/lib/Eq";import{ordNumber as p}from"fp-ts/lib/Ord";import{pipe as l}from"fp-ts/lib/pipeable";import d from"node-fetch";import u from"md5";import{chain as g,rightTask as f,right as S,tryCatch as b}from"fp-ts/lib/TaskEither";import{getObjectSemigroup as w}from"fp-ts/lib/Semigroup";import{flow as x}from"fp-ts/lib/function";const P=(r,t)=>{const e=new URL("https://"+t);return e.pathname=encodeURIComponent(r),e.toString()},R=(x(r=>b(()=>d(r),r=>new Error(String(r))),g(r=>f(()=>r.buffer())),g(r=>S(r.toString("base64")))),w()),U=r=>t=>t.join(r),W=[1,1.5,2],v=[.25,.5,1.5,2],L={w:100,blur:15,q:20},k=(t,e)=>i=>l(i,c(r=>a(void 0===r?void 0:String(r))),(t=>e=>{const i=new URL(t),o=l(e,n([],(t,e,i)=>void 0===i?r(t,e):e)),a=l(e,m(r=>void 0!==r)),s=((r,t)=>{const e=new URLSearchParams(r.toString());return t.forEach((r,t)=>{null==r?e.delete(t):e.set(t,r)}),e})(i.searchParams,new URLSearchParams(a));return s.forEach((r,t)=>{o.includes(t)&&s.delete(t)}),i.search=s.toString(),i.toString()})(t),(r=>t=>l(r,o(()=>t,r=>{return l(t,r=>{const t=new URL(r);return t.searchParams.delete("s"),t.toString()},(e=(r=>t=>l(new URL(t),t=>r+t.pathname+t.search,u))(r)(t),r=>{const t=new URL(r);return t.searchParams.append("s",String(e)),t.toString()}));var e})))(s(e))),M=(r,t)=>e=>l(R.concat(L,e),k(r,t)),E=({url:r,sourceWidth:e,sourceHeight:i,secureUrlToken:o,args:a={}})=>{const s=e/i;let n,m;null!=a.width&&null!=a.height?(n=a.width,m=a.height):null!=a.width?(n=a.width,m=Math.round(n/s)):null!=a.height?(n=Math.round(a.height*s),m=a.height):(n=400,m=Math.round(n/s));const c=M(r,o)({...a.imgixParams,...a.placeholderImgixParams}),h=k(r,o)({...a.imgixParams,w:n,h:m}),p=((r,e)=>i=>l(W,t(t=>l(R.concat(i,{dpr:t}),k(r,e),r=>`${r} ${t}x`)),U(", ")))(r,o)({...a.imgixParams,w:n,h:m});return{base64:c,width:n,height:m,src:h,srcWebp:h,srcSet:p,srcSetWebp:p}},$=({url:o,sourceWidth:a,sourceHeight:s,secureUrlToken:n,args:m={}})=>{var c,d;const u=a/s,g=null!==(c=m.maxWidth)&&void 0!==c?c:800,f=M(o,n)({...m.imgixParams,...m.placeholderImgixParams}),S=k(o,n)({...m.imgixParams,w:g,h:m.maxHeight}),b=((o,a)=>s=>({aspectRatio:n,maxWidth:m,srcSetBreakpoints:c=v.map(r=>m*r)})=>l(r(m,c),e(h),i(p),t(r=>l(R.concat(s,{w:Math.round(r),h:Math.round(r/n)}),k(o,a),t=>`${t} ${Math.round(r)}w`)),U(", ")))(o,n)(null!==(d=m.imgixParams)&&void 0!==d?d:{})({aspectRatio:u,maxWidth:g,srcSetBreakpoints:m.srcSetBreakpoints});return{base64:f,aspectRatio:u,src:S,srcWebp:S,srcSet:b,srcSetWebp:b,sizes:""}};export{E as buildImgixFixed,$ as buildImgixFluid,k as buildImgixUrl,P as transformUrlForWebProxy};
//# sourceMappingURL=gatsby-plugin-imgix.modern.js.map
