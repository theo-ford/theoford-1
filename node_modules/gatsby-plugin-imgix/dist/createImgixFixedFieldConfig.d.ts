import { GatsbyCache } from 'gatsby';
import { GraphQLFieldConfig, GraphQLObjectType } from 'gatsby/graphql';
import { FixedObject } from 'gatsby-image';
import { ComposeFieldConfigAsObject } from 'graphql-compose';
import { ImgixFixedArgs, ImgixUrlParams } from './types';
import { ImgixSourceDataResolver } from './shared';
interface CreateImgixFixedTypeArgs {
    name: string;
    cache: GatsbyCache;
}
export declare const createImgixFixedType: ({ name, cache, }: CreateImgixFixedTypeArgs) => GraphQLObjectType<FixedObject>;
interface CreateImgixFixedFieldConfigArgs<TSource> {
    type: GraphQLObjectType<FixedObject>;
    resolveUrl: ImgixSourceDataResolver<TSource, string>;
    resolveWidth?: ImgixSourceDataResolver<TSource, number>;
    resolveHeight?: ImgixSourceDataResolver<TSource, number>;
    secureUrlToken?: string;
    cache: GatsbyCache;
    defaultImgixParams?: ImgixUrlParams;
    defaultPlaceholderImgixParams?: ImgixUrlParams;
}
export declare const createImgixFixedFieldConfig: <TSource, TContext>({ type, resolveUrl, resolveWidth, resolveHeight, secureUrlToken, cache, defaultImgixParams, defaultPlaceholderImgixParams, }: CreateImgixFixedFieldConfigArgs<TSource>) => GraphQLFieldConfig<TSource, TContext, ImgixFixedArgs>;
export declare const createImgixFixedSchemaFieldConfig: <TSource, TContext>(args: CreateImgixFixedFieldConfigArgs<TSource>) => ComposeFieldConfigAsObject<TSource, TContext, ImgixFixedArgs>;
export {};
