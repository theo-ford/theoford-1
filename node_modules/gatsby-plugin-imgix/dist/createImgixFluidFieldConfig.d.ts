import { GatsbyCache } from 'gatsby';
import { GraphQLFieldConfig, GraphQLObjectType } from 'gatsby/graphql';
import { FluidObject } from 'gatsby-image';
import { ComposeFieldConfigAsObject } from 'graphql-compose';
import { ImgixFluidArgs, ImgixUrlParams } from './types';
import { ImgixSourceDataResolver } from './shared';
interface CreateImgixFluidTypeArgs {
    name: string;
    cache: GatsbyCache;
}
export declare const createImgixFluidType: ({ name, cache, }: CreateImgixFluidTypeArgs) => GraphQLObjectType<FluidObject>;
interface CreateImgixFluidFieldConfigArgs<TSource> {
    type: GraphQLObjectType<FluidObject>;
    resolveUrl: ImgixSourceDataResolver<TSource, string>;
    resolveWidth?: ImgixSourceDataResolver<TSource, number>;
    resolveHeight?: ImgixSourceDataResolver<TSource, number>;
    secureUrlToken?: string;
    cache: GatsbyCache;
    defaultImgixParams?: ImgixUrlParams;
    defaultPlaceholderImgixParams?: ImgixUrlParams;
}
export declare const createImgixFluidFieldConfig: <TSource, TContext>({ type, resolveUrl, resolveWidth, resolveHeight, secureUrlToken, cache, defaultImgixParams, defaultPlaceholderImgixParams, }: CreateImgixFluidFieldConfigArgs<TSource>) => GraphQLFieldConfig<TSource, TContext, ImgixFluidArgs>;
export declare const createImgixFluidSchemaFieldConfig: <TSource, TContext>(args: CreateImgixFluidFieldConfigArgs<TSource>) => ComposeFieldConfigAsObject<TSource, TContext, ImgixFluidArgs>;
export {};
