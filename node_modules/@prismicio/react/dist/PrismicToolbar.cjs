'use client';
'use client';
"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const React = require("react");
const getToolbarSrc = require('./_node_modules/@prismicio/client/dist/getToolbarSrc.cjs');
require("@prismicio/richtext");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const React__namespace = /* @__PURE__ */ _interopNamespaceDefault(React);
const PrismicToolbar = ({ repositoryName }) => {
  const src = getToolbarSrc.getToolbarSrc(repositoryName);
  React__namespace.useEffect(() => {
    const existingScript = document.querySelector(`script[src="${src}"]`);
    if (!existingScript) {
      const script = document.createElement("script");
      script.src = src;
      script.defer = true;
      script.dataset.prismicToolbar = "";
      script.dataset.repositoryName = repositoryName;
      if (typeof process !== "undefined" && process.env.NODE_ENV === "test") {
        script._evaluateScript = false;
      }
      document.body.appendChild(script);
    }
  }, [repositoryName, src]);
  return null;
};
exports.PrismicToolbar = PrismicToolbar;
//# sourceMappingURL=PrismicToolbar.cjs.map
