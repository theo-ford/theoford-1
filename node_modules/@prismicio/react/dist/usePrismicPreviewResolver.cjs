"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const React = require("react");
const usePrismicContext = require("./usePrismicContext.cjs");
const useStatefulPrismicClientMethod = require("./useStatefulPrismicClientMethod.cjs");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const React__namespace = /* @__PURE__ */ _interopNamespaceDefault(React);
const usePrismicPreviewResolver = (args = {}) => {
  const context = usePrismicContext.usePrismicContext();
  const linkResolver = args.linkResolver || context.linkResolver;
  const result = useStatefulPrismicClientMethod.useStatefulPrismicClientMethod("resolvePreviewURL", [
    {
      linkResolver,
      defaultURL: args.defaultURL || "/",
      previewToken: args.previewToken,
      documentID: args.documentID
    }
  ], args.client);
  const [resolvedURL] = result;
  const { navigate } = args;
  React__namespace.useEffect(() => {
    if (resolvedURL && navigate) {
      navigate(resolvedURL);
    }
  }, [resolvedURL, navigate]);
  return result;
};
exports.usePrismicPreviewResolver = usePrismicPreviewResolver;
//# sourceMappingURL=usePrismicPreviewResolver.cjs.map
