import * as React from "react";
import * as prismic from "@prismicio/client";
import { ImgixURLParams } from "imgix-url-builder";
/**
 * Props for `<PrismicImage>`.
 */
export type PrismicImageProps = Omit<React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>, "src" | "srcset" | "alt"> & {
    /**
     * The Prismic Image field or thumbnail to render.
     */
    field: prismic.ImageFieldImage | null | undefined;
    /**
     * An object of Imgix URL API parameters to transform the image.
     *
     * See: https://docs.imgix.com/apis/rendering
     */
    imgixParams?: {
        [P in keyof ImgixURLParams]: ImgixURLParams[P] | null;
    };
    /**
     * Declare an image as decorative by providing `alt=""`.
     *
     * See:
     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
     */
    alt?: "";
    /**
     * Declare an image as decorative only if the Image field does not have
     * alternative text by providing `fallbackAlt=""`.
     *
     * See:
     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
     */
    fallbackAlt?: "";
} & ({
    /**
     * Widths used to build a `srcset` value for the Image field.
     *
     * If a `widths` prop is not given or `"defaults"` is passed, the
     * following widths will be used: 640, 750, 828, 1080, 1200, 1920, 2048,
     * 3840.
     *
     * If the Image field contains responsive views, each responsive view
     * can be used as a width in the resulting `srcset` by passing
     * `"thumbnails"` as the `widths` prop.
     */
    widths?: NonNullable<Parameters<typeof prismic.asImageWidthSrcSet>[1]>["widths"] | "defaults";
    /**
     * Not used when the `widths` prop is used.
     */
    pixelDensities?: never;
} | {
    /**
     * Not used when the `widths` prop is used.
     */
    widths?: never;
    /**
     * Pixel densities used to build a `srcset` value for the Image field.
     *
     * If a `pixelDensities` prop is passed `"defaults"`, the following
     * pixel densities will be used: 1, 2, 3.
     */
    pixelDensities: NonNullable<Parameters<typeof prismic.asImagePixelDensitySrcSet>[1]>["pixelDensities"] | "defaults";
});
/**
 * React component that renders an image from a Prismic Image field or one of
 * its thumbnails. It will automatically set the `alt` attribute using the Image
 * field's `alt` property.
 *
 * By default, a widths-based srcset will be used to support responsive images.
 * This ensures only the smallest image needed for a browser is downloaded.
 *
 * To use a pixel-density-based srcset, use the `pixelDensities` prop. Default
 * pixel densities can be used by using `pixelDensities="defaults"`.
 *
 * **Note**: If you are using a framework that has a native image component,
 * such as Next.js and Gatsby, prefer using those image components instead. They
 * can provide deeper framework integration than `<PrismicImage>`.
 *
 * @param props - Props for the component.
 *
 * @returns A responsive image component for the given Image field.
 */
export declare const PrismicImage: React.ForwardRefExoticComponent<(Omit<Omit<React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>, "src" | "alt" | "srcset"> & {
    /**
     * The Prismic Image field or thumbnail to render.
     */
    field: prismic.ImageFieldImage | null | undefined;
    /**
     * An object of Imgix URL API parameters to transform the image.
     *
     * See: https://docs.imgix.com/apis/rendering
     */
    imgixParams?: {
        ar?: `${number}:${number}` | null | undefined;
        auto?: ("true" | "enhance" | "format" | "redeye" | "compress")[] | null | undefined;
        bg?: string | null | undefined;
        blendAlign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        blendalign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        ba?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        blendAlpha?: number | null | undefined;
        blendalpha?: number | null | undefined;
        balph?: number | null | undefined;
        blendColor?: string | null | undefined;
        blendcolor?: string | null | undefined;
        blendClr?: string | null | undefined;
        blendclr?: string | null | undefined;
        blendCrop?: ("faces" | "top" | "bottom" | "left" | "right")[] | null | undefined;
        blendcrop?: ("faces" | "top" | "bottom" | "left" | "right")[] | null | undefined;
        bc?: ("faces" | "top" | "bottom" | "left" | "right")[] | null | undefined;
        blendFit?: "crop" | "clamp" | "clip" | "scale" | "max" | null | undefined;
        blendfit?: "crop" | "clamp" | "clip" | "scale" | "max" | null | undefined;
        bf?: "crop" | "clamp" | "clip" | "scale" | "max" | null | undefined;
        blendH?: number | null | undefined;
        blendh?: number | null | undefined;
        bh?: number | null | undefined;
        blendMode?: "color" | "hue" | "burn" | "dodge" | "darken" | "difference" | "exclusion" | "hardlight" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "softlight" | "normal" | null | undefined;
        blendmode?: "color" | "hue" | "burn" | "dodge" | "darken" | "difference" | "exclusion" | "hardlight" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "softlight" | "normal" | null | undefined;
        bm?: "color" | "hue" | "burn" | "dodge" | "darken" | "difference" | "exclusion" | "hardlight" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "softlight" | "normal" | null | undefined;
        blendPad?: number | null | undefined;
        blendpad?: number | null | undefined;
        bp?: number | null | undefined;
        blendSize?: "inherit" | null | undefined;
        blendsize?: "inherit" | null | undefined;
        bs?: "inherit" | null | undefined;
        blendW?: number | null | undefined;
        blendw?: number | null | undefined;
        bw?: number | null | undefined;
        blendX?: number | null | undefined;
        blendx?: number | null | undefined;
        bx?: number | null | undefined;
        blendY?: number | null | undefined;
        blendy?: number | null | undefined;
        by?: number | null | undefined;
        blend?: string | null | undefined;
        b?: string | null | undefined;
        blur?: number | null | undefined;
        borderBottom?: number | null | undefined;
        borderLeft?: number | null | undefined;
        borderRadiusInner?: number | [number, number, number, number] | null | undefined;
        borderRadius?: number | [number, number, number, number] | null | undefined;
        borderRight?: number | null | undefined;
        borderTop?: number | null | undefined;
        border?: [number, string] | null | undefined;
        bri?: number | null | undefined;
        ch?: ("width" | "dpr" | "save-data")[] | null | undefined;
        chromasub?: 444 | 422 | 420 | null | undefined;
        colorquant?: number | null | undefined;
        colors?: number | null | undefined;
        con?: number | null | undefined;
        cornerRadius?: number | [number, number, number, number] | null | undefined;
        crop?: ("faces" | "top" | "bottom" | "left" | "right" | "entropy" | "edges" | "focalpoint")[] | null | undefined;
        cs?: "srgb" | "adobergb1998" | "tinysrgb" | "strip" | null | undefined;
        dl?: string | null | undefined;
        dpi?: number | null | undefined;
        dpr?: number | null | undefined;
        duotoneAlpha?: number | null | undefined;
        duotone?: [string, string] | null | undefined;
        exp?: number | null | undefined;
        expires?: number | null | undefined;
        faceindex?: number | null | undefined;
        facepad?: number | null | undefined;
        faces?: 1 | null | undefined;
        fillColor?: string | null | undefined;
        fillcolor?: string | null | undefined;
        fill?: "blur" | "solid" | null | undefined;
        fit?: "crop" | "fill" | "clamp" | "clip" | "scale" | "max" | "facearea" | "fillmax" | "min" | null | undefined;
        f?: "crop" | "fill" | "clamp" | "clip" | "scale" | "max" | "facearea" | "fillmax" | "min" | null | undefined;
        flip?: "h" | "v" | "hv" | null | undefined;
        fm?: "gif" | "jpg" | "jp2" | "json" | "jxr" | "pjpg" | "mp4" | "png" | "png8" | "png32" | "webp" | "webm" | "blurhash" | "avif" | null | undefined;
        fpDebug?: boolean | null | undefined;
        fpX?: number | null | undefined;
        fpY?: number | null | undefined;
        fpZ?: number | null | undefined;
        gam?: number | null | undefined;
        gridColors?: [string, string] | null | undefined;
        gridSize?: number | null | undefined;
        h?: number | null | undefined;
        height?: number | null | undefined;
        high?: number | null | undefined;
        htn?: number | null | undefined;
        hue?: number | null | undefined;
        invert?: boolean | null | undefined;
        inv?: boolean | null | undefined;
        iptc?: "allow" | "block" | null | undefined;
        lossless?: boolean | null | undefined;
        markAlign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        ma?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        markalign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        markAlpha?: number | null | undefined;
        markalpha?: number | null | undefined;
        malph?: number | null | undefined;
        markBase?: string | null | undefined;
        mb?: string | null | undefined;
        markbase?: string | null | undefined;
        markFit?: "crop" | "fill" | "clip" | "scale" | "max" | null | undefined;
        mf?: "crop" | "fill" | "clip" | "scale" | "max" | null | undefined;
        markfit?: "crop" | "fill" | "clip" | "scale" | "max" | null | undefined;
        markH?: number | null | undefined;
        mh?: number | null | undefined;
        markh?: number | null | undefined;
        markPad?: number | null | undefined;
        mp?: number | null | undefined;
        markpad?: number | null | undefined;
        markRot?: number | null | undefined;
        markScale?: number | null | undefined;
        ms?: number | null | undefined;
        markscale?: number | null | undefined;
        markTile?: "grid" | null | undefined;
        mtile?: "grid" | null | undefined;
        marktile?: "grid" | null | undefined;
        markW?: number | null | undefined;
        mw?: number | null | undefined;
        markw?: number | null | undefined;
        markX?: number | null | undefined;
        mx?: number | null | undefined;
        markx?: number | null | undefined;
        markY?: number | null | undefined;
        my?: number | null | undefined;
        marky?: number | null | undefined;
        mark?: string | null | undefined;
        m?: string | null | undefined;
        maskBg?: string | null | undefined;
        maskbg?: string | null | undefined;
        mask?: string | null | undefined;
        maxH?: number | null | undefined;
        maxHeight?: number | null | undefined;
        maxW?: number | null | undefined;
        maxWidth?: number | null | undefined;
        minH?: number | null | undefined;
        minHeight?: number | null | undefined;
        minW?: number | null | undefined;
        minWidth?: number | null | undefined;
        monochrome?: string | null | undefined;
        mono?: string | null | undefined;
        nr?: number | null | undefined;
        nrs?: number | null | undefined;
        orient?: 0 | 1 | 2 | 4 | 3 | 5 | 6 | 7 | 8 | 90 | 180 | 270 | null | undefined;
        or?: 0 | 1 | 2 | 4 | 3 | 5 | 6 | 7 | 8 | 90 | 180 | 270 | null | undefined;
        padBottom?: number | null | undefined;
        padLeft?: number | null | undefined;
        padRight?: number | null | undefined;
        padTop?: number | null | undefined;
        pad?: number | null | undefined;
        page?: number | null | undefined;
        palette?: "json" | "css" | null | undefined;
        pdfAnnotation?: boolean | null | undefined;
        annotation?: boolean | null | undefined;
        prefix?: string | null | undefined;
        px?: number | null | undefined;
        q?: number | null | undefined;
        rect?: [number | "left" | "right" | "center", number | "top" | "bottom" | "middle", number, number] | null | undefined;
        rot?: number | null | undefined;
        sat?: number | null | undefined;
        sepia?: number | null | undefined;
        shad?: number | null | undefined;
        sharp?: number | null | undefined;
        transparency?: "grid" | null | undefined;
        trimColor?: string | null | undefined;
        trimcolor?: string | null | undefined;
        trimMd?: number | null | undefined;
        trimmd?: number | null | undefined;
        trimPad?: number | null | undefined;
        trimpad?: number | null | undefined;
        trimSd?: number | null | undefined;
        trimsd?: number | null | undefined;
        trimTol?: number | null | undefined;
        trimtol?: number | null | undefined;
        trim?: "color" | "auto" | null | undefined;
        txtAlign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        txtalign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        ta?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        txtClip?: ("middle" | "start" | "end" | "ellipsis")[] | null | undefined;
        txtclip?: ("middle" | "start" | "end" | "ellipsis")[] | null | undefined;
        tcl?: ("middle" | "start" | "end" | "ellipsis")[] | null | undefined;
        txtColor?: string | null | undefined;
        txtcolor?: string | null | undefined;
        txtClr?: string | null | undefined;
        txtclr?: string | null | undefined;
        tc?: string | null | undefined;
        txtFit?: "max" | null | undefined;
        txtfit?: "max" | null | undefined;
        txtFont?: import("imgix-url-builder").Font | null | undefined;
        tf?: import("imgix-url-builder").Font | null | undefined;
        txtfont?: import("imgix-url-builder").Font | null | undefined;
        txtLead?: number | null | undefined;
        txtlead?: number | null | undefined;
        txtLig?: 0 | 1 | 2 | null | undefined;
        txtlig?: 0 | 1 | 2 | null | undefined;
        txtLineColor?: string | null | undefined;
        txtlinecolor?: string | null | undefined;
        txtLineClr?: string | null | undefined;
        txtlineclr?: string | null | undefined;
        txtLine?: number | null | undefined;
        txtline?: number | null | undefined;
        tl?: number | null | undefined;
        txtPad?: number | null | undefined;
        txtpad?: number | null | undefined;
        tp?: number | null | undefined;
        txtShad?: number | null | undefined;
        txtshad?: number | null | undefined;
        tsh?: number | null | undefined;
        txtSize?: number | null | undefined;
        tsz?: number | null | undefined;
        txtsize?: number | null | undefined;
        txtTrack?: number | null | undefined;
        txttrack?: number | null | undefined;
        tt?: number | null | undefined;
        txtWidth?: number | null | undefined;
        txtwidth?: number | null | undefined;
        txt?: string | null | undefined;
        t?: string | null | undefined;
        usm?: number | null | undefined;
        usmrad?: number | null | undefined;
        vib?: number | null | undefined;
        w?: number | null | undefined;
        width?: number | null | undefined;
        s?: string | null | undefined;
    } | undefined;
    /**
     * Declare an image as decorative by providing `alt=""`.
     *
     * See:
     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
     */
    alt?: "" | undefined;
    /**
     * Declare an image as decorative only if the Image field does not have
     * alternative text by providing `fallbackAlt=""`.
     *
     * See:
     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
     */
    fallbackAlt?: "" | undefined;
} & {
    /**
     * Widths used to build a `srcset` value for the Image field.
     *
     * If a `widths` prop is not given or `"defaults"` is passed, the
     * following widths will be used: 640, 750, 828, 1080, 1200, 1920, 2048,
     * 3840.
     *
     * If the Image field contains responsive views, each responsive view
     * can be used as a width in the resulting `srcset` by passing
     * `"thumbnails"` as the `widths` prop.
     */
    widths?: NonNullable<Parameters<typeof prismic.asImageWidthSrcSet>[1]>["widths"] | "defaults";
    /**
     * Not used when the `widths` prop is used.
     */
    pixelDensities?: undefined;
}, "ref"> | Omit<Omit<React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>, "src" | "alt" | "srcset"> & {
    /**
     * The Prismic Image field or thumbnail to render.
     */
    field: prismic.ImageFieldImage | null | undefined;
    /**
     * An object of Imgix URL API parameters to transform the image.
     *
     * See: https://docs.imgix.com/apis/rendering
     */
    imgixParams?: {
        ar?: `${number}:${number}` | null | undefined;
        auto?: ("true" | "enhance" | "format" | "redeye" | "compress")[] | null | undefined;
        bg?: string | null | undefined;
        blendAlign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        blendalign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        ba?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        blendAlpha?: number | null | undefined;
        blendalpha?: number | null | undefined;
        balph?: number | null | undefined;
        blendColor?: string | null | undefined;
        blendcolor?: string | null | undefined;
        blendClr?: string | null | undefined;
        blendclr?: string | null | undefined;
        blendCrop?: ("faces" | "top" | "bottom" | "left" | "right")[] | null | undefined;
        blendcrop?: ("faces" | "top" | "bottom" | "left" | "right")[] | null | undefined;
        bc?: ("faces" | "top" | "bottom" | "left" | "right")[] | null | undefined;
        blendFit?: "crop" | "clamp" | "clip" | "scale" | "max" | null | undefined;
        blendfit?: "crop" | "clamp" | "clip" | "scale" | "max" | null | undefined;
        bf?: "crop" | "clamp" | "clip" | "scale" | "max" | null | undefined;
        blendH?: number | null | undefined;
        blendh?: number | null | undefined;
        bh?: number | null | undefined;
        blendMode?: "color" | "hue" | "burn" | "dodge" | "darken" | "difference" | "exclusion" | "hardlight" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "softlight" | "normal" | null | undefined;
        blendmode?: "color" | "hue" | "burn" | "dodge" | "darken" | "difference" | "exclusion" | "hardlight" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "softlight" | "normal" | null | undefined;
        bm?: "color" | "hue" | "burn" | "dodge" | "darken" | "difference" | "exclusion" | "hardlight" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "softlight" | "normal" | null | undefined;
        blendPad?: number | null | undefined;
        blendpad?: number | null | undefined;
        bp?: number | null | undefined;
        blendSize?: "inherit" | null | undefined;
        blendsize?: "inherit" | null | undefined;
        bs?: "inherit" | null | undefined;
        blendW?: number | null | undefined;
        blendw?: number | null | undefined;
        bw?: number | null | undefined;
        blendX?: number | null | undefined;
        blendx?: number | null | undefined;
        bx?: number | null | undefined;
        blendY?: number | null | undefined;
        blendy?: number | null | undefined;
        by?: number | null | undefined;
        blend?: string | null | undefined;
        b?: string | null | undefined;
        blur?: number | null | undefined;
        borderBottom?: number | null | undefined;
        borderLeft?: number | null | undefined;
        borderRadiusInner?: number | [number, number, number, number] | null | undefined;
        borderRadius?: number | [number, number, number, number] | null | undefined;
        borderRight?: number | null | undefined;
        borderTop?: number | null | undefined;
        border?: [number, string] | null | undefined;
        bri?: number | null | undefined;
        ch?: ("width" | "dpr" | "save-data")[] | null | undefined;
        chromasub?: 444 | 422 | 420 | null | undefined;
        colorquant?: number | null | undefined;
        colors?: number | null | undefined;
        con?: number | null | undefined;
        cornerRadius?: number | [number, number, number, number] | null | undefined;
        crop?: ("faces" | "top" | "bottom" | "left" | "right" | "entropy" | "edges" | "focalpoint")[] | null | undefined;
        cs?: "srgb" | "adobergb1998" | "tinysrgb" | "strip" | null | undefined;
        dl?: string | null | undefined;
        dpi?: number | null | undefined;
        dpr?: number | null | undefined;
        duotoneAlpha?: number | null | undefined;
        duotone?: [string, string] | null | undefined;
        exp?: number | null | undefined;
        expires?: number | null | undefined;
        faceindex?: number | null | undefined;
        facepad?: number | null | undefined;
        faces?: 1 | null | undefined;
        fillColor?: string | null | undefined;
        fillcolor?: string | null | undefined;
        fill?: "blur" | "solid" | null | undefined;
        fit?: "crop" | "fill" | "clamp" | "clip" | "scale" | "max" | "facearea" | "fillmax" | "min" | null | undefined;
        f?: "crop" | "fill" | "clamp" | "clip" | "scale" | "max" | "facearea" | "fillmax" | "min" | null | undefined;
        flip?: "h" | "v" | "hv" | null | undefined;
        fm?: "gif" | "jpg" | "jp2" | "json" | "jxr" | "pjpg" | "mp4" | "png" | "png8" | "png32" | "webp" | "webm" | "blurhash" | "avif" | null | undefined;
        fpDebug?: boolean | null | undefined;
        fpX?: number | null | undefined;
        fpY?: number | null | undefined;
        fpZ?: number | null | undefined;
        gam?: number | null | undefined;
        gridColors?: [string, string] | null | undefined;
        gridSize?: number | null | undefined;
        h?: number | null | undefined;
        height?: number | null | undefined;
        high?: number | null | undefined;
        htn?: number | null | undefined;
        hue?: number | null | undefined;
        invert?: boolean | null | undefined;
        inv?: boolean | null | undefined;
        iptc?: "allow" | "block" | null | undefined;
        lossless?: boolean | null | undefined;
        markAlign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        ma?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        markalign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        markAlpha?: number | null | undefined;
        markalpha?: number | null | undefined;
        malph?: number | null | undefined;
        markBase?: string | null | undefined;
        mb?: string | null | undefined;
        markbase?: string | null | undefined;
        markFit?: "crop" | "fill" | "clip" | "scale" | "max" | null | undefined;
        mf?: "crop" | "fill" | "clip" | "scale" | "max" | null | undefined;
        markfit?: "crop" | "fill" | "clip" | "scale" | "max" | null | undefined;
        markH?: number | null | undefined;
        mh?: number | null | undefined;
        markh?: number | null | undefined;
        markPad?: number | null | undefined;
        mp?: number | null | undefined;
        markpad?: number | null | undefined;
        markRot?: number | null | undefined;
        markScale?: number | null | undefined;
        ms?: number | null | undefined;
        markscale?: number | null | undefined;
        markTile?: "grid" | null | undefined;
        mtile?: "grid" | null | undefined;
        marktile?: "grid" | null | undefined;
        markW?: number | null | undefined;
        mw?: number | null | undefined;
        markw?: number | null | undefined;
        markX?: number | null | undefined;
        mx?: number | null | undefined;
        markx?: number | null | undefined;
        markY?: number | null | undefined;
        my?: number | null | undefined;
        marky?: number | null | undefined;
        mark?: string | null | undefined;
        m?: string | null | undefined;
        maskBg?: string | null | undefined;
        maskbg?: string | null | undefined;
        mask?: string | null | undefined;
        maxH?: number | null | undefined;
        maxHeight?: number | null | undefined;
        maxW?: number | null | undefined;
        maxWidth?: number | null | undefined;
        minH?: number | null | undefined;
        minHeight?: number | null | undefined;
        minW?: number | null | undefined;
        minWidth?: number | null | undefined;
        monochrome?: string | null | undefined;
        mono?: string | null | undefined;
        nr?: number | null | undefined;
        nrs?: number | null | undefined;
        orient?: 0 | 1 | 2 | 4 | 3 | 5 | 6 | 7 | 8 | 90 | 180 | 270 | null | undefined;
        or?: 0 | 1 | 2 | 4 | 3 | 5 | 6 | 7 | 8 | 90 | 180 | 270 | null | undefined;
        padBottom?: number | null | undefined;
        padLeft?: number | null | undefined;
        padRight?: number | null | undefined;
        padTop?: number | null | undefined;
        pad?: number | null | undefined;
        page?: number | null | undefined;
        palette?: "json" | "css" | null | undefined;
        pdfAnnotation?: boolean | null | undefined;
        annotation?: boolean | null | undefined;
        prefix?: string | null | undefined;
        px?: number | null | undefined;
        q?: number | null | undefined;
        rect?: [number | "left" | "right" | "center", number | "top" | "bottom" | "middle", number, number] | null | undefined;
        rot?: number | null | undefined;
        sat?: number | null | undefined;
        sepia?: number | null | undefined;
        shad?: number | null | undefined;
        sharp?: number | null | undefined;
        transparency?: "grid" | null | undefined;
        trimColor?: string | null | undefined;
        trimcolor?: string | null | undefined;
        trimMd?: number | null | undefined;
        trimmd?: number | null | undefined;
        trimPad?: number | null | undefined;
        trimpad?: number | null | undefined;
        trimSd?: number | null | undefined;
        trimsd?: number | null | undefined;
        trimTol?: number | null | undefined;
        trimtol?: number | null | undefined;
        trim?: "color" | "auto" | null | undefined;
        txtAlign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        txtalign?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        ta?: ("top" | "bottom" | "middle" | "left" | "right" | "center")[] | null | undefined;
        txtClip?: ("middle" | "start" | "end" | "ellipsis")[] | null | undefined;
        txtclip?: ("middle" | "start" | "end" | "ellipsis")[] | null | undefined;
        tcl?: ("middle" | "start" | "end" | "ellipsis")[] | null | undefined;
        txtColor?: string | null | undefined;
        txtcolor?: string | null | undefined;
        txtClr?: string | null | undefined;
        txtclr?: string | null | undefined;
        tc?: string | null | undefined;
        txtFit?: "max" | null | undefined;
        txtfit?: "max" | null | undefined;
        txtFont?: import("imgix-url-builder").Font | null | undefined;
        tf?: import("imgix-url-builder").Font | null | undefined;
        txtfont?: import("imgix-url-builder").Font | null | undefined;
        txtLead?: number | null | undefined;
        txtlead?: number | null | undefined;
        txtLig?: 0 | 1 | 2 | null | undefined;
        txtlig?: 0 | 1 | 2 | null | undefined;
        txtLineColor?: string | null | undefined;
        txtlinecolor?: string | null | undefined;
        txtLineClr?: string | null | undefined;
        txtlineclr?: string | null | undefined;
        txtLine?: number | null | undefined;
        txtline?: number | null | undefined;
        tl?: number | null | undefined;
        txtPad?: number | null | undefined;
        txtpad?: number | null | undefined;
        tp?: number | null | undefined;
        txtShad?: number | null | undefined;
        txtshad?: number | null | undefined;
        tsh?: number | null | undefined;
        txtSize?: number | null | undefined;
        tsz?: number | null | undefined;
        txtsize?: number | null | undefined;
        txtTrack?: number | null | undefined;
        txttrack?: number | null | undefined;
        tt?: number | null | undefined;
        txtWidth?: number | null | undefined;
        txtwidth?: number | null | undefined;
        txt?: string | null | undefined;
        t?: string | null | undefined;
        usm?: number | null | undefined;
        usmrad?: number | null | undefined;
        vib?: number | null | undefined;
        w?: number | null | undefined;
        width?: number | null | undefined;
        s?: string | null | undefined;
    } | undefined;
    /**
     * Declare an image as decorative by providing `alt=""`.
     *
     * See:
     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
     */
    alt?: "" | undefined;
    /**
     * Declare an image as decorative only if the Image field does not have
     * alternative text by providing `fallbackAlt=""`.
     *
     * See:
     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images
     */
    fallbackAlt?: "" | undefined;
} & {
    /**
     * Not used when the `widths` prop is used.
     */
    widths?: undefined;
    /**
     * Pixel densities used to build a `srcset` value for the Image field.
     *
     * If a `pixelDensities` prop is passed `"defaults"`, the following
     * pixel densities will be used: 1, 2, 3.
     */
    pixelDensities: NonNullable<Parameters<typeof prismic.asImagePixelDensitySrcSet>[1]>["pixelDensities"] | "defaults";
}, "ref">) & React.RefAttributes<HTMLImageElement>>;
