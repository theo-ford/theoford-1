"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const prismicR = require("@prismicio/richtext");
const PrismicRichText$1 = require("./react-server/PrismicRichText.cjs");
const usePrismicContext = require("./usePrismicContext.cjs");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const prismicR__namespace = /* @__PURE__ */ _interopNamespaceDefault(prismicR);
const PrismicRichText = function PrismicRichText2({ components, ...restProps }) {
  const context = usePrismicContext.usePrismicContext();
  const serializer = prismicR__namespace.composeSerializers(typeof components === "object" ? prismicR__namespace.wrapMapSerializer(components) : components, typeof context.richTextComponents === "object" ? prismicR__namespace.wrapMapSerializer(context.richTextComponents) : context.richTextComponents);
  return /* @__PURE__ */ jsxRuntime.jsx(PrismicRichText$1.PrismicRichText, { components: serializer, internalLinkComponent: context.internalLinkComponent, externalLinkComponent: context.externalLinkComponent, ...restProps });
};
exports.PrismicRichText = PrismicRichText;
//# sourceMappingURL=PrismicRichText.cjs.map
