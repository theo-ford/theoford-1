{"version":3,"file":"asText.cjs","sources":["../../../../../../node_modules/@prismicio/client/dist/helpers/asText.js"],"sourcesContent":["import { asText as asText$1 } from \"@prismicio/richtext\";\nconst asText = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrSeparator] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrSeparator === \"string\") {\n      config = {\n        separator: configObjectOrSeparator\n      };\n    } else {\n      config = { ...configObjectOrSeparator };\n    }\n    return asText$1(richTextField, config.separator);\n  } else {\n    return null;\n  }\n};\nexport {\n  asText\n};\n//# sourceMappingURL=asText.js.map\n"],"names":["asText$1"],"mappings":";;;AACK,MAAC,SAAS,CAAC,kBAAkB,wBAAwB;AACxD,MAAI,eAAe;AACjB,UAAM,CAAC,uBAAuB,IAAI;AAClC,QAAI;AACJ,QAAI,OAAO,4BAA4B,UAAU;AAC/C,eAAS;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,IACA,OAAW;AACL,eAAS,EAAE,GAAG;IACf;AACD,WAAOA,gBAAS,eAAe,OAAO,SAAS;AAAA,EACnD,OAAS;AACL,WAAO;AAAA,EACR;AACH;;","x_google_ignoreList":[0]}