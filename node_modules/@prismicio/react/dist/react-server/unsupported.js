function buildIncompatibleInServerComponentsErrorMessage(fnName) {
  return `${fnName} is not supported in Server Components. Remove ${fnName} in Server Components or add the "use client" directive to the component using ${fnName}.`;
}
function buildIncompatibleQueryHookInServerComponentsErrorMessage(fnName) {
  return `${fnName} is not supported in Server Components. Replace ${fnName} in Server Components with direct use of \`@prismicio/client\` (recommended) or add the "use client" directive to the component using the hook.`;
}
function PrismicProvider() {
  throw new Error(buildIncompatibleInServerComponentsErrorMessage("<PrismicProvider>"));
}
function usePrismicContext() {
  throw new Error(buildIncompatibleInServerComponentsErrorMessage("usePrismicContext()"));
}
function usePrismicClient() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicClient()"));
}
function usePrismicPreviewResolver() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicPreviewResolver()"));
}
function useAllPrismicDocumentsDangerously() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsDangerously()"));
}
function useAllPrismicDocumentsByEveryTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByEveryTag()"));
}
function useAllPrismicDocumentsByIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByIDs()"));
}
function useAllPrismicDocumentsBySomeTags() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsBySomeTags()"));
}
function useAllPrismicDocumentsByTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByTag()"));
}
function useAllPrismicDocumentsByType() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByType()"));
}
function useAllPrismicDocumentsByUIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByUIDs()"));
}
function useFirstPrismicDocument() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useFirstPrismicDocument()"));
}
function usePrismicDocumentByID() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentByID()"));
}
function usePrismicDocumentByUID() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentByUID()"));
}
function usePrismicDocuments() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocuments()"));
}
function usePrismicDocumentsByEveryTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByEveryTag()"));
}
function usePrismicDocumentsByIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByIDs()"));
}
function usePrismicDocumentsBySomeTags() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsBySomeTags()"));
}
function usePrismicDocumentsByTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByTag()"));
}
function usePrismicDocumentsByType() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByType()"));
}
function usePrismicDocumentsByUIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByUIDs()"));
}
function useSinglePrismicDocument() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useSinglePrismicDocument()"));
}
export {
  PrismicProvider,
  useAllPrismicDocumentsByEveryTag,
  useAllPrismicDocumentsByIDs,
  useAllPrismicDocumentsBySomeTags,
  useAllPrismicDocumentsByTag,
  useAllPrismicDocumentsByType,
  useAllPrismicDocumentsByUIDs,
  useAllPrismicDocumentsDangerously,
  useFirstPrismicDocument,
  usePrismicClient,
  usePrismicContext,
  usePrismicDocumentByID,
  usePrismicDocumentByUID,
  usePrismicDocuments,
  usePrismicDocumentsByEveryTag,
  usePrismicDocumentsByIDs,
  usePrismicDocumentsBySomeTags,
  usePrismicDocumentsByTag,
  usePrismicDocumentsByType,
  usePrismicDocumentsByUIDs,
  usePrismicPreviewResolver,
  useSinglePrismicDocument
};
//# sourceMappingURL=unsupported.js.map
