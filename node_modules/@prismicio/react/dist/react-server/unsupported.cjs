"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
function buildIncompatibleInServerComponentsErrorMessage(fnName) {
  return `${fnName} is not supported in Server Components. Remove ${fnName} in Server Components or add the "use client" directive to the component using ${fnName}.`;
}
function buildIncompatibleQueryHookInServerComponentsErrorMessage(fnName) {
  return `${fnName} is not supported in Server Components. Replace ${fnName} in Server Components with direct use of \`@prismicio/client\` (recommended) or add the "use client" directive to the component using the hook.`;
}
function PrismicProvider() {
  throw new Error(buildIncompatibleInServerComponentsErrorMessage("<PrismicProvider>"));
}
function usePrismicContext() {
  throw new Error(buildIncompatibleInServerComponentsErrorMessage("usePrismicContext()"));
}
function usePrismicClient() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicClient()"));
}
function usePrismicPreviewResolver() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicPreviewResolver()"));
}
function useAllPrismicDocumentsDangerously() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsDangerously()"));
}
function useAllPrismicDocumentsByEveryTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByEveryTag()"));
}
function useAllPrismicDocumentsByIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByIDs()"));
}
function useAllPrismicDocumentsBySomeTags() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsBySomeTags()"));
}
function useAllPrismicDocumentsByTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByTag()"));
}
function useAllPrismicDocumentsByType() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByType()"));
}
function useAllPrismicDocumentsByUIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useAllPrismicDocumentsByUIDs()"));
}
function useFirstPrismicDocument() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useFirstPrismicDocument()"));
}
function usePrismicDocumentByID() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentByID()"));
}
function usePrismicDocumentByUID() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentByUID()"));
}
function usePrismicDocuments() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocuments()"));
}
function usePrismicDocumentsByEveryTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByEveryTag()"));
}
function usePrismicDocumentsByIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByIDs()"));
}
function usePrismicDocumentsBySomeTags() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsBySomeTags()"));
}
function usePrismicDocumentsByTag() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByTag()"));
}
function usePrismicDocumentsByType() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByType()"));
}
function usePrismicDocumentsByUIDs() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("usePrismicDocumentsByUIDs()"));
}
function useSinglePrismicDocument() {
  throw new Error(buildIncompatibleQueryHookInServerComponentsErrorMessage("useSinglePrismicDocument()"));
}
exports.PrismicProvider = PrismicProvider;
exports.useAllPrismicDocumentsByEveryTag = useAllPrismicDocumentsByEveryTag;
exports.useAllPrismicDocumentsByIDs = useAllPrismicDocumentsByIDs;
exports.useAllPrismicDocumentsBySomeTags = useAllPrismicDocumentsBySomeTags;
exports.useAllPrismicDocumentsByTag = useAllPrismicDocumentsByTag;
exports.useAllPrismicDocumentsByType = useAllPrismicDocumentsByType;
exports.useAllPrismicDocumentsByUIDs = useAllPrismicDocumentsByUIDs;
exports.useAllPrismicDocumentsDangerously = useAllPrismicDocumentsDangerously;
exports.useFirstPrismicDocument = useFirstPrismicDocument;
exports.usePrismicClient = usePrismicClient;
exports.usePrismicContext = usePrismicContext;
exports.usePrismicDocumentByID = usePrismicDocumentByID;
exports.usePrismicDocumentByUID = usePrismicDocumentByUID;
exports.usePrismicDocuments = usePrismicDocuments;
exports.usePrismicDocumentsByEveryTag = usePrismicDocumentsByEveryTag;
exports.usePrismicDocumentsByIDs = usePrismicDocumentsByIDs;
exports.usePrismicDocumentsBySomeTags = usePrismicDocumentsBySomeTags;
exports.usePrismicDocumentsByTag = usePrismicDocumentsByTag;
exports.usePrismicDocumentsByType = usePrismicDocumentsByType;
exports.usePrismicDocumentsByUIDs = usePrismicDocumentsByUIDs;
exports.usePrismicPreviewResolver = usePrismicPreviewResolver;
exports.useSinglePrismicDocument = useSinglePrismicDocument;
//# sourceMappingURL=unsupported.cjs.map
