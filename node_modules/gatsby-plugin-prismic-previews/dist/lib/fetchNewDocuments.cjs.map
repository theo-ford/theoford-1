{"version":3,"file":"fetchNewDocuments.cjs","sources":["../../../src/lib/fetchNewDocuments.ts"],"sourcesContent":["import { Client, PrismicDocument, filter } from \"@prismicio/client\";\n\nimport { isReleasePreview } from \"./isReleasePreview\";\n\ntype FetchNewDocumentsArgs = {\n\tclient: Client;\n\tabortController: AbortController;\n};\n\nexport const fetchNewDocuments = async ({\n\tclient,\n\tabortController,\n}: FetchNewDocumentsArgs): Promise<PrismicDocument[]> => {\n\tconst signal = abortController.signal;\n\n\tconst first = await client.getFirst({ signal });\n\n\tif (isReleasePreview()) {\n\t\tconst rest = await client.dangerouslyGetAll({\n\t\t\tpredicates: [\n\t\t\t\tfilter.dateBetween(\n\t\t\t\t\t\"document.last_publication_date\",\n\t\t\t\t\tDate.parse(first.last_publication_date),\n\t\t\t\t\tDate.parse(first.last_publication_date) + 1000,\n\t\t\t\t),\n\t\t\t\tfilter.not(\"document.id\", first.id),\n\t\t\t],\n\t\t\tsignal,\n\t\t});\n\n\t\treturn [first, ...rest];\n\t} else {\n\t\treturn [first];\n\t}\n};\n"],"names":["client","isReleasePreview","filter"],"mappings":";;;;AASO,MAAM,oBAAoB,OAAO,EAAA,QACvCA,UACA,sBACuD;AACvD,QAAM,SAAS,gBAAgB;AAE/B,QAAM,QAAQ,MAAMA,SAAO,SAAS,EAAE,OAAQ,CAAA;AAE9C,MAAIC,qCAAoB;AACjB,UAAA,OAAO,MAAMD,SAAO,kBAAkB;AAAA,MAC3C,YAAY;AAAA,QACXE,OAAAA,OAAO,YACN,kCACA,KAAK,MAAM,MAAM,qBAAqB,GACtC,KAAK,MAAM,MAAM,qBAAqB,IAAI,GAAI;AAAA,QAE/CA,OAAAA,OAAO,IAAI,eAAe,MAAM,EAAE;AAAA,MAClC;AAAA,MACD;AAAA,IAAA,CACA;AAEM,WAAA,CAAC,OAAO,GAAG,IAAI;AAAA,EAAA,OAChB;AACN,WAAO,CAAC,KAAK;AAAA,EACb;AACF;;"}