"use strict";
const gatsby = require("gatsby");
const fmtLog = require("./fmtLog.cjs");
const getClient = require("./getClient.cjs");
const getPluginOptions = require("./getPluginOptions.cjs");
const getRepositoryConfig = require("./getRepositoryConfig.cjs");
const resolvePrismicPreview = async (repositoryName, abortController) => {
  const pluginOptions = getPluginOptions.getPluginOptions(repositoryName);
  if (!pluginOptions) {
    console.error(fmtLog.fmtLog(repositoryName, `Plugin options could not be found. Did you add "gatsby-plugin-prismic-previews" for this repository to your app's "gatsby-config.js" file?`));
    return;
  }
  const repositoryConfig = getRepositoryConfig.getRepositoryConfig(repositoryName);
  if (!repositoryConfig) {
    console.error(fmtLog.fmtLog(repositoryName, 'Repository configuration could not be found. Did you add <PrismicPreviewProvider> to your "gatsby-browser.js" and "gatsby-ssr.js"? It must contain a repository configuration object for this repository.'));
    return;
  }
  const client = getClient.getClient(pluginOptions);
  try {
    const path = await client.resolvePreviewURL({
      linkResolver: repositoryConfig.linkResolver,
      defaultURL: "/",
      signal: abortController.signal
    });
    if (!abortController.signal.aborted) {
      gatsby.navigate(path);
    }
  } catch (error) {
    if (!(error instanceof Error && error.name === "AbortError")) {
      throw error;
    }
  }
};
module.exports = resolvePrismicPreview;
//# sourceMappingURL=resolvePrismicPreview.cjs.map
