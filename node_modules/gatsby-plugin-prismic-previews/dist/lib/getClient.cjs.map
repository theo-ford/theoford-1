{"version":3,"file":"getClient.cjs","sources":["../../../src/lib/getClient.ts"],"sourcesContent":["import type { Client } from \"@prismicio/client\";\nimport { createClient as baseCreateClient } from \"@prismicio/client\";\n\nimport type { PluginOptions } from \"../types\";\n\nimport { usePrismicPreviewStore } from \"../usePrismicPreviewStore\";\n\nexport const getClient = (pluginOptions: PluginOptions): Client => {\n\tconst state = usePrismicPreviewStore.getState();\n\n\tif (state.client) {\n\t\treturn state.client;\n\t} else {\n\t\tconst client = baseCreateClient(\n\t\t\tpluginOptions.apiEndpoint || pluginOptions.repositoryName,\n\t\t\t{\n\t\t\t\taccessToken: pluginOptions.accessToken,\n\t\t\t\troutes: pluginOptions.routes,\n\t\t\t\tdefaultParams: {\n\t\t\t\t\tlang: pluginOptions.lang || \"*\",\n\t\t\t\t\tfetchLinks: pluginOptions.fetchLinks,\n\t\t\t\t\tgraphQuery: pluginOptions.graphQuery,\n\t\t\t\t\tpredicates: pluginOptions.predicates,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tstate.setClient(client);\n\n\t\treturn client;\n\t}\n};\n"],"names":["usePrismicPreviewStore","client","baseCreateClient"],"mappings":";;;;AAOa,MAAA,YAAY,CAAC,kBAAwC;AAC3D,QAAA,QAAQA,8CAAuB;AAErC,MAAI,MAAM,QAAQ;AACjB,WAAO,MAAM;AAAA,EAAA,OACP;AACN,UAAMC,WAASC,OAAAA,aACd,cAAc,eAAe,cAAc,gBAC3C;AAAA,MACC,aAAa,cAAc;AAAA,MAC3B,QAAQ,cAAc;AAAA,MACtB,eAAe;AAAA,QACd,MAAM,cAAc,QAAQ;AAAA,QAC5B,YAAY,cAAc;AAAA,QAC1B,YAAY,cAAc;AAAA,QAC1B,YAAY,cAAc;AAAA,MAC1B;AAAA,IAAA,CACD;AAGF,UAAM,UAAUD,QAAM;AAEf,WAAAA;AAAAA,EACP;AACF;;"}