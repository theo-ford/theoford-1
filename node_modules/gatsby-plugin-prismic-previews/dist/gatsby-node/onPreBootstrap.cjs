"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const path = require("path");
const getPublicModelsFileName = require("../lib/getPublicModelsFileName.cjs");
const fs = require("fs/promises");
const constants = require("../constants.cjs");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const path__namespace = /* @__PURE__ */ _interopNamespaceDefault(path);
const fs__namespace = /* @__PURE__ */ _interopNamespaceDefault(fs);
const onPreBootstrap = async (args) => {
  const publicModelsFileName = await getPublicModelsFileName.getPublicModelsFileName(args.cache);
  try {
    await fs__namespace.unlink(path__namespace.join("public", "static", publicModelsFileName));
  } catch {
  }
  await args.cache.del(constants.PUBLIC_MODELS_FILE_NAME_SEED_CACHE_KEY);
};
exports.onPreBootstrap = onPreBootstrap;
//# sourceMappingURL=onPreBootstrap.cjs.map
