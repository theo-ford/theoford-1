"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const React = require("react");
const getActiveRepositoryName = require("./lib/getActiveRepositoryName.cjs");
const getComponentDisplayName = require("./lib/getComponentDisplayName.cjs");
const _interopNamespaceDefaultOnly = (e) => Object.freeze(Object.defineProperty({ __proto__: null, default: e }, Symbol.toStringTag, { value: "Module" }));
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const React__namespace = /* @__PURE__ */ _interopNamespaceDefault(React);
const withPrismicUnpublishedPreview = (WrappedComponent) => {
  const WithPrismicUnpublishedPreview = (props) => {
    var _a;
    const [unpublishedData, setUnpublishedData] = React__namespace.useState({});
    const ResolvedComponent = unpublishedData.component || WrappedComponent;
    const data = React__namespace.useMemo(() => ({ ...props.data, ...unpublishedData.data }), [props.data, unpublishedData.data]);
    React__namespace.useEffect(() => {
      const abortController = new AbortController();
      const repositoryName = getActiveRepositoryName.getActiveRepositoryName();
      if (repositoryName) {
        Promise.all([
          Promise.resolve().then(() => /* @__PURE__ */ _interopNamespaceDefaultOnly(require("./lib/bootstrapPrismicPreview.cjs"))),
          Promise.resolve().then(() => /* @__PURE__ */ _interopNamespaceDefaultOnly(require("./lib/resolveUnpublishedPrismicPreview.cjs")))
        ]).then(([bootstrap, resolve]) => bootstrap.default(repositoryName, abortController).then(() => {
          var _a2;
          return resolve.default(repositoryName, abortController, setUnpublishedData, (_a2 = props.location) == null ? void 0 : _a2.pathname);
        }));
      }
      return () => abortController.abort();
    }, [(_a = props.location) == null ? void 0 : _a.pathname]);
    return /* @__PURE__ */ jsxRuntime.jsx(ResolvedComponent, { ...props, data });
  };
  if (process.env.NODE_ENV === "development") {
    const wrappedComponentName = getComponentDisplayName.getComponentDisplayName(WrappedComponent);
    WithPrismicUnpublishedPreview.displayName = `withPrismicUnpublishedPreview(${wrappedComponentName})`;
  }
  return WithPrismicUnpublishedPreview;
};
exports.withPrismicUnpublishedPreview = withPrismicUnpublishedPreview;
//# sourceMappingURL=withPrismicUnpublishedPreview.cjs.map
