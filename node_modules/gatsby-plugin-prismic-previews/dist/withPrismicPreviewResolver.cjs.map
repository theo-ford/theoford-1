{"version":3,"file":"withPrismicPreviewResolver.cjs","sources":["../../src/withPrismicPreviewResolver.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { getActiveRepositoryName } from \"./lib/getActiveRepositoryName\";\nimport { getComponentDisplayName } from \"./lib/getComponentDisplayName\";\n\nexport type WithPrismicPreviewResolverProps = {\n\tisPrismicPreview: boolean;\n};\n\nexport const withPrismicPreviewResolver = <TProps,>(\n\tWrappedComponent: React.ComponentType<TProps>,\n): React.ComponentType<TProps> => {\n\tconst WithPrismicPreviewResolver = (props: TProps): JSX.Element => {\n\t\tconst [isPrismicPreview, setIsPrismicPreview] = React.useState<\n\t\t\tboolean | null\n\t\t>(null);\n\n\t\tReact.useEffect(() => {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tconst repositoryName = getActiveRepositoryName();\n\t\t\tsetIsPrismicPreview(!!repositoryName);\n\n\t\t\tif (repositoryName) {\n\t\t\t\timport(\"./lib/resolvePrismicPreview\").then((mod) =>\n\t\t\t\t\tmod.default(repositoryName, abortController),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn () => abortController.abort();\n\t\t}, []);\n\n\t\treturn <WrappedComponent {...props} isPrismicPreview={isPrismicPreview} />;\n\t};\n\n\tif (process.env.NODE_ENV === \"development\") {\n\t\tconst wrappedComponentName = getComponentDisplayName(WrappedComponent);\n\t\tWithPrismicPreviewResolver.displayName = `withPrismicPreviewResolver(${wrappedComponentName})`;\n\t}\n\n\treturn WithPrismicPreviewResolver;\n};\n"],"names":["React","getActiveRepositoryName","jsx","getComponentDisplayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASa,MAAA,6BAA6B,CACzC,qBACgC;AAC1B,QAAA,6BAA6B,CAAC,UAA8B;AACjE,UAAM,CAAC,kBAAkB,mBAAmB,IAAIA,iBAAM,SAEpD,IAAI;AAENA,qBAAM,UAAU,MAAK;AACd,YAAA,kBAAkB,IAAI;AAE5B,YAAM,iBAAiBC,wBAAAA;AACH,0BAAA,CAAC,CAAC,cAAc;AAEpC,UAAI,gBAAgB;AACZ,0FAAA,iCAA6B,CAAA,CAAA,EAAE,KAAK,CAAC,QAC3C,IAAI,QAAQ,gBAAgB,eAAe,CAAC;AAAA,MAE7C;AAEM,aAAA,MAAM,gBAAgB;IAC9B,GAAG,CAAE,CAAA;AAEL,WAAQC,2BAAAA,IAAA,kBAAA,EAAiB,GAAI,OAAO,iBAAmC,CAAA;AAAA,EAAA;AAGpE,MAAA,QAAQ,IAAI,aAAa,eAAe;AACrC,UAAA,uBAAuBC,gDAAwB,gBAAgB;AACrE,+BAA2B,cAAc,8BAA8B;AAAA,EACvE;AAEM,SAAA;AACR;;"}