import { create } from "zustand";
const usePrismicPreviewStore = create()((set, get) => {
  return {
    repositoryConfigs: [],
    setRepositoryConfigs: (repositoryConfigs) => {
      set({ repositoryConfigs });
    },
    pluginOptions: {},
    addPluginOptions: (pluginOptions) => {
      set({
        pluginOptions: {
          ...get().pluginOptions,
          [pluginOptions.repositoryName]: pluginOptions
        }
      });
    },
    client: void 0,
    setClient: (client) => {
      set({ client });
    },
    documents: {},
    addDocument: (document) => {
      set({
        documents: {
          ...get().documents,
          [document.prismicId]: document
        }
      });
    },
    publishedDocumentIDs: [],
    setPublishedDocumentIDs: (publishedDocumentIDs) => {
      set({ publishedDocumentIDs });
    },
    isBootstrapped: false,
    setIsBootstrapped: (isBootstrapped) => {
      set({ isBootstrapped });
    },
    reset: () => {
      return set({
        repositoryConfigs: [],
        pluginOptions: {},
        client: void 0,
        documents: {},
        publishedDocumentIDs: [],
        isBootstrapped: false
      });
    }
  };
});
export {
  usePrismicPreviewStore
};
//# sourceMappingURL=usePrismicPreviewStore.js.map
