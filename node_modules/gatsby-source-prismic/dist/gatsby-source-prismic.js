function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=require("react"),r=require("es-cookie"),i=require("prismic-javascript"),n=require("camel-case"),o=require("superstruct"),s=require("pascal-case"),a=require("prismic-dom"),c=require("gatsby-plugin-imgix"),l=require("uuid"),u=e(require("md5")),d=e(require("lodash.pick")),m=e(require("lodash.omit")),p=e(require("lodash.isplainobject")),g=require("gatsby");function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e}).apply(this,arguments)}const y={repositoryName:o.string(),accessToken:o.optional(o.string()),releaseID:o.optional(o.string()),schemas:o.record(o.string(),o.object()),linkResolver:o.defaulted(o.func(),()=>()=>()=>{}),htmlSerializer:o.defaulted(o.func(),()=>()=>()=>{}),fetchLinks:o.defaulted(o.array(o.string()),[]),lang:o.defaulted(o.string(),"*"),typePathsFilenamePrefix:o.defaulted(o.string(),"prismic-typepaths---"),prismicToolbar:o.defaulted(o.union([o.boolean(),o.enums(["legacy"])]),!1),imageImgixParams:o.defaulted(o.record(o.string(),o.optional(o.union([o.string(),o.number(),o.boolean()]))),{auto:"format,compress",fit:"max",q:50}),imagePlaceholderImgixParams:o.defaulted(o.record(o.string(),o.optional(o.union([o.string(),o.number(),o.boolean()]))),{w:100,blur:15,q:20}),plugins:o.defaulted(o.empty(o.array()),[])},P=(o.object(h({},y,{shouldDownloadImage:o.defaulted(o.optional(o.func()),()=>()=>!1),webhookSecret:o.optional(o.string())})),o.object(h({},y,{pathResolver:o.optional(o.func()),schemasDigest:o.string()}))),v=function(e,t){try{const r={},i=Object.keys(t);return Promise.resolve(Promise.all(i.map(function(i){try{return Promise.resolve(e(t[i],i)).then(function(e){r[i]=e})}catch(e){return Promise.reject(e)}}))).then(function(){return r})}catch(e){return Promise.reject(e)}},f=e=>s.pascalCase("Prismic "+e,{transform:s.pascalCaseTransformMerge}),w="undefined"!=typeof window,b=e=>e.displayName||e.name||"Component",I=["alt","copyright","dimensions","url"],D=function(e,t){try{const r=function(e){const t=e.match(/^https?:\/\/([^.]+)\.(wroom\.(?:test|io)|prismic\.io)/);return t?t[0]+"/api/v2":"https://"+e+".prismic.io/api/v2"}(e);return Promise.resolve(i.getApi(r,{accessToken:t}))}catch(e){return Promise.reject(e)}};var E,S,x,T;!function(e){e.Any="Any",e.Document="Document",e.Media="Media",e.Web="Web"}(E||(E={})),function(e){e.Boolean="Boolean",e.Color="Color",e.Date="Date",e.Embed="Embed",e.GeoPoint="GeoPoint",e.Group="Group",e.Image="Image",e.Link="Link",e.Number="Number",e.Select="Select",e.Slice="Slice",e.Slices="Slices",e.StructuredText="StructuredText",e.Text="Text",e.Timestamp="Timestamp",e.UID="UID",e.AlternateLanguages="AlternateLanguages"}(S||(S={})),function(e){e.ID="ID",e.Boolean="Boolean",e.String="String",e.Float="Float",e.Date="Date",e.JSON="JSON",e.Link="PrismicLinkType",e.Image="PrismicImageType",e.ImageThumbnail="PrismicImageThumbnailType",e.ImageThumbnails="PrismicImageThumbnailsType",e.Embed="PrismicEmbedType",e.GeoPoint="PrismicGeoPointType",e.StructuredText="PrismicStructuredTextType",e.AllDocumentTypes="PrismicAllDocumentTypes",e.Group="Group",e.Slices="Slices",e.AlternateLanguages="AlternateLanguages"}(x||(x={})),function(e){e.List="list",e.Grid="grid"}(T||(T={}));const k=function(e,t,r,i,n){try{const{createNodeId:o,createNode:s,createContentDigest:a,typePaths:c,normalizeStructuredTextField:l,normalizeLinkField:u,normalizeImageField:p,normalizeSlicesField:g}=n;switch(((e,t)=>{const r=JSON.stringify(e),i=t.find(e=>JSON.stringify(e.path)===r);if(i)return/^\[.*GroupType\]$/.test(i.type)?x.Group:/^\[.*SlicesType\]$/.test(i.type)?x.Slices:i.type})([...r,e],c)){case x.Image:{const o=d(t,I),s=m(t,I);return Promise.resolve(p(e,o,r,i,n)).then(function(t){return Promise.resolve(v(function(t){try{return Promise.resolve(p(e,t,r,i,n))}catch(e){return Promise.reject(e)}},s)).then(function(e){return h({},t,{thumbnails:e})})})}case x.StructuredText:return Promise.resolve(l(e,t,r,i,n));case x.Link:return Promise.resolve(u(e,t,r,i,n));case x.Group:return Promise.resolve(N(t,[...r,e],i,n));case x.Slices:return Promise.resolve(Promise.all(t.map(function(t,c){try{const l=o(i.type+" "+i.id+" "+e+" "+c);return Promise.resolve(_(t.primary,[...r,e,t.slice_type,"primary"],i,n)).then(function(o){return Promise.resolve(N(t.items,[...r,e,t.slice_type,"items"],i,n)).then(function(r){var n;const c={id:l,slice_type:t.slice_type,slice_label:null!==(n=t.slice_label)&&void 0!==n?n:void 0,primary:o,items:r,internal:{type:f(i.type+" "+e+" "+t.slice_type),contentDigest:a(t)}};return s(c),c.id})})}catch(e){return Promise.reject(e)}}))).then(function(t){return Promise.resolve(g(e,t,[...r,e],i,n))});case x.AlternateLanguages:return Promise.resolve(Promise.all(t.map(function(t){try{return Promise.resolve(u(e,h({},t,{link_type:E.Document}),r,i,n))}catch(e){return Promise.reject(e)}})));default:return Promise.resolve(t)}}catch(e){return Promise.reject(e)}},_=(e={},t,r,i)=>v((e,n)=>k(n,e,t,r,i),e),N=(e=[],t,r,i)=>Promise.all(e.map(e=>_(e,t,r,i))),O=function(e,t){try{const{createNode:r,createContentDigest:i,createNodeId:n,pluginOptions:o}=t,{linkResolver:s}=o;let a=void 0;s&&(a=s({node:e}));const c=n(e.id),l=a?a(e):void 0;return Promise.resolve(_(e.data,[e.type,"data"],e,t)).then(function(n){return Promise.resolve(k("alternate_languages",e.alternate_languages,[e.type],e,t)).then(function(t){const o=h({},e,{id:c,prismicId:e.id,data:n,dataString:JSON.stringify(e.data),dataRaw:e.data,alternate_languages:t,url:l,internal:{type:f(e.type),contentDigest:i(e)},_previewable:e.id});return r(o),o.id})})}catch(e){return Promise.reject(e)}},L=function(e,t,r,i,n){try{const{pluginOptions:e}=n,r=t.url;if(!r)return Promise.resolve(t);const i=c.buildImgixFixed({url:r,sourceWidth:t.dimensions.width,sourceHeight:t.dimensions.height,args:{imgixParams:e.imageImgixParams,placeholderImgixParams:e.imagePlaceholderImgixParams}}),o=c.buildImgixFluid({url:r,sourceWidth:t.dimensions.width,sourceHeight:t.dimensions.height,args:{imgixParams:e.imageImgixParams,placeholderImgixParams:e.imagePlaceholderImgixParams}});return Promise.resolve(h({},t,{fixed:i,fluid:o}))}catch(e){return Promise.reject(e)}},R=function(e,t,r,i,n){try{function o(){return new Proxy(h({},t,{url:a.Link.url(t,d),document:m,raw:t}),{get:(e,r)=>"document"===r?t&&t.link_type===E.Document&&!t.isBroken&&m?l(m):null:e[r]})}const{createNodeId:r,pluginOptions:s,context:c}=n,{getNodeById:l}=c,{linkResolver:u}=s;let d=void 0;u&&(d=u({key:e,value:t,node:i}));let m=void 0;t&&t.link_type===E.Document&&t.id&&(m=r(t.id));const p=function(){if(t&&t.link_type===E.Document&&t.id&&!t.isBroken)return Promise.resolve(function(e,t){try{const{createNode:r,createNodeId:i,createContentDigest:n,pluginOptions:o,context:s}=t;if(e.link_type!==E.Document||!e.id||e.isBroken)return Promise.resolve();const{hasNodeById:a}=s,{repositoryName:c,accessToken:l,fetchLinks:u}=o,d=i(e.id);if(a(d))return Promise.resolve();r({id:d,internal:{type:f(e.type)+"__PLACEHOLDER",contentDigest:n(d)}});const m={};return u&&(m.fetchLinks=u),Promise.resolve(D(c,l)).then(function(r){return Promise.resolve(r.getByID(e.id,m)).then(function(e){return Promise.resolve(O(e,t)).then(function(){})})})}catch(e){return Promise.reject(e)}}(t,n)).then(function(){})}();return Promise.resolve(p&&p.then?p.then(o):o())}catch(e){return Promise.reject(e)}},j=(e,t,r,i,n)=>{const{context:o}=n,{hasNodeById:s,getNodeById:a}=o;return new Proxy(t,{get:(e,t)=>{const r=e[t];if(s(r)){const e=a(r);return h({},e,{__typename:e.internal.type})}return r}})},A=function(e,t,r,i,n){try{const{pluginOptions:r}=n,{linkResolver:o,htmlSerializer:s}=r;let c=void 0;o&&(c=o({key:e,value:t,node:i}));let l=void 0;return s&&(l=s({key:e,value:t,node:i})),Promise.resolve({html:a.RichText.asHtml(t,c,l),text:a.RichText.asText(t),raw:t})}catch(e){return Promise.reject(e)}};var C;!function(e){e.IS_NOT_PREVIEW="IS_NOT_PREVIEW",e.IS_PREVIEW="IS_PREVIEW",e.DOCUMENT_LOADED="DOCUMENT_LOADED",e.RESET="RESET"}(C||(C={}));const q={isPreview:void 0,isLoading:!1,previewData:void 0,path:void 0},B=(e,t)=>{switch(t.type){case C.IS_NOT_PREVIEW:return h({},e,{isPreview:!1,isLoading:!1});case C.IS_PREVIEW:return h({},e,{isPreview:!0,isLoading:!0});case C.DOCUMENT_LOADED:{if(!t.payload)return h({},e,{isPreview:!1,isLoading:!1});const{rootNode:r,path:i}=t.payload;return h({},e,{previewData:{[n.camelCase(r.internal.type)]:r},path:i,isPreview:!0,isLoading:!1})}case C.RESET:return q;default:throw new Error("Invalid error")}},M=e=>{const[n,s]=t.useReducer(B,q),a=t.useMemo(()=>{if(!w)return e;const t=window.__GATSBY_SOURCE_PRISMIC__[e.repositoryName];if(!t)throw new Error('Could not find plugin context for repository: "'+e.repositoryName+'". Check that a gatsby-source-plugin instance exists for that repository. ');return(e=>{const t=o.coerce(e,P);return o.assert(t,P),t})(h({},t.pluginOptions,{schemasDigest:t.schemasDigest,schemas:{}},e))},[e]),{token:c,documentId:d}=t.useMemo(()=>{var e,t;if(!w)return{};const r=new URLSearchParams(window.location.search);return{token:null!==(e=r.get("token"))&&void 0!==e?e:void 0,documentId:null!==(t=r.get("documentId"))&&void 0!==t?t:void 0}},[w?window.location.search:void 0]);t.useEffect(()=>{const e=Boolean(c&&d);s({type:e?C.IS_PREVIEW:C.IS_NOT_PREVIEW})},[c,d]);const m=t.useCallback(function(){try{if(!n.isPreview||!c||!d)return Promise.resolve();r.set(i.previewCookie,c);const e={};return a.fetchLinks&&(e.fetchLinks=a.fetchLinks),Promise.resolve(D(a.repositoryName,a.accessToken)).then(function(t){return Promise.resolve(t.getByID(d,e)).then(function(e){return Promise.resolve(fetch("/"+a.typePathsFilenamePrefix+a.schemasDigest+".json",{headers:{"Content-Type":"application/json"}})).then(function(t){return Promise.resolve(t.json()).then(function(t){const r=((e,t)=>{const r=new Map;return{createNode:e=>{r.set(e.id,e)},createNodeId:e=>l.v5(e,"638f7a53-c567-4eca-8fc1-b23efb1cfb2b"),createContentDigest:e=>u(JSON.stringify(e)),normalizeImageField:L,normalizeLinkField:R,normalizeSlicesField:j,normalizeStructuredTextField:A,typePaths:t,pluginOptions:e,context:{hasNodeById:e=>r.has(e),getNodeById:e=>r.get(e)}}})(a,t),{context:i}=r,{getNodeById:n}=i;return Promise.resolve(O(e,r)).then(function(t){var r;const i=n(t),o=null!==(r=a.pathResolver)&&void 0!==r?r:a.linkResolver,c=o?o({node:e})(e):void 0;s({type:C.DOCUMENT_LOADED,payload:{rootNode:i,path:c}})})})})})})}catch(e){return Promise.reject(e)}},[n.isPreview]);return t.useEffect(()=>{m()},[m]),n},G=(e,t)=>{if(p(e)){if(e._previewable===t._previewable)return t;if(e.prismicId===t.prismicId)return console.warn("Warning: Merging nested preview data using the prismicId field will be deprecated in gatsby-source-prismic v4.0.0.\n\nIf you are relying on this functionality, please update your GraphQL query to include the _previewable field on documents that should be previewable."),t;const r={};for(const i in e)r[i]=G(e[i],t);return r}return Array.isArray(e)?e.map(e=>G(e,t)):e},F=({staticData:e,previewData:t,strategy:r="traverseAndReplace"})=>{if(e||t){if(!e)return t;if(!t)return e;switch(r){case"rootReplaceOrInsert":return h({},e,t);case"traverseAndReplace":default:{const r=Object.keys(t)[0];return!e.hasOwnProperty(r)||e[r]._previewable||e[r].prismicId?G(e,t[r]):(console.warn("Warning: Merging preview data implicitly will be deprecated in gatsby-source-prismic v4.0.0.\n\nIf you are relying on this functionality, please update your GraphQL query to include the _previewable field on documents that should be previewable."),h({},e,t))}}}},W={};var U;!function(e){e[e.AddPage=0]="AddPage",e[e.EnablePreviews=1]="EnablePreviews",e[e.DisablePreviews=2]="DisablePreviews"}(U||(U={}));const z=e=>h({pages:W,enabled:!1},e),V=(e,t)=>{switch(t.type){case U.AddPage:return h({},e,{pages:h({},e.pages,{[t.payload.path]:t.payload.data}),enabled:!0});case U.EnablePreviews:return h({},e,{enabled:!0});case U.DisablePreviews:return h({},e,{enabled:!1})}},J=t.createContext([z(),()=>{}]),H=()=>t.useContext(J),Q=(e,r)=>{const i=i=>{const[n]=H(),o=i.data,s=n.pages[i.location.pathname],a=t.useMemo(()=>n.enabled?F({staticData:o,previewData:s,strategy:null==r?void 0:r.mergeStrategy}):o,[n.enabled,o,s]);return t.createElement(e,Object.assign({},i,{data:a}))};return i.displayName="withPreview("+b(e)+")",i};exports.PreviewStoreProvider=({children:e,initialPages:r=W,initialEnabled:i=!1})=>{const n=t.useReducer(V,z({pages:r,enabled:i}));return t.createElement(J.Provider,{value:n},e)},exports.mergePrismicPreviewData=F,exports.usePreviewStore=H,exports.usePrismicPreview=M,exports.withPreview=Q,exports.withPreviewResolver=(e,r)=>{const i=i=>{const[,n]=H(),{isLoading:o,isPreview:s,previewData:a,path:c}=M(r);return t.useEffect(()=>{s&&a&&c&&(n({type:U.AddPage,payload:{path:c,data:a}}),g.navigate(c))},[s,a,c,n]),t.createElement(e,Object.assign({},i,{isPreview:s,isLoading:o}))};return i.displayName="withPreviewResolver("+b(e)+")",i},exports.withUnpublishedPreview=(e,r)=>{const i=i=>{const[n]=H(),o=i.location.pathname;if(n.pages.hasOwnProperty(o)){const e=n.pages[o],s=e[Object.keys(e)[0]].type,a=r.templateMap[s];if(a)return t.createElement(a,Object.assign({},i));console.warn('gatsby-source-prismic - An unpublished preview was detected, but a template component could not be found for a custom type of "'+s+'". Check that the templateMap option in withUnpublishedPreview includes a component for "'+s+'". withUnpublishedPreview will yield to the wrapped component to render.')}return t.createElement(e,Object.assign({},i))};return i.displayName="withUnpublishedPreview("+b(e)+")",Q(i,{mergeStrategy:"rootReplaceOrInsert"})};
//# sourceMappingURL=gatsby-source-prismic.js.map
